'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:4.0.30319.296
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace Toyota.eCRB.SystemFrameworks.Core.iCROP.DataAccess

    '''<summary>
    '''Represents a strongly typed in-memory cache of data.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), _
     Global.System.Xml.Serialization.XmlRootAttribute("DealerDataSet"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")> _
    Partial Public Class DealerDataSet
        Inherits Global.System.Data.DataSet

        Private tableDEALER As DEALERDataTable

        Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.BeginInit()
            Me.InitClass()
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context, False)
            If (Me.IsBinarySerialized(info, context) = True) Then
                Me.InitVars(False)
                Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
                AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
                AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
                Return
            End If
            Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
            If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
                If (Not (ds.Tables("DEALER")) Is Nothing) Then
                    MyBase.Tables.Add(New DEALERDataTable(ds.Tables("DEALER")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars()
            Else
                Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            End If
            Me.GetSerializationData(info, context)
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False), _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
        Public ReadOnly Property DEALER() As DEALERDataTable
            Get
                Return Me.tableDEALER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.BrowsableAttribute(True), _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
        Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
            Get
                Return Me._schemaSerializationMode
            End Get
            Set(value As Global.System.Data.SchemaSerializationMode)
                Me._schemaSerializationMode = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
        Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
            Get
                Return MyBase.Tables
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
        Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
            Get
                Return MyBase.Relations
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub InitializeDerivedDataSet()
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataSet
            Dim cln As DealerDataSet = CType(MyBase.Clone, DealerDataSet)
            cln.InitVars()
            cln.SchemaSerializationMode = Me.SchemaSerializationMode
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function ShouldSerializeTables() As Boolean
            Return False
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function ShouldSerializeRelations() As Boolean
            Return False
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
            If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Me.Reset()
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXml(reader)
                If (Not (ds.Tables("DEALER")) Is Nothing) Then
                    MyBase.Tables.Add(New DEALERDataTable(ds.Tables("DEALER")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars()
            Else
                Me.ReadXml(reader)
                Me.InitVars()
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
            Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
            stream.Position = 0
            Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Overloads Sub InitVars()
            Me.InitVars(True)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Overloads Sub InitVars(ByVal initTable As Boolean)
            Me.tableDEALER = CType(MyBase.Tables("DEALER"), DEALERDataTable)
            If (initTable = True) Then
                If (Not (Me.tableDEALER) Is Nothing) Then
                    Me.tableDEALER.InitVars()
                End If
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.DataSetName = "DealerDataSet"
            Me.Prefix = ""
            Me.Namespace = "http://tempuri.org/DealerDataSet.xsd"
            Me.EnforceConstraints = True
            Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
            Me.tableDEALER = New DEALERDataTable()
            MyBase.Tables.Add(Me.tableDEALER)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function ShouldSerializeDEALER() As Boolean
            Return False
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
            If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
                Me.InitVars()
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim ds As DealerDataSet = New DealerDataSet()
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any.Namespace = ds.Namespace
            sequence.Items.Add(any)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Delegate Sub DEALERRowChangeEventHandler(ByVal sender As Object, ByVal e As DEALERRowChangeEvent)

        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(), _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
        Partial Public Class DEALERDataTable
            Inherits Global.System.Data.TypedTableBase(Of DEALERRow)

            Private columnDLRCD As Global.System.Data.DataColumn

            Private columnDLRNM_LOCAL As Global.System.Data.DataColumn

            Private columnDLRNM_ENG As Global.System.Data.DataColumn

            Private columnDLRNICNM_LOCAL As Global.System.Data.DataColumn

            Private columnDLRNICNM_EN As Global.System.Data.DataColumn

            Private columnADDR1_LOCAL As Global.System.Data.DataColumn

            Private columnADDR1_ENG As Global.System.Data.DataColumn

            Private columnADDR2_LOCAL As Global.System.Data.DataColumn

            Private columnADDR2_ENG As Global.System.Data.DataColumn

            Private columnPOSTNO As Global.System.Data.DataColumn

            Private columnTEL As Global.System.Data.DataColumn

            Private columnFAXNO As Global.System.Data.DataColumn

            Private columnDLRURL As Global.System.Data.DataColumn

            Private columnDLRNMPICT As Global.System.Data.DataColumn

            Private columnDLRLGPICT As Global.System.Data.DataColumn

            Private columnDUMMYDLRFLG As Global.System.Data.DataColumn

            Private columnDELFLG As Global.System.Data.DataColumn

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Sub New()
                MyBase.New()
                Me.TableName = "DEALER"
                Me.BeginInit()
                Me.InitClass()
                Me.EndInit()
            End Sub

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New()
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars()
            End Sub

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public ReadOnly Property DLRCDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDLRCD
                End Get
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public ReadOnly Property DLRNM_LOCALColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDLRNM_LOCAL
                End Get
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public ReadOnly Property DLRNM_ENGColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDLRNM_ENG
                End Get
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public ReadOnly Property DLRNICNM_LOCALColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDLRNICNM_LOCAL
                End Get
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public ReadOnly Property DLRNICNM_ENColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDLRNICNM_EN
                End Get
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public ReadOnly Property ADDR1_LOCALColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnADDR1_LOCAL
                End Get
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public ReadOnly Property ADDR1_ENGColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnADDR1_ENG
                End Get
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public ReadOnly Property ADDR2_LOCALColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnADDR2_LOCAL
                End Get
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public ReadOnly Property ADDR2_ENGColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnADDR2_ENG
                End Get
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public ReadOnly Property POSTNOColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPOSTNO
                End Get
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public ReadOnly Property TELColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTEL
                End Get
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public ReadOnly Property FAXNOColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnFAXNO
                End Get
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public ReadOnly Property DLRURLColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDLRURL
                End Get
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public ReadOnly Property DLRNMPICTColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDLRNMPICT
                End Get
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public ReadOnly Property DLRLGPICTColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDLRLGPICT
                End Get
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public ReadOnly Property DUMMYDLRFLGColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDUMMYDLRFLG
                End Get
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public ReadOnly Property DELFLGColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDELFLG
                End Get
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
             Global.System.ComponentModel.Browsable(False)> _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Default Public ReadOnly Property Item(ByVal index As Integer) As DEALERRow
                Get
                    Return CType(Me.Rows(index), DEALERRow)
                End Get
            End Property

            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Event DEALERRowChanging As DEALERRowChangeEventHandler

            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Event DEALERRowChanged As DEALERRowChangeEventHandler

            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Event DEALERRowDeleting As DEALERRowChangeEventHandler

            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Event DEALERRowDeleted As DEALERRowChangeEventHandler

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Overloads Sub AddDEALERRow(ByVal row As DEALERRow)
                Me.Rows.Add(row)
            End Sub

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Overloads Function AddDEALERRow( _
                        ByVal DLRCD As String, _
                        ByVal DLRNM_LOCAL As String, _
                        ByVal DLRNM_ENG As String, _
                        ByVal DLRNICNM_LOCAL As String, _
                        ByVal DLRNICNM_EN As String, _
                        ByVal ADDR1_LOCAL As String, _
                        ByVal ADDR1_ENG As String, _
                        ByVal ADDR2_LOCAL As String, _
                        ByVal ADDR2_ENG As String, _
                        ByVal POSTNO As String, _
                        ByVal TEL As String, _
                        ByVal FAXNO As String, _
                        ByVal DLRURL As String, _
                        ByVal DLRNMPICT As String, _
                        ByVal DLRLGPICT As String, _
                        ByVal DUMMYDLRFLG As String, _
                        ByVal DELFLG As String) As DEALERRow
                Dim rowDEALERRow As DEALERRow = CType(Me.NewRow, DEALERRow)
                Dim columnValuesArray() As Object = New Object() {DLRCD, DLRNM_LOCAL, DLRNM_ENG, DLRNICNM_LOCAL, DLRNICNM_EN, ADDR1_LOCAL, ADDR1_ENG, ADDR2_LOCAL, ADDR2_ENG, POSTNO, TEL, FAXNO, DLRURL, DLRNMPICT, DLRLGPICT, DUMMYDLRFLG, DELFLG}
                rowDEALERRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowDEALERRow)
                Return rowDEALERRow
            End Function

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Function FindByDLRCD(ByVal DLRCD As String) As DEALERRow
                Return CType(Me.Rows.Find(New Object() {DLRCD}), DEALERRow)
            End Function

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As DEALERDataTable = CType(MyBase.Clone, DEALERDataTable)
                cln.InitVars()
                Return cln
            End Function

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New DEALERDataTable()
            End Function

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Friend Sub InitVars()
                Me.columnDLRCD = MyBase.Columns("DLRCD")
                Me.columnDLRNM_LOCAL = MyBase.Columns("DLRNM_LOCAL")
                Me.columnDLRNM_ENG = MyBase.Columns("DLRNM_ENG")
                Me.columnDLRNICNM_LOCAL = MyBase.Columns("DLRNICNM_LOCAL")
                Me.columnDLRNICNM_EN = MyBase.Columns("DLRNICNM_EN")
                Me.columnADDR1_LOCAL = MyBase.Columns("ADDR1_LOCAL")
                Me.columnADDR1_ENG = MyBase.Columns("ADDR1_ENG")
                Me.columnADDR2_LOCAL = MyBase.Columns("ADDR2_LOCAL")
                Me.columnADDR2_ENG = MyBase.Columns("ADDR2_ENG")
                Me.columnPOSTNO = MyBase.Columns("POSTNO")
                Me.columnTEL = MyBase.Columns("TEL")
                Me.columnFAXNO = MyBase.Columns("FAXNO")
                Me.columnDLRURL = MyBase.Columns("DLRURL")
                Me.columnDLRNMPICT = MyBase.Columns("DLRNMPICT")
                Me.columnDLRLGPICT = MyBase.Columns("DLRLGPICT")
                Me.columnDUMMYDLRFLG = MyBase.Columns("DUMMYDLRFLG")
                Me.columnDELFLG = MyBase.Columns("DELFLG")
            End Sub

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Private Sub InitClass()
                Me.columnDLRCD = New Global.System.Data.DataColumn("DLRCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDLRCD)
                Me.columnDLRNM_LOCAL = New Global.System.Data.DataColumn("DLRNM_LOCAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDLRNM_LOCAL)
                Me.columnDLRNM_ENG = New Global.System.Data.DataColumn("DLRNM_ENG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDLRNM_ENG)
                Me.columnDLRNICNM_LOCAL = New Global.System.Data.DataColumn("DLRNICNM_LOCAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDLRNICNM_LOCAL)
                Me.columnDLRNICNM_EN = New Global.System.Data.DataColumn("DLRNICNM_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDLRNICNM_EN)
                Me.columnADDR1_LOCAL = New Global.System.Data.DataColumn("ADDR1_LOCAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnADDR1_LOCAL)
                Me.columnADDR1_ENG = New Global.System.Data.DataColumn("ADDR1_ENG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnADDR1_ENG)
                Me.columnADDR2_LOCAL = New Global.System.Data.DataColumn("ADDR2_LOCAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnADDR2_LOCAL)
                Me.columnADDR2_ENG = New Global.System.Data.DataColumn("ADDR2_ENG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnADDR2_ENG)
                Me.columnPOSTNO = New Global.System.Data.DataColumn("POSTNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPOSTNO)
                Me.columnTEL = New Global.System.Data.DataColumn("TEL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTEL)
                Me.columnFAXNO = New Global.System.Data.DataColumn("FAXNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnFAXNO)
                Me.columnDLRURL = New Global.System.Data.DataColumn("DLRURL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDLRURL)
                Me.columnDLRNMPICT = New Global.System.Data.DataColumn("DLRNMPICT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDLRNMPICT)
                Me.columnDLRLGPICT = New Global.System.Data.DataColumn("DLRLGPICT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDLRLGPICT)
                Me.columnDUMMYDLRFLG = New Global.System.Data.DataColumn("DUMMYDLRFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDUMMYDLRFLG)
                Me.columnDELFLG = New Global.System.Data.DataColumn("DELFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDELFLG)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDLRCD}, True))
                Me.columnDLRCD.AllowDBNull = False
                Me.columnDLRCD.Unique = True
                Me.columnDLRCD.MaxLength = 5
                Me.columnDLRNM_LOCAL.AllowDBNull = False
                Me.columnDLRNM_LOCAL.MaxLength = 64
                Me.columnDLRNM_ENG.AllowDBNull = False
                Me.columnDLRNM_ENG.MaxLength = 64
                Me.columnDLRNICNM_LOCAL.AllowDBNull = False
                Me.columnDLRNICNM_LOCAL.MaxLength = 64
                Me.columnDLRNICNM_EN.AllowDBNull = False
                Me.columnDLRNICNM_EN.MaxLength = 64
                Me.columnADDR1_LOCAL.AllowDBNull = False
                Me.columnADDR1_LOCAL.MaxLength = 128
                Me.columnADDR1_ENG.AllowDBNull = False
                Me.columnADDR1_ENG.MaxLength = 128
                Me.columnADDR2_LOCAL.AllowDBNull = False
                Me.columnADDR2_LOCAL.MaxLength = 128
                Me.columnADDR2_ENG.AllowDBNull = False
                Me.columnADDR2_ENG.MaxLength = 128
                Me.columnPOSTNO.AllowDBNull = False
                Me.columnPOSTNO.MaxLength = 32
                Me.columnTEL.AllowDBNull = False
                Me.columnTEL.MaxLength = 64
                Me.columnFAXNO.AllowDBNull = False
                Me.columnFAXNO.MaxLength = 64
                Me.columnDLRURL.AllowDBNull = False
                Me.columnDLRURL.MaxLength = 256
                Me.columnDLRNMPICT.AllowDBNull = False
                Me.columnDLRNMPICT.MaxLength = 256
                Me.columnDLRLGPICT.AllowDBNull = False
                Me.columnDLRLGPICT.MaxLength = 256
                Me.columnDUMMYDLRFLG.AllowDBNull = False
                Me.columnDUMMYDLRFLG.MaxLength = 1
                Me.columnDELFLG.AllowDBNull = False
                Me.columnDELFLG.MaxLength = 1
                Me.CaseSensitive = True
            End Sub

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Function NewDEALERRow() As DEALERRow
                Return CType(Me.NewRow, DEALERRow)
            End Function

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New DEALERRow(builder)
            End Function

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(DEALERRow)
            End Function

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.DEALERRowChangedEvent) Is Nothing) Then
                    RaiseEvent DEALERRowChanged(Me, New DEALERRowChangeEvent(CType(e.Row, DEALERRow), e.Action))
                End If
            End Sub

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.DEALERRowChangingEvent) Is Nothing) Then
                    RaiseEvent DEALERRowChanging(Me, New DEALERRowChangeEvent(CType(e.Row, DEALERRow), e.Action))
                End If
            End Sub

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.DEALERRowDeletedEvent) Is Nothing) Then
                    RaiseEvent DEALERRowDeleted(Me, New DEALERRowChangeEvent(CType(e.Row, DEALERRow), e.Action))
                End If
            End Sub

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.DEALERRowDeletingEvent) Is Nothing) Then
                    RaiseEvent DEALERRowDeleting(Me, New DEALERRowChangeEvent(CType(e.Row, DEALERRow), e.Action))
                End If
            End Sub

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Sub RemoveDEALERRow(ByVal row As DEALERRow)
                Me.Rows.Remove(row)
            End Sub

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As DealerDataSet = New DealerDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "DEALERDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0

                                Do While ((s1.Position <> s1.Length) _
                                            AndAlso (s1.ReadByte = s2.ReadByte))


                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If

                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close()
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close()
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class

        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class DEALERRow
            Inherits Global.System.Data.DataRow

            Private tableDEALER As DEALERDataTable

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableDEALER = CType(Me.Table, DEALERDataTable)
            End Sub

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Property DLRCD() As String
                Get
                    Return CType(Me(Me.tableDEALER.DLRCDColumn), String)
                End Get
                Set(value As String)
                    Me(Me.tableDEALER.DLRCDColumn) = value
                End Set
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Property DLRNM_LOCAL() As String
                Get
                    Return CType(Me(Me.tableDEALER.DLRNM_LOCALColumn), String)
                End Get
                Set(value As String)
                    Me(Me.tableDEALER.DLRNM_LOCALColumn) = value
                End Set
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Property DLRNM_ENG() As String
                Get
                    Return CType(Me(Me.tableDEALER.DLRNM_ENGColumn), String)
                End Get
                Set(value As String)
                    Me(Me.tableDEALER.DLRNM_ENGColumn) = value
                End Set
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Property DLRNICNM_LOCAL() As String
                Get
                    Return CType(Me(Me.tableDEALER.DLRNICNM_LOCALColumn), String)
                End Get
                Set(value As String)
                    Me(Me.tableDEALER.DLRNICNM_LOCALColumn) = value
                End Set
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Property DLRNICNM_EN() As String
                Get
                    Return CType(Me(Me.tableDEALER.DLRNICNM_ENColumn), String)
                End Get
                Set(value As String)
                    Me(Me.tableDEALER.DLRNICNM_ENColumn) = value
                End Set
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Property ADDR1_LOCAL() As String
                Get
                    Return CType(Me(Me.tableDEALER.ADDR1_LOCALColumn), String)
                End Get
                Set(value As String)
                    Me(Me.tableDEALER.ADDR1_LOCALColumn) = value
                End Set
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Property ADDR1_ENG() As String
                Get
                    Return CType(Me(Me.tableDEALER.ADDR1_ENGColumn), String)
                End Get
                Set(value As String)
                    Me(Me.tableDEALER.ADDR1_ENGColumn) = value
                End Set
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Property ADDR2_LOCAL() As String
                Get
                    Return CType(Me(Me.tableDEALER.ADDR2_LOCALColumn), String)
                End Get
                Set(value As String)
                    Me(Me.tableDEALER.ADDR2_LOCALColumn) = value
                End Set
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Property ADDR2_ENG() As String
                Get
                    Return CType(Me(Me.tableDEALER.ADDR2_ENGColumn), String)
                End Get
                Set(value As String)
                    Me(Me.tableDEALER.ADDR2_ENGColumn) = value
                End Set
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Property POSTNO() As String
                Get
                    Return CType(Me(Me.tableDEALER.POSTNOColumn), String)
                End Get
                Set(value As String)
                    Me(Me.tableDEALER.POSTNOColumn) = value
                End Set
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Property TEL() As String
                Get
                    Return CType(Me(Me.tableDEALER.TELColumn), String)
                End Get
                Set(value As String)
                    Me(Me.tableDEALER.TELColumn) = value
                End Set
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Property FAXNO() As String
                Get
                    Return CType(Me(Me.tableDEALER.FAXNOColumn), String)
                End Get
                Set(value As String)
                    Me(Me.tableDEALER.FAXNOColumn) = value
                End Set
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Property DLRURL() As String
                Get
                    Return CType(Me(Me.tableDEALER.DLRURLColumn), String)
                End Get
                Set(value As String)
                    Me(Me.tableDEALER.DLRURLColumn) = value
                End Set
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Property DLRNMPICT() As String
                Get
                    Return CType(Me(Me.tableDEALER.DLRNMPICTColumn), String)
                End Get
                Set(value As String)
                    Me(Me.tableDEALER.DLRNMPICTColumn) = value
                End Set
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Property DLRLGPICT() As String
                Get
                    Return CType(Me(Me.tableDEALER.DLRLGPICTColumn), String)
                End Get
                Set(value As String)
                    Me(Me.tableDEALER.DLRLGPICTColumn) = value
                End Set
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Property DUMMYDLRFLG() As String
                Get
                    Return CType(Me(Me.tableDEALER.DUMMYDLRFLGColumn), String)
                End Get
                Set(value As String)
                    Me(Me.tableDEALER.DUMMYDLRFLGColumn) = value
                End Set
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Property DELFLG() As String
                Get
                    Return CType(Me(Me.tableDEALER.DELFLGColumn), String)
                End Get
                Set(value As String)
                    Me(Me.tableDEALER.DELFLGColumn) = value
                End Set
            End Property
        End Class

        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Class DEALERRowChangeEvent
            Inherits Global.System.EventArgs

            Private eventRow As DEALERRow

            Private eventAction As Global.System.Data.DataRowAction

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Sub New(ByVal row As DEALERRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New()
                Me.eventRow = row
                Me.eventAction = action
            End Sub

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public ReadOnly Property Row() As DEALERRow
                Get
                    Return Me.eventRow
                End Get
            End Property

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
    End Class
End Namespace
