'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:4.0.30319.239
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace Toyota.eCRB.SystemFrameworks.Core.iCROP.DataAccess
    
    '''<summary>
    '''Represents a strongly typed in-memory cache of data.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
     Global.System.Xml.Serialization.XmlRootAttribute("UsersDataSet"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
    Partial Public Class UsersDataSet
        Inherits Global.System.Data.DataSet
        
        Private tableUSERS As USERSDataTable
        
        Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.BeginInit
            Me.InitClass
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context, false)
            If (Me.IsBinarySerialized(info, context) = true) Then
                Me.InitVars(false)
                Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
                AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
                AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
                Return
            End If
            Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
            If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
                If (Not (ds.Tables("USERS")) Is Nothing) Then
                    MyBase.Tables.Add(New USERSDataTable(ds.Tables("USERS")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            End If
            Me.GetSerializationData(info, context)
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property USERS() As USERSDataTable
            Get
                Return Me.tableUSERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.BrowsableAttribute(true),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
        Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
            Get
                Return Me._schemaSerializationMode
            End Get
            Set
                Me._schemaSerializationMode = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
            Get
                Return MyBase.Tables
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
            Get
                Return MyBase.Relations
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub InitializeDerivedDataSet()
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataSet
            Dim cln As UsersDataSet = CType(MyBase.Clone,UsersDataSet)
            cln.InitVars
            cln.SchemaSerializationMode = Me.SchemaSerializationMode
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function ShouldSerializeTables() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function ShouldSerializeRelations() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
            If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Me.Reset
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXml(reader)
                If (Not (ds.Tables("USERS")) Is Nothing) Then
                    MyBase.Tables.Add(New USERSDataTable(ds.Tables("USERS")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXml(reader)
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
            Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
            stream.Position = 0
            Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Overloads Sub InitVars()
            Me.InitVars(true)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Overloads Sub InitVars(ByVal initTable As Boolean)
            Me.tableUSERS = CType(MyBase.Tables("USERS"),USERSDataTable)
            If (initTable = true) Then
                If (Not (Me.tableUSERS) Is Nothing) Then
                    Me.tableUSERS.InitVars
                End If
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.DataSetName = "UsersDataSet"
            Me.Prefix = ""
            Me.Namespace = "http://tempuri.org/UsersDataSet.xsd"
            Me.EnforceConstraints = true
            Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
            Me.tableUSERS = New USERSDataTable()
            MyBase.Tables.Add(Me.tableUSERS)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function ShouldSerializeUSERS() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
            If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim ds As UsersDataSet = New UsersDataSet()
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any.Namespace = ds.Namespace
            sequence.Items.Add(any)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Delegate Sub USERSRowChangeEventHandler(ByVal sender As Object, ByVal e As USERSRowChangeEvent)
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class USERSDataTable
            Inherits Global.System.Data.TypedTableBase(Of USERSRow)
            
            Private columnACCOUNT As Global.System.Data.DataColumn
            
            Private columnPASSWORD As Global.System.Data.DataColumn
            
            Private columnDLRCD As Global.System.Data.DataColumn
            
            Private columnSTRCD As Global.System.Data.DataColumn
            
            Private columnPERMISSION As Global.System.Data.DataColumn
            
            Private columnOPERATIONCODE As Global.System.Data.DataColumn
            
            Private columnUSERNAME As Global.System.Data.DataColumn
            
            Private columnUSERKANA As Global.System.Data.DataColumn
            
            Private columnUSERCOMMENT As Global.System.Data.DataColumn
            
            Private columnORG_IMGFILE As Global.System.Data.DataColumn
            
            Private columnSYS_IMGFILE As Global.System.Data.DataColumn
            
            Private columnDELFLG As Global.System.Data.DataColumn
            
            Private columnCREATEDATE As Global.System.Data.DataColumn
            
            Private columnUPDATEDATE As Global.System.Data.DataColumn
            
            Private columnUPDATEACCOUNT As Global.System.Data.DataColumn
            
            Private columnINBOUNDFLG As Global.System.Data.DataColumn
            
            Private columnORG_SIGNFILE As Global.System.Data.DataColumn
            
            Private columnSYS_SIGNFILE As Global.System.Data.DataColumn
            
            Private columnTEAMCD As Global.System.Data.DataColumn
            
            Private columnLEADERFLG As Global.System.Data.DataColumn
            
            Private columnCLMCHRGTYP As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "USERS"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property ACCOUNTColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnACCOUNT
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PASSWORDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPASSWORD
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property DLRCDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDLRCD
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property STRCDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSTRCD
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PERMISSIONColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPERMISSION
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property OPERATIONCODEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnOPERATIONCODE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property USERNAMEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnUSERNAME
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property USERKANAColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnUSERKANA
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property USERCOMMENTColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnUSERCOMMENT
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property ORG_IMGFILEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnORG_IMGFILE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property SYS_IMGFILEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSYS_IMGFILE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property DELFLGColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDELFLG
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property CREATEDATEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCREATEDATE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property UPDATEDATEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnUPDATEDATE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property UPDATEACCOUNTColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnUPDATEACCOUNT
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property INBOUNDFLGColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnINBOUNDFLG
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property ORG_SIGNFILEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnORG_SIGNFILE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property SYS_SIGNFILEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSYS_SIGNFILE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property TEAMCDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTEAMCD
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property LEADERFLGColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLEADERFLG
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property CLMCHRGTYPColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCLMCHRGTYP
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As USERSRow
                Get
                    Return CType(Me.Rows(index),USERSRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event USERSRowChanging As USERSRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event USERSRowChanged As USERSRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event USERSRowDeleting As USERSRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event USERSRowDeleted As USERSRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overloads Sub AddUSERSRow(ByVal row As USERSRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overloads Function AddUSERSRow( _
                        ByVal ACCOUNT As String,  _
                        ByVal PASSWORD As String,  _
                        ByVal DLRCD As String,  _
                        ByVal STRCD As String,  _
                        ByVal PERMISSION As Long,  _
                        ByVal OPERATIONCODE As Long,  _
                        ByVal USERNAME As String,  _
                        ByVal USERKANA As String,  _
                        ByVal USERCOMMENT As String,  _
                        ByVal ORG_IMGFILE As String,  _
                        ByVal SYS_IMGFILE As String,  _
                        ByVal DELFLG As String,  _
                        ByVal CREATEDATE As Date,  _
                        ByVal UPDATEDATE As Date,  _
                        ByVal UPDATEACCOUNT As String,  _
                        ByVal INBOUNDFLG As String,  _
                        ByVal ORG_SIGNFILE As String,  _
                        ByVal SYS_SIGNFILE As String,  _
                        ByVal TEAMCD As String,  _
                        ByVal LEADERFLG As String,  _
                        ByVal CLMCHRGTYP As String) As USERSRow
                Dim rowUSERSRow As USERSRow = CType(Me.NewRow,USERSRow)
                Dim columnValuesArray() As Object = New Object() {ACCOUNT, PASSWORD, DLRCD, STRCD, PERMISSION, OPERATIONCODE, USERNAME, USERKANA, USERCOMMENT, ORG_IMGFILE, SYS_IMGFILE, DELFLG, CREATEDATE, UPDATEDATE, UPDATEACCOUNT, INBOUNDFLG, ORG_SIGNFILE, SYS_SIGNFILE, TEAMCD, LEADERFLG, CLMCHRGTYP}
                rowUSERSRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowUSERSRow)
                Return rowUSERSRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function FindByACCOUNT(ByVal ACCOUNT As String) As USERSRow
                Return CType(Me.Rows.Find(New Object() {ACCOUNT}),USERSRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As USERSDataTable = CType(MyBase.Clone,USERSDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New USERSDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnACCOUNT = MyBase.Columns("ACCOUNT")
                Me.columnPASSWORD = MyBase.Columns("PASSWORD")
                Me.columnDLRCD = MyBase.Columns("DLRCD")
                Me.columnSTRCD = MyBase.Columns("STRCD")
                Me.columnPERMISSION = MyBase.Columns("PERMISSION")
                Me.columnOPERATIONCODE = MyBase.Columns("OPERATIONCODE")
                Me.columnUSERNAME = MyBase.Columns("USERNAME")
                Me.columnUSERKANA = MyBase.Columns("USERKANA")
                Me.columnUSERCOMMENT = MyBase.Columns("USERCOMMENT")
                Me.columnORG_IMGFILE = MyBase.Columns("ORG_IMGFILE")
                Me.columnSYS_IMGFILE = MyBase.Columns("SYS_IMGFILE")
                Me.columnDELFLG = MyBase.Columns("DELFLG")
                Me.columnCREATEDATE = MyBase.Columns("CREATEDATE")
                Me.columnUPDATEDATE = MyBase.Columns("UPDATEDATE")
                Me.columnUPDATEACCOUNT = MyBase.Columns("UPDATEACCOUNT")
                Me.columnINBOUNDFLG = MyBase.Columns("INBOUNDFLG")
                Me.columnORG_SIGNFILE = MyBase.Columns("ORG_SIGNFILE")
                Me.columnSYS_SIGNFILE = MyBase.Columns("SYS_SIGNFILE")
                Me.columnTEAMCD = MyBase.Columns("TEAMCD")
                Me.columnLEADERFLG = MyBase.Columns("LEADERFLG")
                Me.columnCLMCHRGTYP = MyBase.Columns("CLMCHRGTYP")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Sub InitClass()
                Me.columnACCOUNT = New Global.System.Data.DataColumn("ACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnACCOUNT)
                Me.columnPASSWORD = New Global.System.Data.DataColumn("PASSWORD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPASSWORD)
                Me.columnDLRCD = New Global.System.Data.DataColumn("DLRCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDLRCD)
                Me.columnSTRCD = New Global.System.Data.DataColumn("STRCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSTRCD)
                Me.columnPERMISSION = New Global.System.Data.DataColumn("PERMISSION", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPERMISSION)
                Me.columnOPERATIONCODE = New Global.System.Data.DataColumn("OPERATIONCODE", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnOPERATIONCODE)
                Me.columnUSERNAME = New Global.System.Data.DataColumn("USERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnUSERNAME)
                Me.columnUSERKANA = New Global.System.Data.DataColumn("USERKANA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnUSERKANA)
                Me.columnUSERCOMMENT = New Global.System.Data.DataColumn("USERCOMMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnUSERCOMMENT)
                Me.columnORG_IMGFILE = New Global.System.Data.DataColumn("ORG_IMGFILE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnORG_IMGFILE)
                Me.columnSYS_IMGFILE = New Global.System.Data.DataColumn("SYS_IMGFILE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSYS_IMGFILE)
                Me.columnDELFLG = New Global.System.Data.DataColumn("DELFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDELFLG)
                Me.columnCREATEDATE = New Global.System.Data.DataColumn("CREATEDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCREATEDATE)
                Me.columnUPDATEDATE = New Global.System.Data.DataColumn("UPDATEDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnUPDATEDATE)
                Me.columnUPDATEACCOUNT = New Global.System.Data.DataColumn("UPDATEACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnUPDATEACCOUNT)
                Me.columnINBOUNDFLG = New Global.System.Data.DataColumn("INBOUNDFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnINBOUNDFLG)
                Me.columnORG_SIGNFILE = New Global.System.Data.DataColumn("ORG_SIGNFILE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnORG_SIGNFILE)
                Me.columnSYS_SIGNFILE = New Global.System.Data.DataColumn("SYS_SIGNFILE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSYS_SIGNFILE)
                Me.columnTEAMCD = New Global.System.Data.DataColumn("TEAMCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTEAMCD)
                Me.columnLEADERFLG = New Global.System.Data.DataColumn("LEADERFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLEADERFLG)
                Me.columnCLMCHRGTYP = New Global.System.Data.DataColumn("CLMCHRGTYP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCLMCHRGTYP)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnACCOUNT}, true))
                Me.columnACCOUNT.AllowDBNull = false
                Me.columnACCOUNT.Unique = true
                Me.columnACCOUNT.MaxLength = 20
                Me.columnPASSWORD.AllowDBNull = false
                Me.columnPASSWORD.MaxLength = 128
                Me.columnDLRCD.AllowDBNull = false
                Me.columnDLRCD.MaxLength = 5
                Me.columnSTRCD.AllowDBNull = false
                Me.columnSTRCD.MaxLength = 3
                Me.columnOPERATIONCODE.AllowDBNull = false
                Me.columnUSERNAME.AllowDBNull = false
                Me.columnUSERNAME.MaxLength = 32
                Me.columnUSERKANA.AllowDBNull = false
                Me.columnUSERKANA.MaxLength = 32
                Me.columnUSERCOMMENT.AllowDBNull = false
                Me.columnUSERCOMMENT.MaxLength = 64
                Me.columnORG_IMGFILE.AllowDBNull = false
                Me.columnORG_IMGFILE.MaxLength = 255
                Me.columnSYS_IMGFILE.AllowDBNull = false
                Me.columnSYS_IMGFILE.MaxLength = 255
                Me.columnDELFLG.AllowDBNull = false
                Me.columnDELFLG.MaxLength = 1
                Me.columnCREATEDATE.AllowDBNull = false
                Me.columnUPDATEDATE.AllowDBNull = false
                Me.columnUPDATEACCOUNT.AllowDBNull = false
                Me.columnUPDATEACCOUNT.MaxLength = 20
                Me.columnINBOUNDFLG.AllowDBNull = false
                Me.columnINBOUNDFLG.MaxLength = 1
                Me.columnORG_SIGNFILE.AllowDBNull = false
                Me.columnORG_SIGNFILE.MaxLength = 255
                Me.columnSYS_SIGNFILE.MaxLength = 255
                Me.columnTEAMCD.AllowDBNull = false
                Me.columnTEAMCD.MaxLength = 3
                Me.columnLEADERFLG.AllowDBNull = false
                Me.columnLEADERFLG.MaxLength = 1
                Me.columnCLMCHRGTYP.AllowDBNull = false
                Me.columnCLMCHRGTYP.MaxLength = 1
                Me.CaseSensitive = true
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function NewUSERSRow() As USERSRow
                Return CType(Me.NewRow,USERSRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New USERSRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(USERSRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.USERSRowChangedEvent) Is Nothing) Then
                    RaiseEvent USERSRowChanged(Me, New USERSRowChangeEvent(CType(e.Row,USERSRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.USERSRowChangingEvent) Is Nothing) Then
                    RaiseEvent USERSRowChanging(Me, New USERSRowChangeEvent(CType(e.Row,USERSRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.USERSRowDeletedEvent) Is Nothing) Then
                    RaiseEvent USERSRowDeleted(Me, New USERSRowChangeEvent(CType(e.Row,USERSRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.USERSRowDeletingEvent) Is Nothing) Then
                    RaiseEvent USERSRowDeleting(Me, New USERSRowChangeEvent(CType(e.Row,USERSRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub RemoveUSERSRow(ByVal row As USERSRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As UsersDataSet = New UsersDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "USERSDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class USERSRow
            Inherits Global.System.Data.DataRow
            
            Private tableUSERS As USERSDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableUSERS = CType(Me.Table,USERSDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property ACCOUNT() As String
                Get
                    Return CType(Me(Me.tableUSERS.ACCOUNTColumn),String)
                End Get
                Set
                    Me(Me.tableUSERS.ACCOUNTColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PASSWORD() As String
                Get
                    Return CType(Me(Me.tableUSERS.PASSWORDColumn),String)
                End Get
                Set
                    Me(Me.tableUSERS.PASSWORDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property DLRCD() As String
                Get
                    Return CType(Me(Me.tableUSERS.DLRCDColumn),String)
                End Get
                Set
                    Me(Me.tableUSERS.DLRCDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property STRCD() As String
                Get
                    Return CType(Me(Me.tableUSERS.STRCDColumn),String)
                End Get
                Set
                    Me(Me.tableUSERS.STRCDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PERMISSION() As Long
                Get
                    Try 
                        Return CType(Me(Me.tableUSERS.PERMISSIONColumn),Long)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("テーブル 'USERS' にある列 'PERMISSION' の値は DBNull です。", e)
                    End Try
                End Get
                Set
                    Me(Me.tableUSERS.PERMISSIONColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property OPERATIONCODE() As Long
                Get
                    Return CType(Me(Me.tableUSERS.OPERATIONCODEColumn),Long)
                End Get
                Set
                    Me(Me.tableUSERS.OPERATIONCODEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property USERNAME() As String
                Get
                    Return CType(Me(Me.tableUSERS.USERNAMEColumn),String)
                End Get
                Set
                    Me(Me.tableUSERS.USERNAMEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property USERKANA() As String
                Get
                    Return CType(Me(Me.tableUSERS.USERKANAColumn),String)
                End Get
                Set
                    Me(Me.tableUSERS.USERKANAColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property USERCOMMENT() As String
                Get
                    Return CType(Me(Me.tableUSERS.USERCOMMENTColumn),String)
                End Get
                Set
                    Me(Me.tableUSERS.USERCOMMENTColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property ORG_IMGFILE() As String
                Get
                    Return CType(Me(Me.tableUSERS.ORG_IMGFILEColumn),String)
                End Get
                Set
                    Me(Me.tableUSERS.ORG_IMGFILEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property SYS_IMGFILE() As String
                Get
                    Return CType(Me(Me.tableUSERS.SYS_IMGFILEColumn),String)
                End Get
                Set
                    Me(Me.tableUSERS.SYS_IMGFILEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property DELFLG() As String
                Get
                    Return CType(Me(Me.tableUSERS.DELFLGColumn),String)
                End Get
                Set
                    Me(Me.tableUSERS.DELFLGColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property CREATEDATE() As Date
                Get
                    Return CType(Me(Me.tableUSERS.CREATEDATEColumn),Date)
                End Get
                Set
                    Me(Me.tableUSERS.CREATEDATEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property UPDATEDATE() As Date
                Get
                    Return CType(Me(Me.tableUSERS.UPDATEDATEColumn),Date)
                End Get
                Set
                    Me(Me.tableUSERS.UPDATEDATEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property UPDATEACCOUNT() As String
                Get
                    Return CType(Me(Me.tableUSERS.UPDATEACCOUNTColumn),String)
                End Get
                Set
                    Me(Me.tableUSERS.UPDATEACCOUNTColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property INBOUNDFLG() As String
                Get
                    Return CType(Me(Me.tableUSERS.INBOUNDFLGColumn),String)
                End Get
                Set
                    Me(Me.tableUSERS.INBOUNDFLGColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property ORG_SIGNFILE() As String
                Get
                    Return CType(Me(Me.tableUSERS.ORG_SIGNFILEColumn),String)
                End Get
                Set
                    Me(Me.tableUSERS.ORG_SIGNFILEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property SYS_SIGNFILE() As String
                Get
                    Try 
                        Return CType(Me(Me.tableUSERS.SYS_SIGNFILEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("テーブル 'USERS' にある列 'SYS_SIGNFILE' の値は DBNull です。", e)
                    End Try
                End Get
                Set
                    Me(Me.tableUSERS.SYS_SIGNFILEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property TEAMCD() As String
                Get
                    Return CType(Me(Me.tableUSERS.TEAMCDColumn),String)
                End Get
                Set
                    Me(Me.tableUSERS.TEAMCDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property LEADERFLG() As String
                Get
                    Return CType(Me(Me.tableUSERS.LEADERFLGColumn),String)
                End Get
                Set
                    Me(Me.tableUSERS.LEADERFLGColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property CLMCHRGTYP() As String
                Get
                    Return CType(Me(Me.tableUSERS.CLMCHRGTYPColumn),String)
                End Get
                Set
                    Me(Me.tableUSERS.CLMCHRGTYPColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsPERMISSIONNull() As Boolean
                Return Me.IsNull(Me.tableUSERS.PERMISSIONColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetPERMISSIONNull()
                Me(Me.tableUSERS.PERMISSIONColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsSYS_SIGNFILENull() As Boolean
                Return Me.IsNull(Me.tableUSERS.SYS_SIGNFILEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetSYS_SIGNFILENull()
                Me(Me.tableUSERS.SYS_SIGNFILEColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Class USERSRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As USERSRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub New(ByVal row As USERSRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property Row() As USERSRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
    End Class
End Namespace
