'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:4.0.30319.18444
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("IC3040403DataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class IC3040403DataSet
    Inherits Global.System.Data.DataSet
    
    Private tableSequenceTable As SequenceTableDataTable
    
    Private tableIdTable As IdTableDataTable
    
    Private tableCalCalenderDataTable As CalCalenderDataTableDataTable
    
    Private tableCalTodoItemDataTable As CalTodoItemDataTableDataTable
    
    Private tableCalTodoAlarmDataTable As CalTodoAlarmDataTableDataTable
    
    Private tableCalEventItemDataTable As CalEventItemDataTableDataTable
    
    Private tableCalEventAlarmDataTable As CalEventAlarmDataTableDataTable
    
    Private tableCalEventExDate As CalEventExDateDataTable
    
    Private tableCalTodoExDate As CalTodoExDateDataTable
    
    Private tableStaffCodeDataTable As StaffCodeDataTableDataTable
    
    Private tableCalCardLastModifyDataTable As CalCardLastModifyDataTableDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("SequenceTable")) Is Nothing) Then
                MyBase.Tables.Add(New SequenceTableDataTable(ds.Tables("SequenceTable")))
            End If
            If (Not (ds.Tables("IdTable")) Is Nothing) Then
                MyBase.Tables.Add(New IdTableDataTable(ds.Tables("IdTable")))
            End If
            If (Not (ds.Tables("CalCalenderDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New CalCalenderDataTableDataTable(ds.Tables("CalCalenderDataTable")))
            End If
            If (Not (ds.Tables("CalTodoItemDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New CalTodoItemDataTableDataTable(ds.Tables("CalTodoItemDataTable")))
            End If
            If (Not (ds.Tables("CalTodoAlarmDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New CalTodoAlarmDataTableDataTable(ds.Tables("CalTodoAlarmDataTable")))
            End If
            If (Not (ds.Tables("CalEventItemDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New CalEventItemDataTableDataTable(ds.Tables("CalEventItemDataTable")))
            End If
            If (Not (ds.Tables("CalEventAlarmDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New CalEventAlarmDataTableDataTable(ds.Tables("CalEventAlarmDataTable")))
            End If
            If (Not (ds.Tables("CalEventExDate")) Is Nothing) Then
                MyBase.Tables.Add(New CalEventExDateDataTable(ds.Tables("CalEventExDate")))
            End If
            If (Not (ds.Tables("CalTodoExDate")) Is Nothing) Then
                MyBase.Tables.Add(New CalTodoExDateDataTable(ds.Tables("CalTodoExDate")))
            End If
            If (Not (ds.Tables("StaffCodeDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New StaffCodeDataTableDataTable(ds.Tables("StaffCodeDataTable")))
            End If
            If (Not (ds.Tables("CalCardLastModifyDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New CalCardLastModifyDataTableDataTable(ds.Tables("CalCardLastModifyDataTable")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SequenceTable() As SequenceTableDataTable
        Get
            Return Me.tableSequenceTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property IdTable() As IdTableDataTable
        Get
            Return Me.tableIdTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CalCalenderDataTable() As CalCalenderDataTableDataTable
        Get
            Return Me.tableCalCalenderDataTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CalTodoItemDataTable() As CalTodoItemDataTableDataTable
        Get
            Return Me.tableCalTodoItemDataTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CalTodoAlarmDataTable() As CalTodoAlarmDataTableDataTable
        Get
            Return Me.tableCalTodoAlarmDataTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CalEventItemDataTable() As CalEventItemDataTableDataTable
        Get
            Return Me.tableCalEventItemDataTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CalEventAlarmDataTable() As CalEventAlarmDataTableDataTable
        Get
            Return Me.tableCalEventAlarmDataTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CalEventExDate() As CalEventExDateDataTable
        Get
            Return Me.tableCalEventExDate
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CalTodoExDate() As CalTodoExDateDataTable
        Get
            Return Me.tableCalTodoExDate
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property StaffCodeDataTable() As StaffCodeDataTableDataTable
        Get
            Return Me.tableStaffCodeDataTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CalCardLastModifyDataTable() As CalCardLastModifyDataTableDataTable
        Get
            Return Me.tableCalCardLastModifyDataTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As IC3040403DataSet = CType(MyBase.Clone,IC3040403DataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("SequenceTable")) Is Nothing) Then
                MyBase.Tables.Add(New SequenceTableDataTable(ds.Tables("SequenceTable")))
            End If
            If (Not (ds.Tables("IdTable")) Is Nothing) Then
                MyBase.Tables.Add(New IdTableDataTable(ds.Tables("IdTable")))
            End If
            If (Not (ds.Tables("CalCalenderDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New CalCalenderDataTableDataTable(ds.Tables("CalCalenderDataTable")))
            End If
            If (Not (ds.Tables("CalTodoItemDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New CalTodoItemDataTableDataTable(ds.Tables("CalTodoItemDataTable")))
            End If
            If (Not (ds.Tables("CalTodoAlarmDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New CalTodoAlarmDataTableDataTable(ds.Tables("CalTodoAlarmDataTable")))
            End If
            If (Not (ds.Tables("CalEventItemDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New CalEventItemDataTableDataTable(ds.Tables("CalEventItemDataTable")))
            End If
            If (Not (ds.Tables("CalEventAlarmDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New CalEventAlarmDataTableDataTable(ds.Tables("CalEventAlarmDataTable")))
            End If
            If (Not (ds.Tables("CalEventExDate")) Is Nothing) Then
                MyBase.Tables.Add(New CalEventExDateDataTable(ds.Tables("CalEventExDate")))
            End If
            If (Not (ds.Tables("CalTodoExDate")) Is Nothing) Then
                MyBase.Tables.Add(New CalTodoExDateDataTable(ds.Tables("CalTodoExDate")))
            End If
            If (Not (ds.Tables("StaffCodeDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New StaffCodeDataTableDataTable(ds.Tables("StaffCodeDataTable")))
            End If
            If (Not (ds.Tables("CalCardLastModifyDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New CalCardLastModifyDataTableDataTable(ds.Tables("CalCardLastModifyDataTable")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableSequenceTable = CType(MyBase.Tables("SequenceTable"),SequenceTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSequenceTable) Is Nothing) Then
                Me.tableSequenceTable.InitVars
            End If
        End If
        Me.tableIdTable = CType(MyBase.Tables("IdTable"),IdTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableIdTable) Is Nothing) Then
                Me.tableIdTable.InitVars
            End If
        End If
        Me.tableCalCalenderDataTable = CType(MyBase.Tables("CalCalenderDataTable"),CalCalenderDataTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCalCalenderDataTable) Is Nothing) Then
                Me.tableCalCalenderDataTable.InitVars
            End If
        End If
        Me.tableCalTodoItemDataTable = CType(MyBase.Tables("CalTodoItemDataTable"),CalTodoItemDataTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCalTodoItemDataTable) Is Nothing) Then
                Me.tableCalTodoItemDataTable.InitVars
            End If
        End If
        Me.tableCalTodoAlarmDataTable = CType(MyBase.Tables("CalTodoAlarmDataTable"),CalTodoAlarmDataTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCalTodoAlarmDataTable) Is Nothing) Then
                Me.tableCalTodoAlarmDataTable.InitVars
            End If
        End If
        Me.tableCalEventItemDataTable = CType(MyBase.Tables("CalEventItemDataTable"),CalEventItemDataTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCalEventItemDataTable) Is Nothing) Then
                Me.tableCalEventItemDataTable.InitVars
            End If
        End If
        Me.tableCalEventAlarmDataTable = CType(MyBase.Tables("CalEventAlarmDataTable"),CalEventAlarmDataTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCalEventAlarmDataTable) Is Nothing) Then
                Me.tableCalEventAlarmDataTable.InitVars
            End If
        End If
        Me.tableCalEventExDate = CType(MyBase.Tables("CalEventExDate"),CalEventExDateDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCalEventExDate) Is Nothing) Then
                Me.tableCalEventExDate.InitVars
            End If
        End If
        Me.tableCalTodoExDate = CType(MyBase.Tables("CalTodoExDate"),CalTodoExDateDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCalTodoExDate) Is Nothing) Then
                Me.tableCalTodoExDate.InitVars
            End If
        End If
        Me.tableStaffCodeDataTable = CType(MyBase.Tables("StaffCodeDataTable"),StaffCodeDataTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableStaffCodeDataTable) Is Nothing) Then
                Me.tableStaffCodeDataTable.InitVars
            End If
        End If
        Me.tableCalCardLastModifyDataTable = CType(MyBase.Tables("CalCardLastModifyDataTable"),CalCardLastModifyDataTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCalCardLastModifyDataTable) Is Nothing) Then
                Me.tableCalCardLastModifyDataTable.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "IC3040403DataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/IC3040403DataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableSequenceTable = New SequenceTableDataTable()
        MyBase.Tables.Add(Me.tableSequenceTable)
        Me.tableIdTable = New IdTableDataTable()
        MyBase.Tables.Add(Me.tableIdTable)
        Me.tableCalCalenderDataTable = New CalCalenderDataTableDataTable()
        MyBase.Tables.Add(Me.tableCalCalenderDataTable)
        Me.tableCalTodoItemDataTable = New CalTodoItemDataTableDataTable()
        MyBase.Tables.Add(Me.tableCalTodoItemDataTable)
        Me.tableCalTodoAlarmDataTable = New CalTodoAlarmDataTableDataTable()
        MyBase.Tables.Add(Me.tableCalTodoAlarmDataTable)
        Me.tableCalEventItemDataTable = New CalEventItemDataTableDataTable()
        MyBase.Tables.Add(Me.tableCalEventItemDataTable)
        Me.tableCalEventAlarmDataTable = New CalEventAlarmDataTableDataTable()
        MyBase.Tables.Add(Me.tableCalEventAlarmDataTable)
        Me.tableCalEventExDate = New CalEventExDateDataTable()
        MyBase.Tables.Add(Me.tableCalEventExDate)
        Me.tableCalTodoExDate = New CalTodoExDateDataTable()
        MyBase.Tables.Add(Me.tableCalTodoExDate)
        Me.tableStaffCodeDataTable = New StaffCodeDataTableDataTable()
        MyBase.Tables.Add(Me.tableStaffCodeDataTable)
        Me.tableCalCardLastModifyDataTable = New CalCardLastModifyDataTableDataTable()
        MyBase.Tables.Add(Me.tableCalCardLastModifyDataTable)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSequenceTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeIdTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCalCalenderDataTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCalTodoItemDataTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCalTodoAlarmDataTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCalEventItemDataTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCalEventAlarmDataTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCalEventExDate() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCalTodoExDate() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeStaffCodeDataTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCalCardLastModifyDataTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As IC3040403DataSet = New IC3040403DataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SequenceTableRowChangeEventHandler(ByVal sender As Object, ByVal e As SequenceTableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub IdTableRowChangeEventHandler(ByVal sender As Object, ByVal e As IdTableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CalCalenderDataTableRowChangeEventHandler(ByVal sender As Object, ByVal e As CalCalenderDataTableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CalTodoItemDataTableRowChangeEventHandler(ByVal sender As Object, ByVal e As CalTodoItemDataTableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CalTodoAlarmDataTableRowChangeEventHandler(ByVal sender As Object, ByVal e As CalTodoAlarmDataTableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CalEventItemDataTableRowChangeEventHandler(ByVal sender As Object, ByVal e As CalEventItemDataTableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CalEventAlarmDataTableRowChangeEventHandler(ByVal sender As Object, ByVal e As CalEventAlarmDataTableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CalEventExDateRowChangeEventHandler(ByVal sender As Object, ByVal e As CalEventExDateRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CalTodoExDateRowChangeEventHandler(ByVal sender As Object, ByVal e As CalTodoExDateRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub StaffCodeDataTableRowChangeEventHandler(ByVal sender As Object, ByVal e As StaffCodeDataTableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CalCardLastModifyDataTableRowChangeEventHandler(ByVal sender As Object, ByVal e As CalCardLastModifyDataTableRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SequenceTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of SequenceTableRow)
        
        Private columnSequence_Id As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SequenceTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Sequence_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSequence_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SequenceTableRow
            Get
                Return CType(Me.Rows(index),SequenceTableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SequenceTableRowChanging As SequenceTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SequenceTableRowChanged As SequenceTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SequenceTableRowDeleting As SequenceTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SequenceTableRowDeleted As SequenceTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSequenceTableRow(ByVal row As SequenceTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSequenceTableRow(ByVal Sequence_Id As String) As SequenceTableRow
            Dim rowSequenceTableRow As SequenceTableRow = CType(Me.NewRow,SequenceTableRow)
            Dim columnValuesArray() As Object = New Object() {Sequence_Id}
            rowSequenceTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSequenceTableRow)
            Return rowSequenceTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SequenceTableDataTable = CType(MyBase.Clone,SequenceTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SequenceTableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSequence_Id = MyBase.Columns("Sequence_Id")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSequence_Id = New Global.System.Data.DataColumn("Sequence_Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSequence_Id)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSequenceTableRow() As SequenceTableRow
            Return CType(Me.NewRow,SequenceTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SequenceTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SequenceTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SequenceTableRowChangedEvent) Is Nothing) Then
                RaiseEvent SequenceTableRowChanged(Me, New SequenceTableRowChangeEvent(CType(e.Row,SequenceTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SequenceTableRowChangingEvent) Is Nothing) Then
                RaiseEvent SequenceTableRowChanging(Me, New SequenceTableRowChangeEvent(CType(e.Row,SequenceTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SequenceTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent SequenceTableRowDeleted(Me, New SequenceTableRowChangeEvent(CType(e.Row,SequenceTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SequenceTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent SequenceTableRowDeleting(Me, New SequenceTableRowChangeEvent(CType(e.Row,SequenceTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSequenceTableRow(ByVal row As SequenceTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3040403DataSet = New IC3040403DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SequenceTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class IdTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of IdTableRow)
        
        Private columnIds As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "IdTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As IdTableRow
            Get
                Return CType(Me.Rows(index),IdTableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IdTableRowChanging As IdTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IdTableRowChanged As IdTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IdTableRowDeleting As IdTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IdTableRowDeleted As IdTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddIdTableRow(ByVal row As IdTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddIdTableRow(ByVal Ids As String) As IdTableRow
            Dim rowIdTableRow As IdTableRow = CType(Me.NewRow,IdTableRow)
            Dim columnValuesArray() As Object = New Object() {Ids}
            rowIdTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIdTableRow)
            Return rowIdTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IdTableDataTable = CType(MyBase.Clone,IdTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IdTableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnIds = MyBase.Columns("IDS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnIds = New Global.System.Data.DataColumn("IDS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnIds.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Ids")
            Me.columnIds.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "IdsColumn")
            Me.columnIds.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnIds")
            Me.columnIds.ExtendedProperties.Add("Generator_UserColumnName", "IDS")
            MyBase.Columns.Add(Me.columnIds)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewIdTableRow() As IdTableRow
            Return CType(Me.NewRow,IdTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IdTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IdTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IdTableRowChangedEvent) Is Nothing) Then
                RaiseEvent IdTableRowChanged(Me, New IdTableRowChangeEvent(CType(e.Row,IdTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IdTableRowChangingEvent) Is Nothing) Then
                RaiseEvent IdTableRowChanging(Me, New IdTableRowChangeEvent(CType(e.Row,IdTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IdTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent IdTableRowDeleted(Me, New IdTableRowChangeEvent(CType(e.Row,IdTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IdTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent IdTableRowDeleting(Me, New IdTableRowChangeEvent(CType(e.Row,IdTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveIdTableRow(ByVal row As IdTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3040403DataSet = New IC3040403DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IdTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CalCalenderDataTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of CalCalenderDataTableRow)
        
        Private columnCALID As Global.System.Data.DataColumn
        
        Private columnDLRCD As Global.System.Data.DataColumn
        
        Private columnSTRCD As Global.System.Data.DataColumn
        
        Private columnSCHEDULEDIV As Global.System.Data.DataColumn
        
        Private columnSCHEDULEID As Global.System.Data.DataColumn
        
        Private columnCUSTOMERDIV As Global.System.Data.DataColumn
        
        Private columnCUSTCODE As Global.System.Data.DataColumn
        
        Private columnCUSTNAME As Global.System.Data.DataColumn
        
        Private columnDMSID As Global.System.Data.DataColumn
        
        Private columnRECEPTIONDIV As Global.System.Data.DataColumn
        
        Private columnSERVICECODE As Global.System.Data.DataColumn
        
        Private columnMERCHANDISECD As Global.System.Data.DataColumn
        
        Private columnSTRSTATUS As Global.System.Data.DataColumn
        
        Private columnREZSTATUS As Global.System.Data.DataColumn
        
        Private columnDELFLG As Global.System.Data.DataColumn
        
        Private columnDELDATE As Global.System.Data.DataColumn
        
        Private columnCREATEDATE As Global.System.Data.DataColumn
        
        Private columnUPDATEDATE As Global.System.Data.DataColumn
        
        Private columnCREATEACCOUNT As Global.System.Data.DataColumn
        
        Private columnUPDATEACCOUNT As Global.System.Data.DataColumn
        
        Private columnCREATEID As Global.System.Data.DataColumn
        
        Private columnUPDATEID As Global.System.Data.DataColumn
        
        Private columnPROCESSDIV As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CalCalenderDataTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CALIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCALID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DLRCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDLRCD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STRCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTRCD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SCHEDULEDIVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCHEDULEDIV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SCHEDULEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCHEDULEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUSTOMERDIVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTOMERDIV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUSTCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUSTNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DMSIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDMSID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECEPTIONDIVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECEPTIONDIV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERVICECODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERVICECODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MERCHANDISECDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMERCHANDISECD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STRSTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTRSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REZSTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREZSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DELFLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDELFLG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DELDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDELDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROCESSDIVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROCESSDIV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CalCalenderDataTableRow
            Get
                Return CType(Me.Rows(index),CalCalenderDataTableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalCalenderDataTableRowChanging As CalCalenderDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalCalenderDataTableRowChanged As CalCalenderDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalCalenderDataTableRowDeleting As CalCalenderDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalCalenderDataTableRowDeleted As CalCalenderDataTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCalCalenderDataTableRow(ByVal row As CalCalenderDataTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCalCalenderDataTableRow( _
                    ByVal CALID As String,  _
                    ByVal DLRCD As String,  _
                    ByVal STRCD As String,  _
                    ByVal SCHEDULEDIV As String,  _
                    ByVal SCHEDULEID As String,  _
                    ByVal CUSTOMERDIV As String,  _
                    ByVal CUSTCODE As String,  _
                    ByVal CUSTNAME As String,  _
                    ByVal DMSID As String,  _
                    ByVal RECEPTIONDIV As String,  _
                    ByVal SERVICECODE As String,  _
                    ByVal MERCHANDISECD As String,  _
                    ByVal STRSTATUS As String,  _
                    ByVal REZSTATUS As String,  _
                    ByVal DELFLG As String,  _
                    ByVal DELDATE As String,  _
                    ByVal CREATEDATE As String,  _
                    ByVal UPDATEDATE As String,  _
                    ByVal CREATEACCOUNT As String,  _
                    ByVal UPDATEACCOUNT As String,  _
                    ByVal CREATEID As String,  _
                    ByVal UPDATEID As String,  _
                    ByVal PROCESSDIV As String) As CalCalenderDataTableRow
            Dim rowCalCalenderDataTableRow As CalCalenderDataTableRow = CType(Me.NewRow,CalCalenderDataTableRow)
            Dim columnValuesArray() As Object = New Object() {CALID, DLRCD, STRCD, SCHEDULEDIV, SCHEDULEID, CUSTOMERDIV, CUSTCODE, CUSTNAME, DMSID, RECEPTIONDIV, SERVICECODE, MERCHANDISECD, STRSTATUS, REZSTATUS, DELFLG, DELDATE, CREATEDATE, UPDATEDATE, CREATEACCOUNT, UPDATEACCOUNT, CREATEID, UPDATEID, PROCESSDIV}
            rowCalCalenderDataTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCalCalenderDataTableRow)
            Return rowCalCalenderDataTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CalCalenderDataTableDataTable = CType(MyBase.Clone,CalCalenderDataTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CalCalenderDataTableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCALID = MyBase.Columns("CALID")
            Me.columnDLRCD = MyBase.Columns("DLRCD")
            Me.columnSTRCD = MyBase.Columns("STRCD")
            Me.columnSCHEDULEDIV = MyBase.Columns("SCHEDULEDIV")
            Me.columnSCHEDULEID = MyBase.Columns("SCHEDULEID")
            Me.columnCUSTOMERDIV = MyBase.Columns("CUSTOMERDIV")
            Me.columnCUSTCODE = MyBase.Columns("CUSTCODE")
            Me.columnCUSTNAME = MyBase.Columns("CUSTNAME")
            Me.columnDMSID = MyBase.Columns("DMSID")
            Me.columnRECEPTIONDIV = MyBase.Columns("RECEPTIONDIV")
            Me.columnSERVICECODE = MyBase.Columns("SERVICECODE")
            Me.columnMERCHANDISECD = MyBase.Columns("MERCHANDISECD")
            Me.columnSTRSTATUS = MyBase.Columns("STRSTATUS")
            Me.columnREZSTATUS = MyBase.Columns("REZSTATUS")
            Me.columnDELFLG = MyBase.Columns("DELFLG")
            Me.columnDELDATE = MyBase.Columns("DELDATE")
            Me.columnCREATEDATE = MyBase.Columns("CREATEDATE")
            Me.columnUPDATEDATE = MyBase.Columns("UPDATEDATE")
            Me.columnCREATEACCOUNT = MyBase.Columns("CREATEACCOUNT")
            Me.columnUPDATEACCOUNT = MyBase.Columns("UPDATEACCOUNT")
            Me.columnCREATEID = MyBase.Columns("CREATEID")
            Me.columnUPDATEID = MyBase.Columns("UPDATEID")
            Me.columnPROCESSDIV = MyBase.Columns("PROCESSDIV")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCALID = New Global.System.Data.DataColumn("CALID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCALID)
            Me.columnDLRCD = New Global.System.Data.DataColumn("DLRCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDLRCD)
            Me.columnSTRCD = New Global.System.Data.DataColumn("STRCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTRCD)
            Me.columnSCHEDULEDIV = New Global.System.Data.DataColumn("SCHEDULEDIV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCHEDULEDIV)
            Me.columnSCHEDULEID = New Global.System.Data.DataColumn("SCHEDULEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCHEDULEID)
            Me.columnCUSTOMERDIV = New Global.System.Data.DataColumn("CUSTOMERDIV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTOMERDIV)
            Me.columnCUSTCODE = New Global.System.Data.DataColumn("CUSTCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTCODE)
            Me.columnCUSTNAME = New Global.System.Data.DataColumn("CUSTNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTNAME)
            Me.columnDMSID = New Global.System.Data.DataColumn("DMSID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDMSID)
            Me.columnRECEPTIONDIV = New Global.System.Data.DataColumn("RECEPTIONDIV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECEPTIONDIV)
            Me.columnSERVICECODE = New Global.System.Data.DataColumn("SERVICECODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERVICECODE)
            Me.columnMERCHANDISECD = New Global.System.Data.DataColumn("MERCHANDISECD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMERCHANDISECD)
            Me.columnSTRSTATUS = New Global.System.Data.DataColumn("STRSTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTRSTATUS)
            Me.columnREZSTATUS = New Global.System.Data.DataColumn("REZSTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREZSTATUS)
            Me.columnDELFLG = New Global.System.Data.DataColumn("DELFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDELFLG)
            Me.columnDELDATE = New Global.System.Data.DataColumn("DELDATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDELDATE)
            Me.columnCREATEDATE = New Global.System.Data.DataColumn("CREATEDATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDATE)
            Me.columnUPDATEDATE = New Global.System.Data.DataColumn("UPDATEDATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEDATE)
            Me.columnCREATEACCOUNT = New Global.System.Data.DataColumn("CREATEACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEACCOUNT)
            Me.columnUPDATEACCOUNT = New Global.System.Data.DataColumn("UPDATEACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEACCOUNT)
            Me.columnCREATEID = New Global.System.Data.DataColumn("CREATEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEID)
            Me.columnUPDATEID = New Global.System.Data.DataColumn("UPDATEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEID)
            Me.columnPROCESSDIV = New Global.System.Data.DataColumn("PROCESSDIV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROCESSDIV)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint12", New Global.System.Data.DataColumn() {Me.columnCALID}, false))
            Me.columnCALID.Unique = true
            Me.columnCALID.MaxLength = 20
            Me.columnDLRCD.MaxLength = 5
            Me.columnSTRCD.MaxLength = 3
            Me.columnSCHEDULEDIV.MaxLength = 1
            Me.columnSCHEDULEID.MaxLength = 20
            Me.columnCUSTOMERDIV.MaxLength = 1
            Me.columnCUSTCODE.MaxLength = 20
            Me.columnCUSTNAME.MaxLength = 256
            Me.columnDMSID.MaxLength = 18
            Me.columnRECEPTIONDIV.MaxLength = 1
            Me.columnSERVICECODE.MaxLength = 20
            Me.columnMERCHANDISECD.MaxLength = 8
            Me.columnSTRSTATUS.MaxLength = 1
            Me.columnDELFLG.MaxLength = 1
            Me.columnUPDATEDATE.DefaultValue = CType("9999/12/31 0:00:00",String)
            Me.columnCREATEACCOUNT.MaxLength = 20
            Me.columnUPDATEACCOUNT.MaxLength = 20
            Me.columnCREATEID.MaxLength = 16
            Me.columnPROCESSDIV.MaxLength = 16
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCalCalenderDataTableRow() As CalCalenderDataTableRow
            Return CType(Me.NewRow,CalCalenderDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CalCalenderDataTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CalCalenderDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CalCalenderDataTableRowChangedEvent) Is Nothing) Then
                RaiseEvent CalCalenderDataTableRowChanged(Me, New CalCalenderDataTableRowChangeEvent(CType(e.Row,CalCalenderDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CalCalenderDataTableRowChangingEvent) Is Nothing) Then
                RaiseEvent CalCalenderDataTableRowChanging(Me, New CalCalenderDataTableRowChangeEvent(CType(e.Row,CalCalenderDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CalCalenderDataTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent CalCalenderDataTableRowDeleted(Me, New CalCalenderDataTableRowChangeEvent(CType(e.Row,CalCalenderDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CalCalenderDataTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent CalCalenderDataTableRowDeleting(Me, New CalCalenderDataTableRowChangeEvent(CType(e.Row,CalCalenderDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCalCalenderDataTableRow(ByVal row As CalCalenderDataTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3040403DataSet = New IC3040403DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CalCalenderDataTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CalTodoItemDataTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of CalTodoItemDataTableRow)
        
        Private columnTODOID As Global.System.Data.DataColumn
        
        Private columnCALID As Global.System.Data.DataColumn
        
        Private columnUNIQUEID As Global.System.Data.DataColumn
        
        Private columnRECURRENCEID As Global.System.Data.DataColumn
        
        Private columnCHGSEQNO As Global.System.Data.DataColumn
        
        Private columnACTSTAFFSTRCD As Global.System.Data.DataColumn
        
        Private columnACTSTAFFCD As Global.System.Data.DataColumn
        
        Private columnRECSTAFFSTRCD As Global.System.Data.DataColumn
        
        Private columnRECSTAFFCD As Global.System.Data.DataColumn
        
        Private columnCONTACTNO As Global.System.Data.DataColumn
        
        Private columnSUMMARY As Global.System.Data.DataColumn
        
        Private columnSTARTTIME As Global.System.Data.DataColumn
        
        Private columnENDTIME As Global.System.Data.DataColumn
        
        Private columnSTARTTIMEFLG As Global.System.Data.DataColumn
        
        Private columnTIMEFLG As Global.System.Data.DataColumn
        
        Private columnALLDAYFLG As Global.System.Data.DataColumn
        
        Private columnMEMO As Global.System.Data.DataColumn
        
        Private columnICROPCOLOR As Global.System.Data.DataColumn
        
        Private columnPARENTDIV As Global.System.Data.DataColumn
        
        Private columnRRULE_FREQ As Global.System.Data.DataColumn
        
        Private columnRRULE_INTERVAL As Global.System.Data.DataColumn
        
        Private columnRRULE_UNTIL As Global.System.Data.DataColumn
        
        Private columnRRULE_TEXT As Global.System.Data.DataColumn
        
        Private columnCOMPLETIONFLG As Global.System.Data.DataColumn
        
        Private columnCOMPLETIONDATE As Global.System.Data.DataColumn
        
        Private columnDELFLG As Global.System.Data.DataColumn
        
        Private columnDELDATE As Global.System.Data.DataColumn
        
        Private columnCREATEDATE As Global.System.Data.DataColumn
        
        Private columnUPDATEDATE As Global.System.Data.DataColumn
        
        Private columnCREATEACCOUNT As Global.System.Data.DataColumn
        
        Private columnUPDATEACCOUNT As Global.System.Data.DataColumn
        
        Private columnCREATEID As Global.System.Data.DataColumn
        
        Private columnUPDATEID As Global.System.Data.DataColumn
        
        Private columnPROCESSDIV As Global.System.Data.DataColumn
        
        Private columnCONTACT_NAME As Global.System.Data.DataColumn
        
        Private columnACT_ODR_NAME As Global.System.Data.DataColumn
        
        Private columnODR_DIV As Global.System.Data.DataColumn
        
        Private columnAFTER_ODR_ACT_ID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CalTodoItemDataTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TODOIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTODOID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CALIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCALID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UNIQUEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNIQUEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECURRENCEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECURRENCEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHGSEQNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHGSEQNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACTSTAFFSTRCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTSTAFFSTRCD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACTSTAFFCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTSTAFFCD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECSTAFFSTRCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECSTAFFSTRCD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECSTAFFCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECSTAFFCD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTACTNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACTNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUMMARYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUMMARY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STARTTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTARTTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENDTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENDTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STARTTIMEFLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTARTTIMEFLG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIMEFLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMEFLG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ALLDAYFLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnALLDAYFLG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ICROPCOLORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnICROPCOLOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PARENTDIVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARENTDIV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RRULE_FREQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRULE_FREQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RRULE_INTERVALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRULE_INTERVAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RRULE_UNTILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRULE_UNTIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RRULE_TEXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRULE_TEXT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPLETIONFLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPLETIONFLG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPLETIONDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPLETIONDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DELFLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDELFLG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DELDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDELDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROCESSDIVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROCESSDIV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTACT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACT_ODR_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACT_ODR_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ODR_DIVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODR_DIV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AFTER_ODR_ACT_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAFTER_ODR_ACT_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CalTodoItemDataTableRow
            Get
                Return CType(Me.Rows(index),CalTodoItemDataTableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalTodoItemDataTableRowChanging As CalTodoItemDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalTodoItemDataTableRowChanged As CalTodoItemDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalTodoItemDataTableRowDeleting As CalTodoItemDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalTodoItemDataTableRowDeleted As CalTodoItemDataTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCalTodoItemDataTableRow(ByVal row As CalTodoItemDataTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCalTodoItemDataTableRow( _
                    ByVal TODOID As String,  _
                    ByVal CALID As String,  _
                    ByVal UNIQUEID As String,  _
                    ByVal RECURRENCEID As String,  _
                    ByVal CHGSEQNO As String,  _
                    ByVal ACTSTAFFSTRCD As String,  _
                    ByVal ACTSTAFFCD As String,  _
                    ByVal RECSTAFFSTRCD As String,  _
                    ByVal RECSTAFFCD As String,  _
                    ByVal CONTACTNO As String,  _
                    ByVal SUMMARY As String,  _
                    ByVal STARTTIME As String,  _
                    ByVal ENDTIME As String,  _
                    ByVal STARTTIMEFLG As String,  _
                    ByVal TIMEFLG As String,  _
                    ByVal ALLDAYFLG As String,  _
                    ByVal MEMO As String,  _
                    ByVal ICROPCOLOR As String,  _
                    ByVal PARENTDIV As String,  _
                    ByVal RRULE_FREQ As String,  _
                    ByVal RRULE_INTERVAL As String,  _
                    ByVal RRULE_UNTIL As String,  _
                    ByVal RRULE_TEXT As String,  _
                    ByVal COMPLETIONFLG As String,  _
                    ByVal COMPLETIONDATE As String,  _
                    ByVal DELFLG As String,  _
                    ByVal DELDATE As String,  _
                    ByVal CREATEDATE As String,  _
                    ByVal UPDATEDATE As String,  _
                    ByVal CREATEACCOUNT As String,  _
                    ByVal UPDATEACCOUNT As String,  _
                    ByVal CREATEID As String,  _
                    ByVal UPDATEID As String,  _
                    ByVal PROCESSDIV As String,  _
                    ByVal CONTACT_NAME As String,  _
                    ByVal ACT_ODR_NAME As String,  _
                    ByVal ODR_DIV As String,  _
                    ByVal AFTER_ODR_ACT_ID As String) As CalTodoItemDataTableRow
            Dim rowCalTodoItemDataTableRow As CalTodoItemDataTableRow = CType(Me.NewRow,CalTodoItemDataTableRow)
            Dim columnValuesArray() As Object = New Object() {TODOID, CALID, UNIQUEID, RECURRENCEID, CHGSEQNO, ACTSTAFFSTRCD, ACTSTAFFCD, RECSTAFFSTRCD, RECSTAFFCD, CONTACTNO, SUMMARY, STARTTIME, ENDTIME, STARTTIMEFLG, TIMEFLG, ALLDAYFLG, MEMO, ICROPCOLOR, PARENTDIV, RRULE_FREQ, RRULE_INTERVAL, RRULE_UNTIL, RRULE_TEXT, COMPLETIONFLG, COMPLETIONDATE, DELFLG, DELDATE, CREATEDATE, UPDATEDATE, CREATEACCOUNT, UPDATEACCOUNT, CREATEID, UPDATEID, PROCESSDIV, CONTACT_NAME, ACT_ODR_NAME, ODR_DIV, AFTER_ODR_ACT_ID}
            rowCalTodoItemDataTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCalTodoItemDataTableRow)
            Return rowCalTodoItemDataTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CalTodoItemDataTableDataTable = CType(MyBase.Clone,CalTodoItemDataTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CalTodoItemDataTableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTODOID = MyBase.Columns("TODOID")
            Me.columnCALID = MyBase.Columns("CALID")
            Me.columnUNIQUEID = MyBase.Columns("UNIQUEID")
            Me.columnRECURRENCEID = MyBase.Columns("RECURRENCEID")
            Me.columnCHGSEQNO = MyBase.Columns("CHGSEQNO")
            Me.columnACTSTAFFSTRCD = MyBase.Columns("ACTSTAFFSTRCD")
            Me.columnACTSTAFFCD = MyBase.Columns("ACTSTAFFCD")
            Me.columnRECSTAFFSTRCD = MyBase.Columns("RECSTAFFSTRCD")
            Me.columnRECSTAFFCD = MyBase.Columns("RECSTAFFCD")
            Me.columnCONTACTNO = MyBase.Columns("CONTACTNO")
            Me.columnSUMMARY = MyBase.Columns("SUMMARY")
            Me.columnSTARTTIME = MyBase.Columns("STARTTIME")
            Me.columnENDTIME = MyBase.Columns("ENDTIME")
            Me.columnSTARTTIMEFLG = MyBase.Columns("STARTTIMEFLG")
            Me.columnTIMEFLG = MyBase.Columns("TIMEFLG")
            Me.columnALLDAYFLG = MyBase.Columns("ALLDAYFLG")
            Me.columnMEMO = MyBase.Columns("MEMO")
            Me.columnICROPCOLOR = MyBase.Columns("ICROPCOLOR")
            Me.columnPARENTDIV = MyBase.Columns("PARENTDIV")
            Me.columnRRULE_FREQ = MyBase.Columns("RRULE_FREQ")
            Me.columnRRULE_INTERVAL = MyBase.Columns("RRULE_INTERVAL")
            Me.columnRRULE_UNTIL = MyBase.Columns("RRULE_UNTIL")
            Me.columnRRULE_TEXT = MyBase.Columns("RRULE_TEXT")
            Me.columnCOMPLETIONFLG = MyBase.Columns("COMPLETIONFLG")
            Me.columnCOMPLETIONDATE = MyBase.Columns("COMPLETIONDATE")
            Me.columnDELFLG = MyBase.Columns("DELFLG")
            Me.columnDELDATE = MyBase.Columns("DELDATE")
            Me.columnCREATEDATE = MyBase.Columns("CREATEDATE")
            Me.columnUPDATEDATE = MyBase.Columns("UPDATEDATE")
            Me.columnCREATEACCOUNT = MyBase.Columns("CREATEACCOUNT")
            Me.columnUPDATEACCOUNT = MyBase.Columns("UPDATEACCOUNT")
            Me.columnCREATEID = MyBase.Columns("CREATEID")
            Me.columnUPDATEID = MyBase.Columns("UPDATEID")
            Me.columnPROCESSDIV = MyBase.Columns("PROCESSDIV")
            Me.columnCONTACT_NAME = MyBase.Columns("CONTACT_NAME")
            Me.columnACT_ODR_NAME = MyBase.Columns("ACT_ODR_NAME")
            Me.columnODR_DIV = MyBase.Columns("ODR_DIV")
            Me.columnAFTER_ODR_ACT_ID = MyBase.Columns("AFTER_ODR_ACT_ID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTODOID = New Global.System.Data.DataColumn("TODOID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTODOID)
            Me.columnCALID = New Global.System.Data.DataColumn("CALID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCALID)
            Me.columnUNIQUEID = New Global.System.Data.DataColumn("UNIQUEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNIQUEID)
            Me.columnRECURRENCEID = New Global.System.Data.DataColumn("RECURRENCEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECURRENCEID)
            Me.columnCHGSEQNO = New Global.System.Data.DataColumn("CHGSEQNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHGSEQNO)
            Me.columnACTSTAFFSTRCD = New Global.System.Data.DataColumn("ACTSTAFFSTRCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTSTAFFSTRCD)
            Me.columnACTSTAFFCD = New Global.System.Data.DataColumn("ACTSTAFFCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTSTAFFCD)
            Me.columnRECSTAFFSTRCD = New Global.System.Data.DataColumn("RECSTAFFSTRCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECSTAFFSTRCD)
            Me.columnRECSTAFFCD = New Global.System.Data.DataColumn("RECSTAFFCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECSTAFFCD)
            Me.columnCONTACTNO = New Global.System.Data.DataColumn("CONTACTNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACTNO)
            Me.columnSUMMARY = New Global.System.Data.DataColumn("SUMMARY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUMMARY)
            Me.columnSTARTTIME = New Global.System.Data.DataColumn("STARTTIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTARTTIME)
            Me.columnENDTIME = New Global.System.Data.DataColumn("ENDTIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENDTIME)
            Me.columnSTARTTIMEFLG = New Global.System.Data.DataColumn("STARTTIMEFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTARTTIMEFLG)
            Me.columnTIMEFLG = New Global.System.Data.DataColumn("TIMEFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMEFLG)
            Me.columnALLDAYFLG = New Global.System.Data.DataColumn("ALLDAYFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALLDAYFLG)
            Me.columnMEMO = New Global.System.Data.DataColumn("MEMO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMO)
            Me.columnICROPCOLOR = New Global.System.Data.DataColumn("ICROPCOLOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnICROPCOLOR)
            Me.columnPARENTDIV = New Global.System.Data.DataColumn("PARENTDIV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARENTDIV)
            Me.columnRRULE_FREQ = New Global.System.Data.DataColumn("RRULE_FREQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRULE_FREQ)
            Me.columnRRULE_INTERVAL = New Global.System.Data.DataColumn("RRULE_INTERVAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRULE_INTERVAL)
            Me.columnRRULE_UNTIL = New Global.System.Data.DataColumn("RRULE_UNTIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRULE_UNTIL)
            Me.columnRRULE_TEXT = New Global.System.Data.DataColumn("RRULE_TEXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRULE_TEXT)
            Me.columnCOMPLETIONFLG = New Global.System.Data.DataColumn("COMPLETIONFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPLETIONFLG)
            Me.columnCOMPLETIONDATE = New Global.System.Data.DataColumn("COMPLETIONDATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPLETIONDATE)
            Me.columnDELFLG = New Global.System.Data.DataColumn("DELFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDELFLG)
            Me.columnDELDATE = New Global.System.Data.DataColumn("DELDATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDELDATE)
            Me.columnCREATEDATE = New Global.System.Data.DataColumn("CREATEDATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDATE)
            Me.columnUPDATEDATE = New Global.System.Data.DataColumn("UPDATEDATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEDATE)
            Me.columnCREATEACCOUNT = New Global.System.Data.DataColumn("CREATEACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEACCOUNT)
            Me.columnUPDATEACCOUNT = New Global.System.Data.DataColumn("UPDATEACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEACCOUNT)
            Me.columnCREATEID = New Global.System.Data.DataColumn("CREATEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEID)
            Me.columnUPDATEID = New Global.System.Data.DataColumn("UPDATEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEID)
            Me.columnPROCESSDIV = New Global.System.Data.DataColumn("PROCESSDIV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROCESSDIV)
            Me.columnCONTACT_NAME = New Global.System.Data.DataColumn("CONTACT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACT_NAME)
            Me.columnACT_ODR_NAME = New Global.System.Data.DataColumn("ACT_ODR_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACT_ODR_NAME)
            Me.columnODR_DIV = New Global.System.Data.DataColumn("ODR_DIV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODR_DIV)
            Me.columnAFTER_ODR_ACT_ID = New Global.System.Data.DataColumn("AFTER_ODR_ACT_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAFTER_ODR_ACT_ID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint11", New Global.System.Data.DataColumn() {Me.columnTODOID}, false))
            Me.columnTODOID.Unique = true
            Me.columnTODOID.MaxLength = 20
            Me.columnCALID.MaxLength = 20
            Me.columnUNIQUEID.MaxLength = 64
            Me.columnRECURRENCEID.MaxLength = 64
            Me.columnACTSTAFFSTRCD.MaxLength = 3
            Me.columnACTSTAFFCD.MaxLength = 20
            Me.columnRECSTAFFSTRCD.MaxLength = 3
            Me.columnRECSTAFFCD.MaxLength = 20
            Me.columnSUMMARY.MaxLength = 1000
            Me.columnSTARTTIMEFLG.MaxLength = 1
            Me.columnTIMEFLG.MaxLength = 1
            Me.columnALLDAYFLG.MaxLength = 1
            Me.columnMEMO.MaxLength = 2000
            Me.columnICROPCOLOR.MaxLength = 30
            Me.columnPARENTDIV.Caption = "RRULE_FREQ"
            Me.columnPARENTDIV.MaxLength = 10
            Me.columnRRULE_FREQ.MaxLength = 10
            Me.columnRRULE_TEXT.MaxLength = 512
            Me.columnCOMPLETIONFLG.MaxLength = 1
            Me.columnDELFLG.MaxLength = 1
            Me.columnCREATEACCOUNT.MaxLength = 20
            Me.columnUPDATEACCOUNT.MaxLength = 20
            Me.columnCREATEID.MaxLength = 16
            Me.columnPROCESSDIV.MaxLength = 16
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCalTodoItemDataTableRow() As CalTodoItemDataTableRow
            Return CType(Me.NewRow,CalTodoItemDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CalTodoItemDataTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CalTodoItemDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CalTodoItemDataTableRowChangedEvent) Is Nothing) Then
                RaiseEvent CalTodoItemDataTableRowChanged(Me, New CalTodoItemDataTableRowChangeEvent(CType(e.Row,CalTodoItemDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CalTodoItemDataTableRowChangingEvent) Is Nothing) Then
                RaiseEvent CalTodoItemDataTableRowChanging(Me, New CalTodoItemDataTableRowChangeEvent(CType(e.Row,CalTodoItemDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CalTodoItemDataTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent CalTodoItemDataTableRowDeleted(Me, New CalTodoItemDataTableRowChangeEvent(CType(e.Row,CalTodoItemDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CalTodoItemDataTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent CalTodoItemDataTableRowDeleting(Me, New CalTodoItemDataTableRowChangeEvent(CType(e.Row,CalTodoItemDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCalTodoItemDataTableRow(ByVal row As CalTodoItemDataTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3040403DataSet = New IC3040403DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CalTodoItemDataTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CalTodoAlarmDataTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of CalTodoAlarmDataTableRow)
        
        Private columnTODOID As Global.System.Data.DataColumn
        
        Private columnSEQNO As Global.System.Data.DataColumn
        
        Private columnSTARTTRIGGER As Global.System.Data.DataColumn
        
        Private columnCREATEDATE As Global.System.Data.DataColumn
        
        Private columnUPDATEDATE As Global.System.Data.DataColumn
        
        Private columnCREATEACCOUNT As Global.System.Data.DataColumn
        
        Private columnUPDATEACCOUNT As Global.System.Data.DataColumn
        
        Private columnCREATEID As Global.System.Data.DataColumn
        
        Private columnUPDATEID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CalTodoAlarmDataTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TODOIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTODOID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SEQNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEQNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STARTTRIGGERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTARTTRIGGER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CalTodoAlarmDataTableRow
            Get
                Return CType(Me.Rows(index),CalTodoAlarmDataTableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalTodoAlarmDataTableRowChanging As CalTodoAlarmDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalTodoAlarmDataTableRowChanged As CalTodoAlarmDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalTodoAlarmDataTableRowDeleting As CalTodoAlarmDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalTodoAlarmDataTableRowDeleted As CalTodoAlarmDataTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCalTodoAlarmDataTableRow(ByVal row As CalTodoAlarmDataTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCalTodoAlarmDataTableRow(ByVal TODOID As String, ByVal SEQNO As String, ByVal STARTTRIGGER As String, ByVal CREATEDATE As String, ByVal UPDATEDATE As String, ByVal CREATEACCOUNT As String, ByVal UPDATEACCOUNT As String, ByVal CREATEID As String, ByVal UPDATEID As String) As CalTodoAlarmDataTableRow
            Dim rowCalTodoAlarmDataTableRow As CalTodoAlarmDataTableRow = CType(Me.NewRow,CalTodoAlarmDataTableRow)
            Dim columnValuesArray() As Object = New Object() {TODOID, SEQNO, STARTTRIGGER, CREATEDATE, UPDATEDATE, CREATEACCOUNT, UPDATEACCOUNT, CREATEID, UPDATEID}
            rowCalTodoAlarmDataTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCalTodoAlarmDataTableRow)
            Return rowCalTodoAlarmDataTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CalTodoAlarmDataTableDataTable = CType(MyBase.Clone,CalTodoAlarmDataTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CalTodoAlarmDataTableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTODOID = MyBase.Columns("TODOID")
            Me.columnSEQNO = MyBase.Columns("SEQNO")
            Me.columnSTARTTRIGGER = MyBase.Columns("STARTTRIGGER")
            Me.columnCREATEDATE = MyBase.Columns("CREATEDATE")
            Me.columnUPDATEDATE = MyBase.Columns("UPDATEDATE")
            Me.columnCREATEACCOUNT = MyBase.Columns("CREATEACCOUNT")
            Me.columnUPDATEACCOUNT = MyBase.Columns("UPDATEACCOUNT")
            Me.columnCREATEID = MyBase.Columns("CREATEID")
            Me.columnUPDATEID = MyBase.Columns("UPDATEID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTODOID = New Global.System.Data.DataColumn("TODOID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTODOID)
            Me.columnSEQNO = New Global.System.Data.DataColumn("SEQNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEQNO)
            Me.columnSTARTTRIGGER = New Global.System.Data.DataColumn("STARTTRIGGER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTARTTRIGGER)
            Me.columnCREATEDATE = New Global.System.Data.DataColumn("CREATEDATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDATE)
            Me.columnUPDATEDATE = New Global.System.Data.DataColumn("UPDATEDATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEDATE)
            Me.columnCREATEACCOUNT = New Global.System.Data.DataColumn("CREATEACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEACCOUNT)
            Me.columnUPDATEACCOUNT = New Global.System.Data.DataColumn("UPDATEACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEACCOUNT)
            Me.columnCREATEID = New Global.System.Data.DataColumn("CREATEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEID)
            Me.columnUPDATEID = New Global.System.Data.DataColumn("UPDATEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint11", New Global.System.Data.DataColumn() {Me.columnTODOID, Me.columnSEQNO}, false))
            Me.columnTODOID.MaxLength = 64
            Me.columnSTARTTRIGGER.MaxLength = 1
            Me.columnCREATEACCOUNT.MaxLength = 20
            Me.columnUPDATEACCOUNT.MaxLength = 20
            Me.columnCREATEID.MaxLength = 16
            Me.columnUPDATEID.MaxLength = 16
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCalTodoAlarmDataTableRow() As CalTodoAlarmDataTableRow
            Return CType(Me.NewRow,CalTodoAlarmDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CalTodoAlarmDataTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CalTodoAlarmDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CalTodoAlarmDataTableRowChangedEvent) Is Nothing) Then
                RaiseEvent CalTodoAlarmDataTableRowChanged(Me, New CalTodoAlarmDataTableRowChangeEvent(CType(e.Row,CalTodoAlarmDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CalTodoAlarmDataTableRowChangingEvent) Is Nothing) Then
                RaiseEvent CalTodoAlarmDataTableRowChanging(Me, New CalTodoAlarmDataTableRowChangeEvent(CType(e.Row,CalTodoAlarmDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CalTodoAlarmDataTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent CalTodoAlarmDataTableRowDeleted(Me, New CalTodoAlarmDataTableRowChangeEvent(CType(e.Row,CalTodoAlarmDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CalTodoAlarmDataTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent CalTodoAlarmDataTableRowDeleting(Me, New CalTodoAlarmDataTableRowChangeEvent(CType(e.Row,CalTodoAlarmDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCalTodoAlarmDataTableRow(ByVal row As CalTodoAlarmDataTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3040403DataSet = New IC3040403DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CalTodoAlarmDataTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CalEventItemDataTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of CalEventItemDataTableRow)
        
        Private columnEVENTID As Global.System.Data.DataColumn
        
        Private columnCALID As Global.System.Data.DataColumn
        
        Private columnTODOID As Global.System.Data.DataColumn
        
        Private columnUNIQUEID As Global.System.Data.DataColumn
        
        Private columnRECURRENCEID As Global.System.Data.DataColumn
        
        Private columnCHGSEQNO As Global.System.Data.DataColumn
        
        Private columnACTSTAFFSTRCD As Global.System.Data.DataColumn
        
        Private columnACTSTAFFCD As Global.System.Data.DataColumn
        
        Private columnRECSTAFFSTRCD As Global.System.Data.DataColumn
        
        Private columnRECSTAFFCD As Global.System.Data.DataColumn
        
        Private columnCONTACTNO As Global.System.Data.DataColumn
        
        Private columnSUMMARY As Global.System.Data.DataColumn
        
        Private columnSTARTTIME As Global.System.Data.DataColumn
        
        Private columnENDTIME As Global.System.Data.DataColumn
        
        Private columnTIMEFLG As Global.System.Data.DataColumn
        
        Private columnALLDAYFLG As Global.System.Data.DataColumn
        
        Private columnMEMO As Global.System.Data.DataColumn
        
        Private columnICROPCOLOR As Global.System.Data.DataColumn
        
        Private columnRRULE_FREQ As Global.System.Data.DataColumn
        
        Private columnRRULE_INTERVAL As Global.System.Data.DataColumn
        
        Private columnRRULE_UNTIL As Global.System.Data.DataColumn
        
        Private columnRRULE_TEXT As Global.System.Data.DataColumn
        
        Private columnLOCATION As Global.System.Data.DataColumn
        
        Private columnATTENDEE As Global.System.Data.DataColumn
        
        Private columnTRANSP As Global.System.Data.DataColumn
        
        Private columnURL As Global.System.Data.DataColumn
        
        Private columnDELFLG As Global.System.Data.DataColumn
        
        Private columnDELDATE As Global.System.Data.DataColumn
        
        Private columnCREATEDATE As Global.System.Data.DataColumn
        
        Private columnUPDATEDATE As Global.System.Data.DataColumn
        
        Private columnCREATEACCOUNT As Global.System.Data.DataColumn
        
        Private columnUPDATEACCOUNT As Global.System.Data.DataColumn
        
        Private columnCREATEID As Global.System.Data.DataColumn
        
        Private columnUPDATEID As Global.System.Data.DataColumn
        
        Private columnPROCESSDIV As Global.System.Data.DataColumn
        
        Private columnCONTACT_NAME As Global.System.Data.DataColumn
        
        Private columnACT_ODR_NAME As Global.System.Data.DataColumn
        
        Private columnODR_DIV As Global.System.Data.DataColumn
        
        Private columnAFTER_ODR_ACT_ID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CalEventItemDataTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EVENTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEVENTID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CALIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCALID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TODOIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTODOID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UNIQUEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNIQUEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECURRENCEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECURRENCEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHGSEQNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHGSEQNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACTSTAFFSTRCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTSTAFFSTRCD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACTSTAFFCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTSTAFFCD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECSTAFFSTRCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECSTAFFSTRCD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECSTAFFCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECSTAFFCD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTACTNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACTNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUMMARYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUMMARY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STARTTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTARTTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENDTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENDTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIMEFLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMEFLG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ALLDAYFLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnALLDAYFLG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ICROPCOLORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnICROPCOLOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RRULE_FREQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRULE_FREQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RRULE_INTERVALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRULE_INTERVAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RRULE_UNTILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRULE_UNTIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RRULE_TEXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRULE_TEXT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOCATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOCATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ATTENDEEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATTENDEE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRANSPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property URLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnURL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DELFLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDELFLG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DELDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDELDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROCESSDIVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROCESSDIV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTACT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACT_ODR_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACT_ODR_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ODR_DIVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODR_DIV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AFTER_ODR_ACT_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAFTER_ODR_ACT_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CalEventItemDataTableRow
            Get
                Return CType(Me.Rows(index),CalEventItemDataTableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalEventItemDataTableRowChanging As CalEventItemDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalEventItemDataTableRowChanged As CalEventItemDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalEventItemDataTableRowDeleting As CalEventItemDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalEventItemDataTableRowDeleted As CalEventItemDataTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCalEventItemDataTableRow(ByVal row As CalEventItemDataTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCalEventItemDataTableRow( _
                    ByVal EVENTID As String,  _
                    ByVal CALID As String,  _
                    ByVal TODOID As String,  _
                    ByVal UNIQUEID As String,  _
                    ByVal RECURRENCEID As String,  _
                    ByVal CHGSEQNO As String,  _
                    ByVal ACTSTAFFSTRCD As String,  _
                    ByVal ACTSTAFFCD As String,  _
                    ByVal RECSTAFFSTRCD As String,  _
                    ByVal RECSTAFFCD As String,  _
                    ByVal CONTACTNO As String,  _
                    ByVal SUMMARY As String,  _
                    ByVal STARTTIME As String,  _
                    ByVal ENDTIME As String,  _
                    ByVal TIMEFLG As String,  _
                    ByVal ALLDAYFLG As String,  _
                    ByVal MEMO As String,  _
                    ByVal ICROPCOLOR As String,  _
                    ByVal RRULE_FREQ As String,  _
                    ByVal RRULE_INTERVAL As String,  _
                    ByVal RRULE_UNTIL As String,  _
                    ByVal RRULE_TEXT As String,  _
                    ByVal LOCATION As String,  _
                    ByVal ATTENDEE As String,  _
                    ByVal TRANSP As String,  _
                    ByVal URL As String,  _
                    ByVal DELFLG As String,  _
                    ByVal DELDATE As String,  _
                    ByVal CREATEDATE As String,  _
                    ByVal UPDATEDATE As String,  _
                    ByVal CREATEACCOUNT As String,  _
                    ByVal UPDATEACCOUNT As String,  _
                    ByVal CREATEID As String,  _
                    ByVal UPDATEID As String,  _
                    ByVal PROCESSDIV As String,  _
                    ByVal CONTACT_NAME As String,  _
                    ByVal ACT_ODR_NAME As String,  _
                    ByVal ODR_DIV As String,  _
                    ByVal AFTER_ODR_ACT_ID As String) As CalEventItemDataTableRow
            Dim rowCalEventItemDataTableRow As CalEventItemDataTableRow = CType(Me.NewRow,CalEventItemDataTableRow)
            Dim columnValuesArray() As Object = New Object() {EVENTID, CALID, TODOID, UNIQUEID, RECURRENCEID, CHGSEQNO, ACTSTAFFSTRCD, ACTSTAFFCD, RECSTAFFSTRCD, RECSTAFFCD, CONTACTNO, SUMMARY, STARTTIME, ENDTIME, TIMEFLG, ALLDAYFLG, MEMO, ICROPCOLOR, RRULE_FREQ, RRULE_INTERVAL, RRULE_UNTIL, RRULE_TEXT, LOCATION, ATTENDEE, TRANSP, URL, DELFLG, DELDATE, CREATEDATE, UPDATEDATE, CREATEACCOUNT, UPDATEACCOUNT, CREATEID, UPDATEID, PROCESSDIV, CONTACT_NAME, ACT_ODR_NAME, ODR_DIV, AFTER_ODR_ACT_ID}
            rowCalEventItemDataTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCalEventItemDataTableRow)
            Return rowCalEventItemDataTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CalEventItemDataTableDataTable = CType(MyBase.Clone,CalEventItemDataTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CalEventItemDataTableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnEVENTID = MyBase.Columns("EVENTID")
            Me.columnCALID = MyBase.Columns("CALID")
            Me.columnTODOID = MyBase.Columns("TODOID")
            Me.columnUNIQUEID = MyBase.Columns("UNIQUEID")
            Me.columnRECURRENCEID = MyBase.Columns("RECURRENCEID")
            Me.columnCHGSEQNO = MyBase.Columns("CHGSEQNO")
            Me.columnACTSTAFFSTRCD = MyBase.Columns("ACTSTAFFSTRCD")
            Me.columnACTSTAFFCD = MyBase.Columns("ACTSTAFFCD")
            Me.columnRECSTAFFSTRCD = MyBase.Columns("RECSTAFFSTRCD")
            Me.columnRECSTAFFCD = MyBase.Columns("RECSTAFFCD")
            Me.columnCONTACTNO = MyBase.Columns("CONTACTNO")
            Me.columnSUMMARY = MyBase.Columns("SUMMARY")
            Me.columnSTARTTIME = MyBase.Columns("STARTTIME")
            Me.columnENDTIME = MyBase.Columns("ENDTIME")
            Me.columnTIMEFLG = MyBase.Columns("TIMEFLG")
            Me.columnALLDAYFLG = MyBase.Columns("ALLDAYFLG")
            Me.columnMEMO = MyBase.Columns("MEMO")
            Me.columnICROPCOLOR = MyBase.Columns("ICROPCOLOR")
            Me.columnRRULE_FREQ = MyBase.Columns("RRULE_FREQ")
            Me.columnRRULE_INTERVAL = MyBase.Columns("RRULE_INTERVAL")
            Me.columnRRULE_UNTIL = MyBase.Columns("RRULE_UNTIL")
            Me.columnRRULE_TEXT = MyBase.Columns("RRULE_TEXT")
            Me.columnLOCATION = MyBase.Columns("LOCATION")
            Me.columnATTENDEE = MyBase.Columns("ATTENDEE")
            Me.columnTRANSP = MyBase.Columns("TRANSP")
            Me.columnURL = MyBase.Columns("URL")
            Me.columnDELFLG = MyBase.Columns("DELFLG")
            Me.columnDELDATE = MyBase.Columns("DELDATE")
            Me.columnCREATEDATE = MyBase.Columns("CREATEDATE")
            Me.columnUPDATEDATE = MyBase.Columns("UPDATEDATE")
            Me.columnCREATEACCOUNT = MyBase.Columns("CREATEACCOUNT")
            Me.columnUPDATEACCOUNT = MyBase.Columns("UPDATEACCOUNT")
            Me.columnCREATEID = MyBase.Columns("CREATEID")
            Me.columnUPDATEID = MyBase.Columns("UPDATEID")
            Me.columnPROCESSDIV = MyBase.Columns("PROCESSDIV")
            Me.columnCONTACT_NAME = MyBase.Columns("CONTACT_NAME")
            Me.columnACT_ODR_NAME = MyBase.Columns("ACT_ODR_NAME")
            Me.columnODR_DIV = MyBase.Columns("ODR_DIV")
            Me.columnAFTER_ODR_ACT_ID = MyBase.Columns("AFTER_ODR_ACT_ID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnEVENTID = New Global.System.Data.DataColumn("EVENTID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEVENTID)
            Me.columnCALID = New Global.System.Data.DataColumn("CALID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCALID)
            Me.columnTODOID = New Global.System.Data.DataColumn("TODOID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTODOID)
            Me.columnUNIQUEID = New Global.System.Data.DataColumn("UNIQUEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNIQUEID)
            Me.columnRECURRENCEID = New Global.System.Data.DataColumn("RECURRENCEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECURRENCEID)
            Me.columnCHGSEQNO = New Global.System.Data.DataColumn("CHGSEQNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHGSEQNO)
            Me.columnACTSTAFFSTRCD = New Global.System.Data.DataColumn("ACTSTAFFSTRCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTSTAFFSTRCD)
            Me.columnACTSTAFFCD = New Global.System.Data.DataColumn("ACTSTAFFCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTSTAFFCD)
            Me.columnRECSTAFFSTRCD = New Global.System.Data.DataColumn("RECSTAFFSTRCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECSTAFFSTRCD)
            Me.columnRECSTAFFCD = New Global.System.Data.DataColumn("RECSTAFFCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECSTAFFCD)
            Me.columnCONTACTNO = New Global.System.Data.DataColumn("CONTACTNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACTNO)
            Me.columnSUMMARY = New Global.System.Data.DataColumn("SUMMARY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUMMARY)
            Me.columnSTARTTIME = New Global.System.Data.DataColumn("STARTTIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTARTTIME)
            Me.columnENDTIME = New Global.System.Data.DataColumn("ENDTIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENDTIME)
            Me.columnTIMEFLG = New Global.System.Data.DataColumn("TIMEFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMEFLG)
            Me.columnALLDAYFLG = New Global.System.Data.DataColumn("ALLDAYFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALLDAYFLG)
            Me.columnMEMO = New Global.System.Data.DataColumn("MEMO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMO)
            Me.columnICROPCOLOR = New Global.System.Data.DataColumn("ICROPCOLOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnICROPCOLOR)
            Me.columnRRULE_FREQ = New Global.System.Data.DataColumn("RRULE_FREQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRULE_FREQ)
            Me.columnRRULE_INTERVAL = New Global.System.Data.DataColumn("RRULE_INTERVAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRULE_INTERVAL)
            Me.columnRRULE_UNTIL = New Global.System.Data.DataColumn("RRULE_UNTIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRULE_UNTIL)
            Me.columnRRULE_TEXT = New Global.System.Data.DataColumn("RRULE_TEXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRULE_TEXT)
            Me.columnLOCATION = New Global.System.Data.DataColumn("LOCATION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOCATION)
            Me.columnATTENDEE = New Global.System.Data.DataColumn("ATTENDEE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATTENDEE)
            Me.columnTRANSP = New Global.System.Data.DataColumn("TRANSP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSP)
            Me.columnURL = New Global.System.Data.DataColumn("URL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnURL)
            Me.columnDELFLG = New Global.System.Data.DataColumn("DELFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDELFLG)
            Me.columnDELDATE = New Global.System.Data.DataColumn("DELDATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDELDATE)
            Me.columnCREATEDATE = New Global.System.Data.DataColumn("CREATEDATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDATE)
            Me.columnUPDATEDATE = New Global.System.Data.DataColumn("UPDATEDATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEDATE)
            Me.columnCREATEACCOUNT = New Global.System.Data.DataColumn("CREATEACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEACCOUNT)
            Me.columnUPDATEACCOUNT = New Global.System.Data.DataColumn("UPDATEACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEACCOUNT)
            Me.columnCREATEID = New Global.System.Data.DataColumn("CREATEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEID)
            Me.columnUPDATEID = New Global.System.Data.DataColumn("UPDATEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEID)
            Me.columnPROCESSDIV = New Global.System.Data.DataColumn("PROCESSDIV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROCESSDIV)
            Me.columnCONTACT_NAME = New Global.System.Data.DataColumn("CONTACT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACT_NAME)
            Me.columnACT_ODR_NAME = New Global.System.Data.DataColumn("ACT_ODR_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACT_ODR_NAME)
            Me.columnODR_DIV = New Global.System.Data.DataColumn("ODR_DIV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODR_DIV)
            Me.columnAFTER_ODR_ACT_ID = New Global.System.Data.DataColumn("AFTER_ODR_ACT_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAFTER_ODR_ACT_ID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint11", New Global.System.Data.DataColumn() {Me.columnEVENTID}, false))
            Me.columnEVENTID.Unique = true
            Me.columnEVENTID.MaxLength = 20
            Me.columnCALID.MaxLength = 20
            Me.columnTODOID.MaxLength = 20
            Me.columnUNIQUEID.MaxLength = 64
            Me.columnRECURRENCEID.MaxLength = 64
            Me.columnACTSTAFFSTRCD.MaxLength = 3
            Me.columnACTSTAFFCD.MaxLength = 20
            Me.columnRECSTAFFSTRCD.MaxLength = 3
            Me.columnRECSTAFFCD.MaxLength = 20
            Me.columnSUMMARY.MaxLength = 1000
            Me.columnTIMEFLG.MaxLength = 1
            Me.columnALLDAYFLG.MaxLength = 1
            Me.columnMEMO.MaxLength = 2000
            Me.columnICROPCOLOR.MaxLength = 30
            Me.columnRRULE_FREQ.MaxLength = 10
            Me.columnRRULE_TEXT.MaxLength = 512
            Me.columnLOCATION.MaxLength = 256
            Me.columnATTENDEE.MaxLength = 256
            Me.columnTRANSP.MaxLength = 20
            Me.columnURL.MaxLength = 256
            Me.columnDELFLG.MaxLength = 1
            Me.columnCREATEACCOUNT.MaxLength = 20
            Me.columnUPDATEACCOUNT.MaxLength = 20
            Me.columnCREATEID.MaxLength = 16
            Me.columnPROCESSDIV.MaxLength = 16
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCalEventItemDataTableRow() As CalEventItemDataTableRow
            Return CType(Me.NewRow,CalEventItemDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CalEventItemDataTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CalEventItemDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CalEventItemDataTableRowChangedEvent) Is Nothing) Then
                RaiseEvent CalEventItemDataTableRowChanged(Me, New CalEventItemDataTableRowChangeEvent(CType(e.Row,CalEventItemDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CalEventItemDataTableRowChangingEvent) Is Nothing) Then
                RaiseEvent CalEventItemDataTableRowChanging(Me, New CalEventItemDataTableRowChangeEvent(CType(e.Row,CalEventItemDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CalEventItemDataTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent CalEventItemDataTableRowDeleted(Me, New CalEventItemDataTableRowChangeEvent(CType(e.Row,CalEventItemDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CalEventItemDataTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent CalEventItemDataTableRowDeleting(Me, New CalEventItemDataTableRowChangeEvent(CType(e.Row,CalEventItemDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCalEventItemDataTableRow(ByVal row As CalEventItemDataTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3040403DataSet = New IC3040403DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CalEventItemDataTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CalEventAlarmDataTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of CalEventAlarmDataTableRow)
        
        Private columnEVENTID As Global.System.Data.DataColumn
        
        Private columnSEQNO As Global.System.Data.DataColumn
        
        Private columnSTARTTRIGGER As Global.System.Data.DataColumn
        
        Private columnCREATEDATE As Global.System.Data.DataColumn
        
        Private columnUPDATEDATE As Global.System.Data.DataColumn
        
        Private columnCREATEACCOUNT As Global.System.Data.DataColumn
        
        Private columnUPDATEACCOUNT As Global.System.Data.DataColumn
        
        Private columnCREATEID As Global.System.Data.DataColumn
        
        Private columnUPDATEID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CalEventAlarmDataTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EVENTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEVENTID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SEQNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEQNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STARTTRIGGERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTARTTRIGGER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CalEventAlarmDataTableRow
            Get
                Return CType(Me.Rows(index),CalEventAlarmDataTableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalEventAlarmDataTableRowChanging As CalEventAlarmDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalEventAlarmDataTableRowChanged As CalEventAlarmDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalEventAlarmDataTableRowDeleting As CalEventAlarmDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalEventAlarmDataTableRowDeleted As CalEventAlarmDataTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCalEventAlarmDataTableRow(ByVal row As CalEventAlarmDataTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCalEventAlarmDataTableRow(ByVal EVENTID As String, ByVal SEQNO As String, ByVal STARTTRIGGER As String, ByVal CREATEDATE As String, ByVal UPDATEDATE As String, ByVal CREATEACCOUNT As String, ByVal UPDATEACCOUNT As String, ByVal CREATEID As String, ByVal UPDATEID As String) As CalEventAlarmDataTableRow
            Dim rowCalEventAlarmDataTableRow As CalEventAlarmDataTableRow = CType(Me.NewRow,CalEventAlarmDataTableRow)
            Dim columnValuesArray() As Object = New Object() {EVENTID, SEQNO, STARTTRIGGER, CREATEDATE, UPDATEDATE, CREATEACCOUNT, UPDATEACCOUNT, CREATEID, UPDATEID}
            rowCalEventAlarmDataTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCalEventAlarmDataTableRow)
            Return rowCalEventAlarmDataTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CalEventAlarmDataTableDataTable = CType(MyBase.Clone,CalEventAlarmDataTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CalEventAlarmDataTableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnEVENTID = MyBase.Columns("EVENTID")
            Me.columnSEQNO = MyBase.Columns("SEQNO")
            Me.columnSTARTTRIGGER = MyBase.Columns("STARTTRIGGER")
            Me.columnCREATEDATE = MyBase.Columns("CREATEDATE")
            Me.columnUPDATEDATE = MyBase.Columns("UPDATEDATE")
            Me.columnCREATEACCOUNT = MyBase.Columns("CREATEACCOUNT")
            Me.columnUPDATEACCOUNT = MyBase.Columns("UPDATEACCOUNT")
            Me.columnCREATEID = MyBase.Columns("CREATEID")
            Me.columnUPDATEID = MyBase.Columns("UPDATEID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnEVENTID = New Global.System.Data.DataColumn("EVENTID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEVENTID)
            Me.columnSEQNO = New Global.System.Data.DataColumn("SEQNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEQNO)
            Me.columnSTARTTRIGGER = New Global.System.Data.DataColumn("STARTTRIGGER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTARTTRIGGER)
            Me.columnCREATEDATE = New Global.System.Data.DataColumn("CREATEDATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDATE)
            Me.columnUPDATEDATE = New Global.System.Data.DataColumn("UPDATEDATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEDATE)
            Me.columnCREATEACCOUNT = New Global.System.Data.DataColumn("CREATEACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEACCOUNT)
            Me.columnUPDATEACCOUNT = New Global.System.Data.DataColumn("UPDATEACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEACCOUNT)
            Me.columnCREATEID = New Global.System.Data.DataColumn("CREATEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEID)
            Me.columnUPDATEID = New Global.System.Data.DataColumn("UPDATEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint11", New Global.System.Data.DataColumn() {Me.columnEVENTID, Me.columnSEQNO}, false))
            Me.columnEVENTID.MaxLength = 64
            Me.columnSTARTTRIGGER.MaxLength = 1
            Me.columnCREATEACCOUNT.MaxLength = 20
            Me.columnUPDATEACCOUNT.MaxLength = 20
            Me.columnCREATEID.MaxLength = 16
            Me.columnUPDATEID.MaxLength = 16
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCalEventAlarmDataTableRow() As CalEventAlarmDataTableRow
            Return CType(Me.NewRow,CalEventAlarmDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CalEventAlarmDataTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CalEventAlarmDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CalEventAlarmDataTableRowChangedEvent) Is Nothing) Then
                RaiseEvent CalEventAlarmDataTableRowChanged(Me, New CalEventAlarmDataTableRowChangeEvent(CType(e.Row,CalEventAlarmDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CalEventAlarmDataTableRowChangingEvent) Is Nothing) Then
                RaiseEvent CalEventAlarmDataTableRowChanging(Me, New CalEventAlarmDataTableRowChangeEvent(CType(e.Row,CalEventAlarmDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CalEventAlarmDataTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent CalEventAlarmDataTableRowDeleted(Me, New CalEventAlarmDataTableRowChangeEvent(CType(e.Row,CalEventAlarmDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CalEventAlarmDataTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent CalEventAlarmDataTableRowDeleting(Me, New CalEventAlarmDataTableRowChangeEvent(CType(e.Row,CalEventAlarmDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCalEventAlarmDataTableRow(ByVal row As CalEventAlarmDataTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3040403DataSet = New IC3040403DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CalEventAlarmDataTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CalEventExDateDataTable
        Inherits Global.System.Data.TypedTableBase(Of CalEventExDateRow)
        
        Private columnTODOID As Global.System.Data.DataColumn
        
        Private columnSEQNO As Global.System.Data.DataColumn
        
        Private columnEXDATE As Global.System.Data.DataColumn
        
        Private columnCREATEACCOUNT As Global.System.Data.DataColumn
        
        Private columnUPDATEACCOUNT As Global.System.Data.DataColumn
        
        Private columnCREATEID As Global.System.Data.DataColumn
        
        Private columnUPDATEID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CalEventExDate"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TODOIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTODOID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SEQNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEQNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CalEventExDateRow
            Get
                Return CType(Me.Rows(index),CalEventExDateRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalEventExDateRowChanging As CalEventExDateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalEventExDateRowChanged As CalEventExDateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalEventExDateRowDeleting As CalEventExDateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalEventExDateRowDeleted As CalEventExDateRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCalEventExDateRow(ByVal row As CalEventExDateRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCalEventExDateRow(ByVal TODOID As String, ByVal SEQNO As Integer, ByVal EXDATE As String, ByVal CREATEACCOUNT As String, ByVal UPDATEACCOUNT As String, ByVal CREATEID As String, ByVal UPDATEID As String) As CalEventExDateRow
            Dim rowCalEventExDateRow As CalEventExDateRow = CType(Me.NewRow,CalEventExDateRow)
            Dim columnValuesArray() As Object = New Object() {TODOID, SEQNO, EXDATE, CREATEACCOUNT, UPDATEACCOUNT, CREATEID, UPDATEID}
            rowCalEventExDateRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCalEventExDateRow)
            Return rowCalEventExDateRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CalEventExDateDataTable = CType(MyBase.Clone,CalEventExDateDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CalEventExDateDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTODOID = MyBase.Columns("TODOID")
            Me.columnSEQNO = MyBase.Columns("SEQNO")
            Me.columnEXDATE = MyBase.Columns("EXDATE")
            Me.columnCREATEACCOUNT = MyBase.Columns("CREATEACCOUNT")
            Me.columnUPDATEACCOUNT = MyBase.Columns("UPDATEACCOUNT")
            Me.columnCREATEID = MyBase.Columns("CREATEID")
            Me.columnUPDATEID = MyBase.Columns("UPDATEID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTODOID = New Global.System.Data.DataColumn("TODOID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTODOID)
            Me.columnSEQNO = New Global.System.Data.DataColumn("SEQNO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEQNO)
            Me.columnEXDATE = New Global.System.Data.DataColumn("EXDATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXDATE)
            Me.columnCREATEACCOUNT = New Global.System.Data.DataColumn("CREATEACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEACCOUNT)
            Me.columnUPDATEACCOUNT = New Global.System.Data.DataColumn("UPDATEACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEACCOUNT)
            Me.columnCREATEID = New Global.System.Data.DataColumn("CREATEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEID)
            Me.columnUPDATEID = New Global.System.Data.DataColumn("UPDATEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEID)
            Me.columnCREATEACCOUNT.AllowDBNull = false
            Me.columnCREATEACCOUNT.MaxLength = 20
            Me.columnUPDATEACCOUNT.AllowDBNull = false
            Me.columnUPDATEACCOUNT.MaxLength = 20
            Me.columnCREATEID.AllowDBNull = false
            Me.columnCREATEID.MaxLength = 16
            Me.columnUPDATEID.AllowDBNull = false
            Me.columnUPDATEID.MaxLength = 16
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCalEventExDateRow() As CalEventExDateRow
            Return CType(Me.NewRow,CalEventExDateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CalEventExDateRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CalEventExDateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CalEventExDateRowChangedEvent) Is Nothing) Then
                RaiseEvent CalEventExDateRowChanged(Me, New CalEventExDateRowChangeEvent(CType(e.Row,CalEventExDateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CalEventExDateRowChangingEvent) Is Nothing) Then
                RaiseEvent CalEventExDateRowChanging(Me, New CalEventExDateRowChangeEvent(CType(e.Row,CalEventExDateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CalEventExDateRowDeletedEvent) Is Nothing) Then
                RaiseEvent CalEventExDateRowDeleted(Me, New CalEventExDateRowChangeEvent(CType(e.Row,CalEventExDateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CalEventExDateRowDeletingEvent) Is Nothing) Then
                RaiseEvent CalEventExDateRowDeleting(Me, New CalEventExDateRowChangeEvent(CType(e.Row,CalEventExDateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCalEventExDateRow(ByVal row As CalEventExDateRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3040403DataSet = New IC3040403DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CalEventExDateDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CalTodoExDateDataTable
        Inherits Global.System.Data.TypedTableBase(Of CalTodoExDateRow)
        
        Private columnTODOID As Global.System.Data.DataColumn
        
        Private columnSEQNO As Global.System.Data.DataColumn
        
        Private columnEXDATE As Global.System.Data.DataColumn
        
        Private columnCREATEACCOUNT As Global.System.Data.DataColumn
        
        Private columnUPDATEACCOUNT As Global.System.Data.DataColumn
        
        Private columnCREATEID As Global.System.Data.DataColumn
        
        Private columnUPDATEID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CalTodoExDate"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TODOIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTODOID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SEQNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEQNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CalTodoExDateRow
            Get
                Return CType(Me.Rows(index),CalTodoExDateRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalTodoExDateRowChanging As CalTodoExDateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalTodoExDateRowChanged As CalTodoExDateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalTodoExDateRowDeleting As CalTodoExDateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalTodoExDateRowDeleted As CalTodoExDateRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCalTodoExDateRow(ByVal row As CalTodoExDateRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCalTodoExDateRow(ByVal TODOID As String, ByVal SEQNO As String, ByVal EXDATE As String, ByVal CREATEACCOUNT As String, ByVal UPDATEACCOUNT As String, ByVal CREATEID As String, ByVal UPDATEID As String) As CalTodoExDateRow
            Dim rowCalTodoExDateRow As CalTodoExDateRow = CType(Me.NewRow,CalTodoExDateRow)
            Dim columnValuesArray() As Object = New Object() {TODOID, SEQNO, EXDATE, CREATEACCOUNT, UPDATEACCOUNT, CREATEID, UPDATEID}
            rowCalTodoExDateRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCalTodoExDateRow)
            Return rowCalTodoExDateRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CalTodoExDateDataTable = CType(MyBase.Clone,CalTodoExDateDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CalTodoExDateDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTODOID = MyBase.Columns("TODOID")
            Me.columnSEQNO = MyBase.Columns("SEQNO")
            Me.columnEXDATE = MyBase.Columns("EXDATE")
            Me.columnCREATEACCOUNT = MyBase.Columns("CREATEACCOUNT")
            Me.columnUPDATEACCOUNT = MyBase.Columns("UPDATEACCOUNT")
            Me.columnCREATEID = MyBase.Columns("CREATEID")
            Me.columnUPDATEID = MyBase.Columns("UPDATEID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTODOID = New Global.System.Data.DataColumn("TODOID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTODOID)
            Me.columnSEQNO = New Global.System.Data.DataColumn("SEQNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEQNO)
            Me.columnEXDATE = New Global.System.Data.DataColumn("EXDATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXDATE)
            Me.columnCREATEACCOUNT = New Global.System.Data.DataColumn("CREATEACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEACCOUNT)
            Me.columnUPDATEACCOUNT = New Global.System.Data.DataColumn("UPDATEACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEACCOUNT)
            Me.columnCREATEID = New Global.System.Data.DataColumn("CREATEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEID)
            Me.columnUPDATEID = New Global.System.Data.DataColumn("UPDATEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEID)
            Me.columnCREATEACCOUNT.MaxLength = 20
            Me.columnUPDATEACCOUNT.MaxLength = 20
            Me.columnCREATEID.MaxLength = 16
            Me.columnUPDATEID.MaxLength = 16
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCalTodoExDateRow() As CalTodoExDateRow
            Return CType(Me.NewRow,CalTodoExDateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CalTodoExDateRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CalTodoExDateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CalTodoExDateRowChangedEvent) Is Nothing) Then
                RaiseEvent CalTodoExDateRowChanged(Me, New CalTodoExDateRowChangeEvent(CType(e.Row,CalTodoExDateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CalTodoExDateRowChangingEvent) Is Nothing) Then
                RaiseEvent CalTodoExDateRowChanging(Me, New CalTodoExDateRowChangeEvent(CType(e.Row,CalTodoExDateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CalTodoExDateRowDeletedEvent) Is Nothing) Then
                RaiseEvent CalTodoExDateRowDeleted(Me, New CalTodoExDateRowChangeEvent(CType(e.Row,CalTodoExDateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CalTodoExDateRowDeletingEvent) Is Nothing) Then
                RaiseEvent CalTodoExDateRowDeleting(Me, New CalTodoExDateRowChangeEvent(CType(e.Row,CalTodoExDateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCalTodoExDateRow(ByVal row As CalTodoExDateRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3040403DataSet = New IC3040403DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CalTodoExDateDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class StaffCodeDataTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of StaffCodeDataTableRow)
        
        Private columnACTSTAFFCD As Global.System.Data.DataColumn
        
        Private columnRECSTAFFCD As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "StaffCodeDataTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACTSTAFFCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTSTAFFCD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECSTAFFCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECSTAFFCD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As StaffCodeDataTableRow
            Get
                Return CType(Me.Rows(index),StaffCodeDataTableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StaffCodeDataTableRowChanging As StaffCodeDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StaffCodeDataTableRowChanged As StaffCodeDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StaffCodeDataTableRowDeleting As StaffCodeDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StaffCodeDataTableRowDeleted As StaffCodeDataTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddStaffCodeDataTableRow(ByVal row As StaffCodeDataTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddStaffCodeDataTableRow(ByVal ACTSTAFFCD As String, ByVal RECSTAFFCD As String) As StaffCodeDataTableRow
            Dim rowStaffCodeDataTableRow As StaffCodeDataTableRow = CType(Me.NewRow,StaffCodeDataTableRow)
            Dim columnValuesArray() As Object = New Object() {ACTSTAFFCD, RECSTAFFCD}
            rowStaffCodeDataTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowStaffCodeDataTableRow)
            Return rowStaffCodeDataTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As StaffCodeDataTableDataTable = CType(MyBase.Clone,StaffCodeDataTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New StaffCodeDataTableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnACTSTAFFCD = MyBase.Columns("ACTSTAFFCD")
            Me.columnRECSTAFFCD = MyBase.Columns("RECSTAFFCD")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnACTSTAFFCD = New Global.System.Data.DataColumn("ACTSTAFFCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTSTAFFCD)
            Me.columnRECSTAFFCD = New Global.System.Data.DataColumn("RECSTAFFCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECSTAFFCD)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewStaffCodeDataTableRow() As StaffCodeDataTableRow
            Return CType(Me.NewRow,StaffCodeDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New StaffCodeDataTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(StaffCodeDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.StaffCodeDataTableRowChangedEvent) Is Nothing) Then
                RaiseEvent StaffCodeDataTableRowChanged(Me, New StaffCodeDataTableRowChangeEvent(CType(e.Row,StaffCodeDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.StaffCodeDataTableRowChangingEvent) Is Nothing) Then
                RaiseEvent StaffCodeDataTableRowChanging(Me, New StaffCodeDataTableRowChangeEvent(CType(e.Row,StaffCodeDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.StaffCodeDataTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent StaffCodeDataTableRowDeleted(Me, New StaffCodeDataTableRowChangeEvent(CType(e.Row,StaffCodeDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.StaffCodeDataTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent StaffCodeDataTableRowDeleting(Me, New StaffCodeDataTableRowChangeEvent(CType(e.Row,StaffCodeDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveStaffCodeDataTableRow(ByVal row As StaffCodeDataTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3040403DataSet = New IC3040403DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "StaffCodeDataTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CalCardLastModifyDataTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of CalCardLastModifyDataTableRow)
        
        Private columnSTAFFCD As Global.System.Data.DataColumn
        
        Private columnCALUPDATEDATE As Global.System.Data.DataColumn
        
        Private columnCARDUPDATEDATE As Global.System.Data.DataColumn
        
        Private columnCREATEDATE As Global.System.Data.DataColumn
        
        Private columnUPDATEDATE As Global.System.Data.DataColumn
        
        Private columnCREATEACCOUNT As Global.System.Data.DataColumn
        
        Private columnUPDATEACCOUNT As Global.System.Data.DataColumn
        
        Private columnCREATEID As Global.System.Data.DataColumn
        
        Private columnUPDATEID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CalCardLastModifyDataTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STAFFCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTAFFCD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CALUPDATEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCALUPDATEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CARDUPDATEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCARDUPDATEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CalCardLastModifyDataTableRow
            Get
                Return CType(Me.Rows(index),CalCardLastModifyDataTableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalCardLastModifyDataTableRowChanging As CalCardLastModifyDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalCardLastModifyDataTableRowChanged As CalCardLastModifyDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalCardLastModifyDataTableRowDeleting As CalCardLastModifyDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CalCardLastModifyDataTableRowDeleted As CalCardLastModifyDataTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCalCardLastModifyDataTableRow(ByVal row As CalCardLastModifyDataTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCalCardLastModifyDataTableRow(ByVal STAFFCD As String, ByVal CALUPDATEDATE As String, ByVal CARDUPDATEDATE As String, ByVal CREATEDATE As String, ByVal UPDATEDATE As String, ByVal CREATEACCOUNT As String, ByVal UPDATEACCOUNT As String, ByVal CREATEID As String, ByVal UPDATEID As String) As CalCardLastModifyDataTableRow
            Dim rowCalCardLastModifyDataTableRow As CalCardLastModifyDataTableRow = CType(Me.NewRow,CalCardLastModifyDataTableRow)
            Dim columnValuesArray() As Object = New Object() {STAFFCD, CALUPDATEDATE, CARDUPDATEDATE, CREATEDATE, UPDATEDATE, CREATEACCOUNT, UPDATEACCOUNT, CREATEID, UPDATEID}
            rowCalCardLastModifyDataTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCalCardLastModifyDataTableRow)
            Return rowCalCardLastModifyDataTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CalCardLastModifyDataTableDataTable = CType(MyBase.Clone,CalCardLastModifyDataTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CalCardLastModifyDataTableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSTAFFCD = MyBase.Columns("STAFFCD")
            Me.columnCALUPDATEDATE = MyBase.Columns("CALUPDATEDATE")
            Me.columnCARDUPDATEDATE = MyBase.Columns("CARDUPDATEDATE")
            Me.columnCREATEDATE = MyBase.Columns("CREATEDATE")
            Me.columnUPDATEDATE = MyBase.Columns("UPDATEDATE")
            Me.columnCREATEACCOUNT = MyBase.Columns("CREATEACCOUNT")
            Me.columnUPDATEACCOUNT = MyBase.Columns("UPDATEACCOUNT")
            Me.columnCREATEID = MyBase.Columns("CREATEID")
            Me.columnUPDATEID = MyBase.Columns("UPDATEID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSTAFFCD = New Global.System.Data.DataColumn("STAFFCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTAFFCD)
            Me.columnCALUPDATEDATE = New Global.System.Data.DataColumn("CALUPDATEDATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCALUPDATEDATE)
            Me.columnCARDUPDATEDATE = New Global.System.Data.DataColumn("CARDUPDATEDATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCARDUPDATEDATE)
            Me.columnCREATEDATE = New Global.System.Data.DataColumn("CREATEDATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDATE)
            Me.columnUPDATEDATE = New Global.System.Data.DataColumn("UPDATEDATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEDATE)
            Me.columnCREATEACCOUNT = New Global.System.Data.DataColumn("CREATEACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEACCOUNT)
            Me.columnUPDATEACCOUNT = New Global.System.Data.DataColumn("UPDATEACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEACCOUNT)
            Me.columnCREATEID = New Global.System.Data.DataColumn("CREATEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEID)
            Me.columnUPDATEID = New Global.System.Data.DataColumn("UPDATEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint11", New Global.System.Data.DataColumn() {Me.columnSTAFFCD}, false))
            Me.columnSTAFFCD.Unique = true
            Me.columnSTAFFCD.MaxLength = 20
            Me.columnCREATEACCOUNT.MaxLength = 20
            Me.columnUPDATEACCOUNT.MaxLength = 20
            Me.columnCREATEID.MaxLength = 16
            Me.columnUPDATEID.MaxLength = 16
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCalCardLastModifyDataTableRow() As CalCardLastModifyDataTableRow
            Return CType(Me.NewRow,CalCardLastModifyDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CalCardLastModifyDataTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CalCardLastModifyDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CalCardLastModifyDataTableRowChangedEvent) Is Nothing) Then
                RaiseEvent CalCardLastModifyDataTableRowChanged(Me, New CalCardLastModifyDataTableRowChangeEvent(CType(e.Row,CalCardLastModifyDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CalCardLastModifyDataTableRowChangingEvent) Is Nothing) Then
                RaiseEvent CalCardLastModifyDataTableRowChanging(Me, New CalCardLastModifyDataTableRowChangeEvent(CType(e.Row,CalCardLastModifyDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CalCardLastModifyDataTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent CalCardLastModifyDataTableRowDeleted(Me, New CalCardLastModifyDataTableRowChangeEvent(CType(e.Row,CalCardLastModifyDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CalCardLastModifyDataTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent CalCardLastModifyDataTableRowDeleting(Me, New CalCardLastModifyDataTableRowChangeEvent(CType(e.Row,CalCardLastModifyDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCalCardLastModifyDataTableRow(ByVal row As CalCardLastModifyDataTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3040403DataSet = New IC3040403DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CalCardLastModifyDataTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SequenceTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableSequenceTable As SequenceTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSequenceTable = CType(Me.Table,SequenceTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sequence_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableSequenceTable.Sequence_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SequenceTable' にある列 'Sequence_Id' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSequenceTable.Sequence_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSequence_IdNull() As Boolean
            Return Me.IsNull(Me.tableSequenceTable.Sequence_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSequence_IdNull()
            Me(Me.tableSequenceTable.Sequence_IdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IdTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableIdTable As IdTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIdTable = CType(Me.Table,IdTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Ids() As String
            Get
                Try 
                    Return CType(Me(Me.tableIdTable.IdsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IdTable' にある列 'IDS' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableIdTable.IdsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIdsNull() As Boolean
            Return Me.IsNull(Me.tableIdTable.IdsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIdsNull()
            Me(Me.tableIdTable.IdsColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CalCalenderDataTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableCalCalenderDataTable As CalCalenderDataTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCalCalenderDataTable = CType(Me.Table,CalCalenderDataTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CALID() As String
            Get
                If Me.IsCALIDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalCalenderDataTable.CALIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.CALIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DLRCD() As String
            Get
                If Me.IsDLRCDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalCalenderDataTable.DLRCDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.DLRCDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STRCD() As String
            Get
                If Me.IsSTRCDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalCalenderDataTable.STRCDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.STRCDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SCHEDULEDIV() As String
            Get
                If Me.IsSCHEDULEDIVNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalCalenderDataTable.SCHEDULEDIVColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.SCHEDULEDIVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SCHEDULEID() As String
            Get
                If Me.IsSCHEDULEIDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalCalenderDataTable.SCHEDULEIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.SCHEDULEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUSTOMERDIV() As String
            Get
                If Me.IsCUSTOMERDIVNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalCalenderDataTable.CUSTOMERDIVColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.CUSTOMERDIVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUSTCODE() As String
            Get
                If Me.IsCUSTCODENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalCalenderDataTable.CUSTCODEColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.CUSTCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUSTNAME() As String
            Get
                If Me.IsCUSTNAMENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalCalenderDataTable.CUSTNAMEColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.CUSTNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DMSID() As String
            Get
                If Me.IsDMSIDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalCalenderDataTable.DMSIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.DMSIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RECEPTIONDIV() As String
            Get
                If Me.IsRECEPTIONDIVNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalCalenderDataTable.RECEPTIONDIVColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.RECEPTIONDIVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SERVICECODE() As String
            Get
                If Me.IsSERVICECODENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalCalenderDataTable.SERVICECODEColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.SERVICECODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MERCHANDISECD() As String
            Get
                If Me.IsMERCHANDISECDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalCalenderDataTable.MERCHANDISECDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.MERCHANDISECDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STRSTATUS() As String
            Get
                If Me.IsSTRSTATUSNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalCalenderDataTable.STRSTATUSColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.STRSTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REZSTATUS() As String
            Get
                If Me.IsREZSTATUSNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalCalenderDataTable.REZSTATUSColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.REZSTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DELFLG() As String
            Get
                If Me.IsDELFLGNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalCalenderDataTable.DELFLGColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.DELFLGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DELDATE() As String
            Get
                If Me.IsDELDATENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalCalenderDataTable.DELDATEColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.DELDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDATE() As String
            Get
                If Me.IsCREATEDATENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalCalenderDataTable.CREATEDATEColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.CREATEDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATEDATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalCalenderDataTable.UPDATEDATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalCalenderDataTable' にある列 'UPDATEDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.UPDATEDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEACCOUNT() As String
            Get
                If Me.IsCREATEACCOUNTNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalCalenderDataTable.CREATEACCOUNTColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.CREATEACCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATEACCOUNT() As String
            Get
                If Me.IsUPDATEACCOUNTNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalCalenderDataTable.UPDATEACCOUNTColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.UPDATEACCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEID() As String
            Get
                If Me.IsCREATEIDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalCalenderDataTable.CREATEIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.CREATEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATEID() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalCalenderDataTable.UPDATEIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalCalenderDataTable' にある列 'UPDATEID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.UPDATEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROCESSDIV() As String
            Get
                If Me.IsPROCESSDIVNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalCalenderDataTable.PROCESSDIVColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalCalenderDataTable.PROCESSDIVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCALIDNull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.CALIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCALIDNull()
            Me(Me.tableCalCalenderDataTable.CALIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDLRCDNull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.DLRCDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDLRCDNull()
            Me(Me.tableCalCalenderDataTable.DLRCDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTRCDNull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.STRCDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTRCDNull()
            Me(Me.tableCalCalenderDataTable.STRCDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSCHEDULEDIVNull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.SCHEDULEDIVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSCHEDULEDIVNull()
            Me(Me.tableCalCalenderDataTable.SCHEDULEDIVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSCHEDULEIDNull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.SCHEDULEIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSCHEDULEIDNull()
            Me(Me.tableCalCalenderDataTable.SCHEDULEIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUSTOMERDIVNull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.CUSTOMERDIVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUSTOMERDIVNull()
            Me(Me.tableCalCalenderDataTable.CUSTOMERDIVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUSTCODENull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.CUSTCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUSTCODENull()
            Me(Me.tableCalCalenderDataTable.CUSTCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUSTNAMENull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.CUSTNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUSTNAMENull()
            Me(Me.tableCalCalenderDataTable.CUSTNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDMSIDNull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.DMSIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDMSIDNull()
            Me(Me.tableCalCalenderDataTable.DMSIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRECEPTIONDIVNull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.RECEPTIONDIVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRECEPTIONDIVNull()
            Me(Me.tableCalCalenderDataTable.RECEPTIONDIVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSERVICECODENull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.SERVICECODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSERVICECODENull()
            Me(Me.tableCalCalenderDataTable.SERVICECODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMERCHANDISECDNull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.MERCHANDISECDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMERCHANDISECDNull()
            Me(Me.tableCalCalenderDataTable.MERCHANDISECDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTRSTATUSNull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.STRSTATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTRSTATUSNull()
            Me(Me.tableCalCalenderDataTable.STRSTATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREZSTATUSNull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.REZSTATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREZSTATUSNull()
            Me(Me.tableCalCalenderDataTable.REZSTATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDELFLGNull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.DELFLGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDELFLGNull()
            Me(Me.tableCalCalenderDataTable.DELFLGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDELDATENull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.DELDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDELDATENull()
            Me(Me.tableCalCalenderDataTable.DELDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCREATEDATENull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.CREATEDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCREATEDATENull()
            Me(Me.tableCalCalenderDataTable.CREATEDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATEDATENull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.UPDATEDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATEDATENull()
            Me(Me.tableCalCalenderDataTable.UPDATEDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCREATEACCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.CREATEACCOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCREATEACCOUNTNull()
            Me(Me.tableCalCalenderDataTable.CREATEACCOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATEACCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.UPDATEACCOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATEACCOUNTNull()
            Me(Me.tableCalCalenderDataTable.UPDATEACCOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCREATEIDNull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.CREATEIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCREATEIDNull()
            Me(Me.tableCalCalenderDataTable.CREATEIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATEIDNull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.UPDATEIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATEIDNull()
            Me(Me.tableCalCalenderDataTable.UPDATEIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPROCESSDIVNull() As Boolean
            Return Me.IsNull(Me.tableCalCalenderDataTable.PROCESSDIVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPROCESSDIVNull()
            Me(Me.tableCalCalenderDataTable.PROCESSDIVColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CalTodoItemDataTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableCalTodoItemDataTable As CalTodoItemDataTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCalTodoItemDataTable = CType(Me.Table,CalTodoItemDataTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TODOID() As String
            Get
                If Me.IsTODOIDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.TODOIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.TODOIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CALID() As String
            Get
                If Me.IsCALIDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.CALIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.CALIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UNIQUEID() As String
            Get
                If Me.IsUNIQUEIDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.UNIQUEIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.UNIQUEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RECURRENCEID() As String
            Get
                If Me.IsRECURRENCEIDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.RECURRENCEIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.RECURRENCEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHGSEQNO() As String
            Get
                If Me.IsCHGSEQNONull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.CHGSEQNOColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.CHGSEQNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACTSTAFFSTRCD() As String
            Get
                If Me.IsACTSTAFFSTRCDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.ACTSTAFFSTRCDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.ACTSTAFFSTRCDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACTSTAFFCD() As String
            Get
                If Me.IsACTSTAFFCDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.ACTSTAFFCDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.ACTSTAFFCDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RECSTAFFSTRCD() As String
            Get
                If Me.IsRECSTAFFSTRCDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.RECSTAFFSTRCDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.RECSTAFFSTRCDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RECSTAFFCD() As String
            Get
                If Me.IsRECSTAFFCDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.RECSTAFFCDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.RECSTAFFCDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTACTNO() As String
            Get
                If Me.IsCONTACTNONull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.CONTACTNOColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.CONTACTNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUMMARY() As String
            Get
                If Me.IsSUMMARYNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.SUMMARYColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.SUMMARYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STARTTIME() As String
            Get
                If Me.IsSTARTTIMENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.STARTTIMEColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.STARTTIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENDTIME() As String
            Get
                If Me.IsENDTIMENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.ENDTIMEColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.ENDTIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STARTTIMEFLG() As String
            Get
                If Me.IsSTARTTIMEFLGNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.STARTTIMEFLGColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.STARTTIMEFLGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIMEFLG() As String
            Get
                If Me.IsTIMEFLGNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.TIMEFLGColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.TIMEFLGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ALLDAYFLG() As String
            Get
                If Me.IsALLDAYFLGNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.ALLDAYFLGColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.ALLDAYFLGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEMO() As String
            Get
                If Me.IsMEMONull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.MEMOColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.MEMOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ICROPCOLOR() As String
            Get
                If Me.IsICROPCOLORNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.ICROPCOLORColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.ICROPCOLORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PARENTDIV() As String
            Get
                If Me.IsPARENTDIVNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.PARENTDIVColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.PARENTDIVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RRULE_FREQ() As String
            Get
                If Me.IsRRULE_FREQNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.RRULE_FREQColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.RRULE_FREQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RRULE_INTERVAL() As String
            Get
                If Me.IsRRULE_INTERVALNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.RRULE_INTERVALColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.RRULE_INTERVALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RRULE_UNTIL() As String
            Get
                If Me.IsRRULE_UNTILNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.RRULE_UNTILColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.RRULE_UNTILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RRULE_TEXT() As String
            Get
                If Me.IsRRULE_TEXTNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.RRULE_TEXTColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.RRULE_TEXTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPLETIONFLG() As String
            Get
                If Me.IsCOMPLETIONFLGNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.COMPLETIONFLGColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.COMPLETIONFLGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPLETIONDATE() As String
            Get
                If Me.IsCOMPLETIONDATENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.COMPLETIONDATEColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.COMPLETIONDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DELFLG() As String
            Get
                If Me.IsDELFLGNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.DELFLGColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.DELFLGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DELDATE() As String
            Get
                If Me.IsDELDATENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.DELDATEColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.DELDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDATE() As String
            Get
                If Me.IsCREATEDATENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.CREATEDATEColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.CREATEDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATEDATE() As String
            Get
                If Me.IsUPDATEDATENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.UPDATEDATEColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.UPDATEDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEACCOUNT() As String
            Get
                If Me.IsCREATEACCOUNTNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.CREATEACCOUNTColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.CREATEACCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATEACCOUNT() As String
            Get
                If Me.IsUPDATEACCOUNTNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.UPDATEACCOUNTColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.UPDATEACCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEID() As String
            Get
                If Me.IsCREATEIDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.CREATEIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.CREATEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATEID() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalTodoItemDataTable.UPDATEIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalTodoItemDataTable' にある列 'UPDATEID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.UPDATEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROCESSDIV() As String
            Get
                If Me.IsPROCESSDIVNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.PROCESSDIVColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoItemDataTable.PROCESSDIVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTACT_NAME() As String
            Get
                If Me.IsCONTACT_NAMENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.CONTACT_NAMEColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalTodoItemDataTable.CONTACT_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ACT_ODR_NAME() As String
            Get
                If Me.IsACT_ODR_NAMENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.ACT_ODR_NAMEColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalTodoItemDataTable.ACT_ODR_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ODR_DIV() As String
            Get
                If Me.IsODR_DIVNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.ODR_DIVColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalTodoItemDataTable.ODR_DIVColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AFTER_ODR_ACT_ID() As String
            Get
                If Me.IsAFTER_ODR_ACT_IDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoItemDataTable.AFTER_ODR_ACT_IDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalTodoItemDataTable.AFTER_ODR_ACT_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTODOIDNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.TODOIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTODOIDNull()
            Me(Me.tableCalTodoItemDataTable.TODOIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCALIDNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.CALIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCALIDNull()
            Me(Me.tableCalTodoItemDataTable.CALIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUNIQUEIDNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.UNIQUEIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUNIQUEIDNull()
            Me(Me.tableCalTodoItemDataTable.UNIQUEIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRECURRENCEIDNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.RECURRENCEIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRECURRENCEIDNull()
            Me(Me.tableCalTodoItemDataTable.RECURRENCEIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCHGSEQNONull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.CHGSEQNOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCHGSEQNONull()
            Me(Me.tableCalTodoItemDataTable.CHGSEQNOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsACTSTAFFSTRCDNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.ACTSTAFFSTRCDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetACTSTAFFSTRCDNull()
            Me(Me.tableCalTodoItemDataTable.ACTSTAFFSTRCDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsACTSTAFFCDNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.ACTSTAFFCDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetACTSTAFFCDNull()
            Me(Me.tableCalTodoItemDataTable.ACTSTAFFCDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRECSTAFFSTRCDNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.RECSTAFFSTRCDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRECSTAFFSTRCDNull()
            Me(Me.tableCalTodoItemDataTable.RECSTAFFSTRCDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRECSTAFFCDNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.RECSTAFFCDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRECSTAFFCDNull()
            Me(Me.tableCalTodoItemDataTable.RECSTAFFCDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONTACTNONull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.CONTACTNOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONTACTNONull()
            Me(Me.tableCalTodoItemDataTable.CONTACTNOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSUMMARYNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.SUMMARYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSUMMARYNull()
            Me(Me.tableCalTodoItemDataTable.SUMMARYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSTARTTIMENull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.STARTTIMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSTARTTIMENull()
            Me(Me.tableCalTodoItemDataTable.STARTTIMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsENDTIMENull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.ENDTIMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetENDTIMENull()
            Me(Me.tableCalTodoItemDataTable.ENDTIMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSTARTTIMEFLGNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.STARTTIMEFLGColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSTARTTIMEFLGNull()
            Me(Me.tableCalTodoItemDataTable.STARTTIMEFLGColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIMEFLGNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.TIMEFLGColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIMEFLGNull()
            Me(Me.tableCalTodoItemDataTable.TIMEFLGColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsALLDAYFLGNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.ALLDAYFLGColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetALLDAYFLGNull()
            Me(Me.tableCalTodoItemDataTable.ALLDAYFLGColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMONull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.MEMOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMONull()
            Me(Me.tableCalTodoItemDataTable.MEMOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsICROPCOLORNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.ICROPCOLORColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetICROPCOLORNull()
            Me(Me.tableCalTodoItemDataTable.ICROPCOLORColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPARENTDIVNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.PARENTDIVColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPARENTDIVNull()
            Me(Me.tableCalTodoItemDataTable.PARENTDIVColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRRULE_FREQNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.RRULE_FREQColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRRULE_FREQNull()
            Me(Me.tableCalTodoItemDataTable.RRULE_FREQColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRRULE_INTERVALNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.RRULE_INTERVALColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRRULE_INTERVALNull()
            Me(Me.tableCalTodoItemDataTable.RRULE_INTERVALColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRRULE_UNTILNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.RRULE_UNTILColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRRULE_UNTILNull()
            Me(Me.tableCalTodoItemDataTable.RRULE_UNTILColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRRULE_TEXTNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.RRULE_TEXTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRRULE_TEXTNull()
            Me(Me.tableCalTodoItemDataTable.RRULE_TEXTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCOMPLETIONFLGNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.COMPLETIONFLGColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCOMPLETIONFLGNull()
            Me(Me.tableCalTodoItemDataTable.COMPLETIONFLGColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCOMPLETIONDATENull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.COMPLETIONDATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCOMPLETIONDATENull()
            Me(Me.tableCalTodoItemDataTable.COMPLETIONDATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDELFLGNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.DELFLGColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDELFLGNull()
            Me(Me.tableCalTodoItemDataTable.DELFLGColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDELDATENull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.DELDATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDELDATENull()
            Me(Me.tableCalTodoItemDataTable.DELDATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCREATEDATENull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.CREATEDATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCREATEDATENull()
            Me(Me.tableCalTodoItemDataTable.CREATEDATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUPDATEDATENull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.UPDATEDATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUPDATEDATENull()
            Me(Me.tableCalTodoItemDataTable.UPDATEDATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCREATEACCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.CREATEACCOUNTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCREATEACCOUNTNull()
            Me(Me.tableCalTodoItemDataTable.CREATEACCOUNTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUPDATEACCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.UPDATEACCOUNTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUPDATEACCOUNTNull()
            Me(Me.tableCalTodoItemDataTable.UPDATEACCOUNTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCREATEIDNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.CREATEIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCREATEIDNull()
            Me(Me.tableCalTodoItemDataTable.CREATEIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUPDATEIDNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.UPDATEIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUPDATEIDNull()
            Me(Me.tableCalTodoItemDataTable.UPDATEIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPROCESSDIVNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.PROCESSDIVColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPROCESSDIVNull()
            Me(Me.tableCalTodoItemDataTable.PROCESSDIVColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONTACT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.CONTACT_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONTACT_NAMENull()
            Me(Me.tableCalTodoItemDataTable.CONTACT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsACT_ODR_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.ACT_ODR_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetACT_ODR_NAMENull()
            Me(Me.tableCalTodoItemDataTable.ACT_ODR_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsODR_DIVNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.ODR_DIVColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetODR_DIVNull()
            Me(Me.tableCalTodoItemDataTable.ODR_DIVColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAFTER_ODR_ACT_IDNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoItemDataTable.AFTER_ODR_ACT_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAFTER_ODR_ACT_IDNull()
            Me(Me.tableCalTodoItemDataTable.AFTER_ODR_ACT_IDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CalTodoAlarmDataTableRow
        Inherits Global.System.Data.DataRow

        Private tableCalTodoAlarmDataTable As CalTodoAlarmDataTableDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCalTodoAlarmDataTable = CType(Me.Table, CalTodoAlarmDataTableDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TODOID() As String
            Get
                Try
                    Return CType(Me(Me.tableCalTodoAlarmDataTable.TODOIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalTodoAlarmDataTable' にある列 'TODOID' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCalTodoAlarmDataTable.TODOIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SEQNO() As String
            Get
                Try
                    Return CType(Me(Me.tableCalTodoAlarmDataTable.SEQNOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalTodoAlarmDataTable' にある列 'SEQNO' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCalTodoAlarmDataTable.SEQNOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property STARTTRIGGER() As String
            Get
                Try
                    Return CType(Me(Me.tableCalTodoAlarmDataTable.STARTTRIGGERColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalTodoAlarmDataTable' にある列 'STARTTRIGGER' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCalTodoAlarmDataTable.STARTTRIGGERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CREATEDATE() As String
            Get
                Try
                    Return CType(Me(Me.tableCalTodoAlarmDataTable.CREATEDATEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalTodoAlarmDataTable' にある列 'CREATEDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCalTodoAlarmDataTable.CREATEDATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UPDATEDATE() As String
            Get
                Try
                    Return CType(Me(Me.tableCalTodoAlarmDataTable.UPDATEDATEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalTodoAlarmDataTable' にある列 'UPDATEDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCalTodoAlarmDataTable.UPDATEDATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CREATEACCOUNT() As String
            Get
                Try
                    Return CType(Me(Me.tableCalTodoAlarmDataTable.CREATEACCOUNTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalTodoAlarmDataTable' にある列 'CREATEACCOUNT' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCalTodoAlarmDataTable.CREATEACCOUNTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UPDATEACCOUNT() As String
            Get
                Try
                    Return CType(Me(Me.tableCalTodoAlarmDataTable.UPDATEACCOUNTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalTodoAlarmDataTable' にある列 'UPDATEACCOUNT' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCalTodoAlarmDataTable.UPDATEACCOUNTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CREATEID() As String
            Get
                Try
                    Return CType(Me(Me.tableCalTodoAlarmDataTable.CREATEIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalTodoAlarmDataTable' にある列 'CREATEID' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCalTodoAlarmDataTable.CREATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UPDATEID() As String
            Get
                Try
                    Return CType(Me(Me.tableCalTodoAlarmDataTable.UPDATEIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalTodoAlarmDataTable' にある列 'UPDATEID' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCalTodoAlarmDataTable.UPDATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTODOIDNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoAlarmDataTable.TODOIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTODOIDNull()
            Me(Me.tableCalTodoAlarmDataTable.TODOIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSEQNONull() As Boolean
            Return Me.IsNull(Me.tableCalTodoAlarmDataTable.SEQNOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSEQNONull()
            Me(Me.tableCalTodoAlarmDataTable.SEQNOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSTARTTRIGGERNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoAlarmDataTable.STARTTRIGGERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSTARTTRIGGERNull()
            Me(Me.tableCalTodoAlarmDataTable.STARTTRIGGERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCREATEDATENull() As Boolean
            Return Me.IsNull(Me.tableCalTodoAlarmDataTable.CREATEDATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCREATEDATENull()
            Me(Me.tableCalTodoAlarmDataTable.CREATEDATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUPDATEDATENull() As Boolean
            Return Me.IsNull(Me.tableCalTodoAlarmDataTable.UPDATEDATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUPDATEDATENull()
            Me(Me.tableCalTodoAlarmDataTable.UPDATEDATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCREATEACCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoAlarmDataTable.CREATEACCOUNTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCREATEACCOUNTNull()
            Me(Me.tableCalTodoAlarmDataTable.CREATEACCOUNTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUPDATEACCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoAlarmDataTable.UPDATEACCOUNTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUPDATEACCOUNTNull()
            Me(Me.tableCalTodoAlarmDataTable.UPDATEACCOUNTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCREATEIDNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoAlarmDataTable.CREATEIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCREATEIDNull()
            Me(Me.tableCalTodoAlarmDataTable.CREATEIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUPDATEIDNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoAlarmDataTable.UPDATEIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUPDATEIDNull()
            Me(Me.tableCalTodoAlarmDataTable.UPDATEIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CalEventItemDataTableRow
        Inherits Global.System.Data.DataRow

        Private tableCalEventItemDataTable As CalEventItemDataTableDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCalEventItemDataTable = CType(Me.Table, CalEventItemDataTableDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EVENTID() As String
            Get
                If Me.IsEVENTIDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.EVENTIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.EVENTIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CALID() As String
            Get
                If Me.IsCALIDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.CALIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.CALIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TODOID() As String
            Get
                If Me.IsTODOIDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.TODOIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.TODOIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UNIQUEID() As String
            Get
                If Me.IsUNIQUEIDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.UNIQUEIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.UNIQUEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RECURRENCEID() As String
            Get
                If Me.IsRECURRENCEIDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.RECURRENCEIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.RECURRENCEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CHGSEQNO() As String
            Get
                If Me.IsCHGSEQNONull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.CHGSEQNOColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.CHGSEQNOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ACTSTAFFSTRCD() As String
            Get
                If Me.IsACTSTAFFSTRCDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.ACTSTAFFSTRCDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.ACTSTAFFSTRCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ACTSTAFFCD() As String
            Get
                If Me.IsACTSTAFFCDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.ACTSTAFFCDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.ACTSTAFFCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RECSTAFFSTRCD() As String
            Get
                If Me.IsRECSTAFFSTRCDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.RECSTAFFSTRCDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.RECSTAFFSTRCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RECSTAFFCD() As String
            Get
                If Me.IsRECSTAFFCDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.RECSTAFFCDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.RECSTAFFCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTACTNO() As String
            Get
                If Me.IsCONTACTNONull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.CONTACTNOColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.CONTACTNOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SUMMARY() As String
            Get
                If Me.IsSUMMARYNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.SUMMARYColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.SUMMARYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property STARTTIME() As String
            Get
                If Me.IsSTARTTIMENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.STARTTIMEColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.STARTTIMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ENDTIME() As String
            Get
                If Me.IsENDTIMENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.ENDTIMEColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.ENDTIMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIMEFLG() As String
            Get
                If Me.IsTIMEFLGNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.TIMEFLGColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.TIMEFLGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ALLDAYFLG() As String
            Get
                If Me.IsALLDAYFLGNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.ALLDAYFLGColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.ALLDAYFLGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMO() As String
            Get
                If Me.IsMEMONull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.MEMOColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.MEMOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ICROPCOLOR() As String
            Get
                If Me.IsICROPCOLORNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.ICROPCOLORColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.ICROPCOLORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RRULE_FREQ() As String
            Get
                If Me.IsRRULE_FREQNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.RRULE_FREQColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.RRULE_FREQColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RRULE_INTERVAL() As String
            Get
                If Me.IsRRULE_INTERVALNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.RRULE_INTERVALColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.RRULE_INTERVALColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RRULE_UNTIL() As String
            Get
                If Me.IsRRULE_UNTILNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.RRULE_UNTILColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.RRULE_UNTILColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RRULE_TEXT() As String
            Get
                If Me.IsRRULE_TEXTNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.RRULE_TEXTColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.RRULE_TEXTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LOCATION() As String
            Get
                If Me.IsLOCATIONNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.LOCATIONColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.LOCATIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ATTENDEE() As String
            Get
                If Me.IsATTENDEENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.ATTENDEEColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.ATTENDEEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRANSP() As String
            Get
                If Me.IsTRANSPNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.TRANSPColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.TRANSPColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property URL() As String
            Get
                If Me.IsURLNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.URLColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.URLColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DELFLG() As String
            Get
                If Me.IsDELFLGNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.DELFLGColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.DELFLGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DELDATE() As String
            Get
                If Me.IsDELDATENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.DELDATEColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.DELDATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CREATEDATE() As String
            Get
                If Me.IsCREATEDATENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.CREATEDATEColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.CREATEDATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UPDATEDATE() As String
            Get
                If Me.IsUPDATEDATENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.UPDATEDATEColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.UPDATEDATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CREATEACCOUNT() As String
            Get
                If Me.IsCREATEACCOUNTNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.CREATEACCOUNTColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.CREATEACCOUNTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UPDATEACCOUNT() As String
            Get
                If Me.IsUPDATEACCOUNTNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.UPDATEACCOUNTColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.UPDATEACCOUNTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CREATEID() As String
            Get
                If Me.IsCREATEIDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.CREATEIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.CREATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UPDATEID() As String
            Get
                Try
                    Return CType(Me(Me.tableCalEventItemDataTable.UPDATEIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalEventItemDataTable' にある列 'UPDATEID' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.UPDATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PROCESSDIV() As String
            Get
                If Me.IsPROCESSDIVNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.PROCESSDIVColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.PROCESSDIVColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTACT_NAME() As String
            Get
                If Me.IsCONTACT_NAMENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.CONTACT_NAMEColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.CONTACT_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ACT_ODR_NAME() As String
            Get
                If Me.IsACT_ODR_NAMENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.ACT_ODR_NAMEColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.ACT_ODR_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ODR_DIV() As String
            Get
                If Me.IsODR_DIVNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.ODR_DIVColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.ODR_DIVColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AFTER_ODR_ACT_ID() As String
            Get
                If Me.IsAFTER_ODR_ACT_IDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventItemDataTable.AFTER_ODR_ACT_IDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableCalEventItemDataTable.AFTER_ODR_ACT_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEVENTIDNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.EVENTIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEVENTIDNull()
            Me(Me.tableCalEventItemDataTable.EVENTIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCALIDNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.CALIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCALIDNull()
            Me(Me.tableCalEventItemDataTable.CALIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTODOIDNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.TODOIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTODOIDNull()
            Me(Me.tableCalEventItemDataTable.TODOIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUNIQUEIDNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.UNIQUEIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUNIQUEIDNull()
            Me(Me.tableCalEventItemDataTable.UNIQUEIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRECURRENCEIDNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.RECURRENCEIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRECURRENCEIDNull()
            Me(Me.tableCalEventItemDataTable.RECURRENCEIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCHGSEQNONull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.CHGSEQNOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCHGSEQNONull()
            Me(Me.tableCalEventItemDataTable.CHGSEQNOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsACTSTAFFSTRCDNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.ACTSTAFFSTRCDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetACTSTAFFSTRCDNull()
            Me(Me.tableCalEventItemDataTable.ACTSTAFFSTRCDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsACTSTAFFCDNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.ACTSTAFFCDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetACTSTAFFCDNull()
            Me(Me.tableCalEventItemDataTable.ACTSTAFFCDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRECSTAFFSTRCDNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.RECSTAFFSTRCDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRECSTAFFSTRCDNull()
            Me(Me.tableCalEventItemDataTable.RECSTAFFSTRCDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRECSTAFFCDNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.RECSTAFFCDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRECSTAFFCDNull()
            Me(Me.tableCalEventItemDataTable.RECSTAFFCDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONTACTNONull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.CONTACTNOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONTACTNONull()
            Me(Me.tableCalEventItemDataTable.CONTACTNOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSUMMARYNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.SUMMARYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSUMMARYNull()
            Me(Me.tableCalEventItemDataTable.SUMMARYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSTARTTIMENull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.STARTTIMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSTARTTIMENull()
            Me(Me.tableCalEventItemDataTable.STARTTIMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsENDTIMENull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.ENDTIMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetENDTIMENull()
            Me(Me.tableCalEventItemDataTable.ENDTIMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIMEFLGNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.TIMEFLGColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIMEFLGNull()
            Me(Me.tableCalEventItemDataTable.TIMEFLGColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsALLDAYFLGNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.ALLDAYFLGColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetALLDAYFLGNull()
            Me(Me.tableCalEventItemDataTable.ALLDAYFLGColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMONull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.MEMOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMONull()
            Me(Me.tableCalEventItemDataTable.MEMOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsICROPCOLORNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.ICROPCOLORColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetICROPCOLORNull()
            Me(Me.tableCalEventItemDataTable.ICROPCOLORColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRRULE_FREQNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.RRULE_FREQColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRRULE_FREQNull()
            Me(Me.tableCalEventItemDataTable.RRULE_FREQColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRRULE_INTERVALNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.RRULE_INTERVALColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRRULE_INTERVALNull()
            Me(Me.tableCalEventItemDataTable.RRULE_INTERVALColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRRULE_UNTILNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.RRULE_UNTILColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRRULE_UNTILNull()
            Me(Me.tableCalEventItemDataTable.RRULE_UNTILColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRRULE_TEXTNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.RRULE_TEXTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRRULE_TEXTNull()
            Me(Me.tableCalEventItemDataTable.RRULE_TEXTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLOCATIONNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.LOCATIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLOCATIONNull()
            Me(Me.tableCalEventItemDataTable.LOCATIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsATTENDEENull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.ATTENDEEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetATTENDEENull()
            Me(Me.tableCalEventItemDataTable.ATTENDEEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTRANSPNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.TRANSPColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTRANSPNull()
            Me(Me.tableCalEventItemDataTable.TRANSPColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsURLNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.URLColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetURLNull()
            Me(Me.tableCalEventItemDataTable.URLColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDELFLGNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.DELFLGColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDELFLGNull()
            Me(Me.tableCalEventItemDataTable.DELFLGColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDELDATENull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.DELDATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDELDATENull()
            Me(Me.tableCalEventItemDataTable.DELDATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCREATEDATENull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.CREATEDATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCREATEDATENull()
            Me(Me.tableCalEventItemDataTable.CREATEDATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUPDATEDATENull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.UPDATEDATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUPDATEDATENull()
            Me(Me.tableCalEventItemDataTable.UPDATEDATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCREATEACCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.CREATEACCOUNTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCREATEACCOUNTNull()
            Me(Me.tableCalEventItemDataTable.CREATEACCOUNTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUPDATEACCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.UPDATEACCOUNTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUPDATEACCOUNTNull()
            Me(Me.tableCalEventItemDataTable.UPDATEACCOUNTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCREATEIDNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.CREATEIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCREATEIDNull()
            Me(Me.tableCalEventItemDataTable.CREATEIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUPDATEIDNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.UPDATEIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUPDATEIDNull()
            Me(Me.tableCalEventItemDataTable.UPDATEIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPROCESSDIVNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.PROCESSDIVColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPROCESSDIVNull()
            Me(Me.tableCalEventItemDataTable.PROCESSDIVColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONTACT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.CONTACT_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONTACT_NAMENull()
            Me(Me.tableCalEventItemDataTable.CONTACT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsACT_ODR_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.ACT_ODR_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetACT_ODR_NAMENull()
            Me(Me.tableCalEventItemDataTable.ACT_ODR_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsODR_DIVNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.ODR_DIVColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetODR_DIVNull()
            Me(Me.tableCalEventItemDataTable.ODR_DIVColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAFTER_ODR_ACT_IDNull() As Boolean
            Return Me.IsNull(Me.tableCalEventItemDataTable.AFTER_ODR_ACT_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAFTER_ODR_ACT_IDNull()
            Me(Me.tableCalEventItemDataTable.AFTER_ODR_ACT_IDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CalEventAlarmDataTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableCalEventAlarmDataTable As CalEventAlarmDataTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCalEventAlarmDataTable = CType(Me.Table,CalEventAlarmDataTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EVENTID() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalEventAlarmDataTable.EVENTIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalEventAlarmDataTable' にある列 'EVENTID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalEventAlarmDataTable.EVENTIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SEQNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalEventAlarmDataTable.SEQNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalEventAlarmDataTable' にある列 'SEQNO' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalEventAlarmDataTable.SEQNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STARTTRIGGER() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalEventAlarmDataTable.STARTTRIGGERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalEventAlarmDataTable' にある列 'STARTTRIGGER' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalEventAlarmDataTable.STARTTRIGGERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalEventAlarmDataTable.CREATEDATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalEventAlarmDataTable' にある列 'CREATEDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalEventAlarmDataTable.CREATEDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATEDATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalEventAlarmDataTable.UPDATEDATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalEventAlarmDataTable' にある列 'UPDATEDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalEventAlarmDataTable.UPDATEDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEACCOUNT() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalEventAlarmDataTable.CREATEACCOUNTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalEventAlarmDataTable' にある列 'CREATEACCOUNT' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalEventAlarmDataTable.CREATEACCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATEACCOUNT() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalEventAlarmDataTable.UPDATEACCOUNTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalEventAlarmDataTable' にある列 'UPDATEACCOUNT' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalEventAlarmDataTable.UPDATEACCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEID() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalEventAlarmDataTable.CREATEIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalEventAlarmDataTable' にある列 'CREATEID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalEventAlarmDataTable.CREATEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATEID() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalEventAlarmDataTable.UPDATEIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalEventAlarmDataTable' にある列 'UPDATEID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalEventAlarmDataTable.UPDATEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEVENTIDNull() As Boolean
            Return Me.IsNull(Me.tableCalEventAlarmDataTable.EVENTIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEVENTIDNull()
            Me(Me.tableCalEventAlarmDataTable.EVENTIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSEQNONull() As Boolean
            Return Me.IsNull(Me.tableCalEventAlarmDataTable.SEQNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSEQNONull()
            Me(Me.tableCalEventAlarmDataTable.SEQNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTARTTRIGGERNull() As Boolean
            Return Me.IsNull(Me.tableCalEventAlarmDataTable.STARTTRIGGERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTARTTRIGGERNull()
            Me(Me.tableCalEventAlarmDataTable.STARTTRIGGERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCREATEDATENull() As Boolean
            Return Me.IsNull(Me.tableCalEventAlarmDataTable.CREATEDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCREATEDATENull()
            Me(Me.tableCalEventAlarmDataTable.CREATEDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATEDATENull() As Boolean
            Return Me.IsNull(Me.tableCalEventAlarmDataTable.UPDATEDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATEDATENull()
            Me(Me.tableCalEventAlarmDataTable.UPDATEDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCREATEACCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableCalEventAlarmDataTable.CREATEACCOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCREATEACCOUNTNull()
            Me(Me.tableCalEventAlarmDataTable.CREATEACCOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATEACCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableCalEventAlarmDataTable.UPDATEACCOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATEACCOUNTNull()
            Me(Me.tableCalEventAlarmDataTable.UPDATEACCOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCREATEIDNull() As Boolean
            Return Me.IsNull(Me.tableCalEventAlarmDataTable.CREATEIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCREATEIDNull()
            Me(Me.tableCalEventAlarmDataTable.CREATEIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATEIDNull() As Boolean
            Return Me.IsNull(Me.tableCalEventAlarmDataTable.UPDATEIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATEIDNull()
            Me(Me.tableCalEventAlarmDataTable.UPDATEIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CalEventExDateRow
        Inherits Global.System.Data.DataRow
        
        Private tableCalEventExDate As CalEventExDateDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCalEventExDate = CType(Me.Table,CalEventExDateDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TODOID() As String
            Get
                If Me.IsTODOIDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalEventExDate.TODOIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalEventExDate.TODOIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SEQNO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCalEventExDate.SEQNOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalEventExDate' にある列 'SEQNO' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalEventExDate.SEQNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXDATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalEventExDate.EXDATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalEventExDate' にある列 'EXDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalEventExDate.EXDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEACCOUNT() As String
            Get
                Return CType(Me(Me.tableCalEventExDate.CREATEACCOUNTColumn),String)
            End Get
            Set
                Me(Me.tableCalEventExDate.CREATEACCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATEACCOUNT() As String
            Get
                Return CType(Me(Me.tableCalEventExDate.UPDATEACCOUNTColumn),String)
            End Get
            Set
                Me(Me.tableCalEventExDate.UPDATEACCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEID() As String
            Get
                Return CType(Me(Me.tableCalEventExDate.CREATEIDColumn),String)
            End Get
            Set
                Me(Me.tableCalEventExDate.CREATEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATEID() As String
            Get
                Return CType(Me(Me.tableCalEventExDate.UPDATEIDColumn),String)
            End Get
            Set
                Me(Me.tableCalEventExDate.UPDATEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTODOIDNull() As Boolean
            Return Me.IsNull(Me.tableCalEventExDate.TODOIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTODOIDNull()
            Me(Me.tableCalEventExDate.TODOIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSEQNONull() As Boolean
            Return Me.IsNull(Me.tableCalEventExDate.SEQNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSEQNONull()
            Me(Me.tableCalEventExDate.SEQNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXDATENull() As Boolean
            Return Me.IsNull(Me.tableCalEventExDate.EXDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXDATENull()
            Me(Me.tableCalEventExDate.EXDATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CalTodoExDateRow
        Inherits Global.System.Data.DataRow
        
        Private tableCalTodoExDate As CalTodoExDateDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCalTodoExDate = CType(Me.Table,CalTodoExDateDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TODOID() As String
            Get
                If Me.IsTODOIDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoExDate.TODOIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoExDate.TODOIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SEQNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalTodoExDate.SEQNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalTodoExDate' にある列 'SEQNO' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalTodoExDate.SEQNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXDATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalTodoExDate.EXDATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalTodoExDate' にある列 'EXDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalTodoExDate.EXDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEACCOUNT() As String
            Get
                If Me.IsCREATEACCOUNTNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableCalTodoExDate.CREATEACCOUNTColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoExDate.CREATEACCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATEACCOUNT() As String
            Get
                If Me.IsUPDATEACCOUNTNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoExDate.UPDATEACCOUNTColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoExDate.UPDATEACCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEID() As String
            Get
                If Me.IsCREATEIDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoExDate.CREATEIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoExDate.CREATEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATEID() As String
            Get
                If Me.IsUPDATEIDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableCalTodoExDate.UPDATEIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableCalTodoExDate.UPDATEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTODOIDNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoExDate.TODOIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTODOIDNull()
            Me(Me.tableCalTodoExDate.TODOIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSEQNONull() As Boolean
            Return Me.IsNull(Me.tableCalTodoExDate.SEQNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSEQNONull()
            Me(Me.tableCalTodoExDate.SEQNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXDATENull() As Boolean
            Return Me.IsNull(Me.tableCalTodoExDate.EXDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXDATENull()
            Me(Me.tableCalTodoExDate.EXDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCREATEACCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoExDate.CREATEACCOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCREATEACCOUNTNull()
            Me(Me.tableCalTodoExDate.CREATEACCOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATEACCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoExDate.UPDATEACCOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATEACCOUNTNull()
            Me(Me.tableCalTodoExDate.UPDATEACCOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCREATEIDNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoExDate.CREATEIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCREATEIDNull()
            Me(Me.tableCalTodoExDate.CREATEIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATEIDNull() As Boolean
            Return Me.IsNull(Me.tableCalTodoExDate.UPDATEIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATEIDNull()
            Me(Me.tableCalTodoExDate.UPDATEIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class StaffCodeDataTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableStaffCodeDataTable As StaffCodeDataTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableStaffCodeDataTable = CType(Me.Table,StaffCodeDataTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACTSTAFFCD() As String
            Get
                If Me.IsACTSTAFFCDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableStaffCodeDataTable.ACTSTAFFCDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableStaffCodeDataTable.ACTSTAFFCDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RECSTAFFCD() As String
            Get
                If Me.IsRECSTAFFCDNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableStaffCodeDataTable.RECSTAFFCDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableStaffCodeDataTable.RECSTAFFCDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACTSTAFFCDNull() As Boolean
            Return Me.IsNull(Me.tableStaffCodeDataTable.ACTSTAFFCDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACTSTAFFCDNull()
            Me(Me.tableStaffCodeDataTable.ACTSTAFFCDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRECSTAFFCDNull() As Boolean
            Return Me.IsNull(Me.tableStaffCodeDataTable.RECSTAFFCDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRECSTAFFCDNull()
            Me(Me.tableStaffCodeDataTable.RECSTAFFCDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CalCardLastModifyDataTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableCalCardLastModifyDataTable As CalCardLastModifyDataTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCalCardLastModifyDataTable = CType(Me.Table,CalCardLastModifyDataTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STAFFCD() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalCardLastModifyDataTable.STAFFCDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalCardLastModifyDataTable' にある列 'STAFFCD' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalCardLastModifyDataTable.STAFFCDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CALUPDATEDATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalCardLastModifyDataTable.CALUPDATEDATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalCardLastModifyDataTable' にある列 'CALUPDATEDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalCardLastModifyDataTable.CALUPDATEDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CARDUPDATEDATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalCardLastModifyDataTable.CARDUPDATEDATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalCardLastModifyDataTable' にある列 'CARDUPDATEDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalCardLastModifyDataTable.CARDUPDATEDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalCardLastModifyDataTable.CREATEDATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalCardLastModifyDataTable' にある列 'CREATEDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalCardLastModifyDataTable.CREATEDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATEDATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalCardLastModifyDataTable.UPDATEDATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalCardLastModifyDataTable' にある列 'UPDATEDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalCardLastModifyDataTable.UPDATEDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEACCOUNT() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalCardLastModifyDataTable.CREATEACCOUNTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalCardLastModifyDataTable' にある列 'CREATEACCOUNT' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalCardLastModifyDataTable.CREATEACCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATEACCOUNT() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalCardLastModifyDataTable.UPDATEACCOUNTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalCardLastModifyDataTable' にある列 'UPDATEACCOUNT' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalCardLastModifyDataTable.UPDATEACCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEID() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalCardLastModifyDataTable.CREATEIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalCardLastModifyDataTable' にある列 'CREATEID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalCardLastModifyDataTable.CREATEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATEID() As String
            Get
                Try 
                    Return CType(Me(Me.tableCalCardLastModifyDataTable.UPDATEIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'CalCardLastModifyDataTable' にある列 'UPDATEID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableCalCardLastModifyDataTable.UPDATEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTAFFCDNull() As Boolean
            Return Me.IsNull(Me.tableCalCardLastModifyDataTable.STAFFCDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTAFFCDNull()
            Me(Me.tableCalCardLastModifyDataTable.STAFFCDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCALUPDATEDATENull() As Boolean
            Return Me.IsNull(Me.tableCalCardLastModifyDataTable.CALUPDATEDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCALUPDATEDATENull()
            Me(Me.tableCalCardLastModifyDataTable.CALUPDATEDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCARDUPDATEDATENull() As Boolean
            Return Me.IsNull(Me.tableCalCardLastModifyDataTable.CARDUPDATEDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCARDUPDATEDATENull()
            Me(Me.tableCalCardLastModifyDataTable.CARDUPDATEDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCREATEDATENull() As Boolean
            Return Me.IsNull(Me.tableCalCardLastModifyDataTable.CREATEDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCREATEDATENull()
            Me(Me.tableCalCardLastModifyDataTable.CREATEDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATEDATENull() As Boolean
            Return Me.IsNull(Me.tableCalCardLastModifyDataTable.UPDATEDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATEDATENull()
            Me(Me.tableCalCardLastModifyDataTable.UPDATEDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCREATEACCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableCalCardLastModifyDataTable.CREATEACCOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCREATEACCOUNTNull()
            Me(Me.tableCalCardLastModifyDataTable.CREATEACCOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATEACCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableCalCardLastModifyDataTable.UPDATEACCOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATEACCOUNTNull()
            Me(Me.tableCalCardLastModifyDataTable.UPDATEACCOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCREATEIDNull() As Boolean
            Return Me.IsNull(Me.tableCalCardLastModifyDataTable.CREATEIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCREATEIDNull()
            Me(Me.tableCalCardLastModifyDataTable.CREATEIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATEIDNull() As Boolean
            Return Me.IsNull(Me.tableCalCardLastModifyDataTable.UPDATEIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATEIDNull()
            Me(Me.tableCalCardLastModifyDataTable.UPDATEIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SequenceTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SequenceTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SequenceTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SequenceTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class IdTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As IdTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As IdTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As IdTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CalCalenderDataTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CalCalenderDataTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CalCalenderDataTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CalCalenderDataTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CalTodoItemDataTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CalTodoItemDataTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CalTodoItemDataTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CalTodoItemDataTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CalTodoAlarmDataTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CalTodoAlarmDataTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CalTodoAlarmDataTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CalTodoAlarmDataTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CalEventItemDataTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CalEventItemDataTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CalEventItemDataTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CalEventItemDataTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CalEventAlarmDataTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CalEventAlarmDataTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CalEventAlarmDataTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CalEventAlarmDataTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CalEventExDateRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CalEventExDateRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CalEventExDateRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CalEventExDateRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CalTodoExDateRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CalTodoExDateRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CalTodoExDateRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CalTodoExDateRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class StaffCodeDataTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As StaffCodeDataTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As StaffCodeDataTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As StaffCodeDataTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CalCardLastModifyDataTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CalCardLastModifyDataTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CalCardLastModifyDataTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CalCardLastModifyDataTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
