'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:4.0.30319.239
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(), _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
 Global.System.ComponentModel.ToolboxItem(True), _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), _
 Global.System.Xml.Serialization.XmlRootAttribute("IC3810501DataSet"), _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")> _
Partial Public Class IC3810501DataSet
    Inherits Global.System.Data.DataSet

    Private tableIC3810501GetLastChip As IC3810501GetLastChipDataTable

    Private tableIC3810501InspectionRefreshSeq As IC3810501InspectionRefreshSeqDataTable

    Private tableIC3810501WashRefreshSeq As IC3810501WashRefreshSeqDataTable

    Private tableIC3810501StallProcessInfo As IC3810501StallProcessInfoDataTable

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("IC3810501GetLastChip")) Is Nothing) Then
                MyBase.Tables.Add(New IC3810501GetLastChipDataTable(ds.Tables("IC3810501GetLastChip")))
            End If
            If (Not (ds.Tables("IC3810501InspectionRefreshSeq")) Is Nothing) Then
                MyBase.Tables.Add(New IC3810501InspectionRefreshSeqDataTable(ds.Tables("IC3810501InspectionRefreshSeq")))
            End If
            If (Not (ds.Tables("IC3810501WashRefreshSeq")) Is Nothing) Then
                MyBase.Tables.Add(New IC3810501WashRefreshSeqDataTable(ds.Tables("IC3810501WashRefreshSeq")))
            End If
            If (Not (ds.Tables("IC3810501StallProcessInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3810501StallProcessInfoDataTable(ds.Tables("IC3810501StallProcessInfo")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property IC3810501GetLastChip() As IC3810501GetLastChipDataTable
        Get
            Return Me.tableIC3810501GetLastChip
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property IC3810501InspectionRefreshSeq() As IC3810501InspectionRefreshSeqDataTable
        Get
            Return Me.tableIC3810501InspectionRefreshSeq
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property IC3810501WashRefreshSeq() As IC3810501WashRefreshSeqDataTable
        Get
            Return Me.tableIC3810501WashRefreshSeq
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property IC3810501StallProcessInfo() As IC3810501StallProcessInfoDataTable
        Get
            Return Me.tableIC3810501StallProcessInfo
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As IC3810501DataSet = CType(MyBase.Clone, IC3810501DataSet)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("IC3810501GetLastChip")) Is Nothing) Then
                MyBase.Tables.Add(New IC3810501GetLastChipDataTable(ds.Tables("IC3810501GetLastChip")))
            End If
            If (Not (ds.Tables("IC3810501InspectionRefreshSeq")) Is Nothing) Then
                MyBase.Tables.Add(New IC3810501InspectionRefreshSeqDataTable(ds.Tables("IC3810501InspectionRefreshSeq")))
            End If
            If (Not (ds.Tables("IC3810501WashRefreshSeq")) Is Nothing) Then
                MyBase.Tables.Add(New IC3810501WashRefreshSeqDataTable(ds.Tables("IC3810501WashRefreshSeq")))
            End If
            If (Not (ds.Tables("IC3810501StallProcessInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3810501StallProcessInfoDataTable(ds.Tables("IC3810501StallProcessInfo")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableIC3810501GetLastChip = CType(MyBase.Tables("IC3810501GetLastChip"), IC3810501GetLastChipDataTable)
        If (initTable = True) Then
            If (Not (Me.tableIC3810501GetLastChip) Is Nothing) Then
                Me.tableIC3810501GetLastChip.InitVars()
            End If
        End If
        Me.tableIC3810501InspectionRefreshSeq = CType(MyBase.Tables("IC3810501InspectionRefreshSeq"), IC3810501InspectionRefreshSeqDataTable)
        If (initTable = True) Then
            If (Not (Me.tableIC3810501InspectionRefreshSeq) Is Nothing) Then
                Me.tableIC3810501InspectionRefreshSeq.InitVars()
            End If
        End If
        Me.tableIC3810501WashRefreshSeq = CType(MyBase.Tables("IC3810501WashRefreshSeq"), IC3810501WashRefreshSeqDataTable)
        If (initTable = True) Then
            If (Not (Me.tableIC3810501WashRefreshSeq) Is Nothing) Then
                Me.tableIC3810501WashRefreshSeq.InitVars()
            End If
        End If
        Me.tableIC3810501StallProcessInfo = CType(MyBase.Tables("IC3810501StallProcessInfo"), IC3810501StallProcessInfoDataTable)
        If (initTable = True) Then
            If (Not (Me.tableIC3810501StallProcessInfo) Is Nothing) Then
                Me.tableIC3810501StallProcessInfo.InitVars()
            End If
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
        Me.DataSetName = "IC3810501DataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/StallInfoDataSet.xsd"
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableIC3810501GetLastChip = New IC3810501GetLastChipDataTable()
        MyBase.Tables.Add(Me.tableIC3810501GetLastChip)
        Me.tableIC3810501InspectionRefreshSeq = New IC3810501InspectionRefreshSeqDataTable()
        MyBase.Tables.Add(Me.tableIC3810501InspectionRefreshSeq)
        Me.tableIC3810501WashRefreshSeq = New IC3810501WashRefreshSeqDataTable()
        MyBase.Tables.Add(Me.tableIC3810501WashRefreshSeq)
        Me.tableIC3810501StallProcessInfo = New IC3810501StallProcessInfoDataTable()
        MyBase.Tables.Add(Me.tableIC3810501StallProcessInfo)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeIC3810501GetLastChip() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeIC3810501InspectionRefreshSeq() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeIC3810501WashRefreshSeq() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeIC3810501StallProcessInfo() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As IC3810501DataSet = New IC3810501DataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub IC3810501GetLastChipRowChangeEventHandler(ByVal sender As Object, ByVal e As IC3810501GetLastChipRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub IC3810501InspectionRefreshSeqRowChangeEventHandler(ByVal sender As Object, ByVal e As IC3810501InspectionRefreshSeqRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub IC3810501WashRefreshSeqRowChangeEventHandler(ByVal sender As Object, ByVal e As IC3810501WashRefreshSeqRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub IC3810501StallProcessInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As IC3810501StallProcessInfoRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class IC3810501GetLastChipDataTable
        Inherits Global.System.Data.TypedTableBase(Of IC3810501GetLastChipRow)

        Private columnREZID As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "IC3810501GetLastChip"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property REZIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREZID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As IC3810501GetLastChipRow
            Get
                Return CType(Me.Rows(index), IC3810501GetLastChipRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3810501GetLastChipRowChanging As IC3810501GetLastChipRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3810501GetLastChipRowChanged As IC3810501GetLastChipRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3810501GetLastChipRowDeleting As IC3810501GetLastChipRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3810501GetLastChipRowDeleted As IC3810501GetLastChipRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddIC3810501GetLastChipRow(ByVal row As IC3810501GetLastChipRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddIC3810501GetLastChipRow(ByVal REZID As Long) As IC3810501GetLastChipRow
            Dim rowIC3810501GetLastChipRow As IC3810501GetLastChipRow = CType(Me.NewRow, IC3810501GetLastChipRow)
            Dim columnValuesArray() As Object = New Object() {REZID}
            rowIC3810501GetLastChipRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIC3810501GetLastChipRow)
            Return rowIC3810501GetLastChipRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IC3810501GetLastChipDataTable = CType(MyBase.Clone, IC3810501GetLastChipDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IC3810501GetLastChipDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnREZID = MyBase.Columns("REZID")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnREZID = New Global.System.Data.DataColumn("REZID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREZID)
            Me.columnREZID.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewIC3810501GetLastChipRow() As IC3810501GetLastChipRow
            Return CType(Me.NewRow, IC3810501GetLastChipRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IC3810501GetLastChipRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IC3810501GetLastChipRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IC3810501GetLastChipRowChangedEvent) Is Nothing) Then
                RaiseEvent IC3810501GetLastChipRowChanged(Me, New IC3810501GetLastChipRowChangeEvent(CType(e.Row, IC3810501GetLastChipRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IC3810501GetLastChipRowChangingEvent) Is Nothing) Then
                RaiseEvent IC3810501GetLastChipRowChanging(Me, New IC3810501GetLastChipRowChangeEvent(CType(e.Row, IC3810501GetLastChipRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IC3810501GetLastChipRowDeletedEvent) Is Nothing) Then
                RaiseEvent IC3810501GetLastChipRowDeleted(Me, New IC3810501GetLastChipRowChangeEvent(CType(e.Row, IC3810501GetLastChipRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IC3810501GetLastChipRowDeletingEvent) Is Nothing) Then
                RaiseEvent IC3810501GetLastChipRowDeleting(Me, New IC3810501GetLastChipRowChangeEvent(CType(e.Row, IC3810501GetLastChipRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveIC3810501GetLastChipRow(ByVal row As IC3810501GetLastChipRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3810501DataSet = New IC3810501DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IC3810501GetLastChipDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class IC3810501InspectionRefreshSeqDataTable
        Inherits Global.System.Data.TypedTableBase(Of IC3810501InspectionRefreshSeqRow)

        Private columnREZID As Global.System.Data.DataColumn

        Private columnSEQNO As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "IC3810501InspectionRefreshSeq"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property REZIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREZID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SEQNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEQNO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As IC3810501InspectionRefreshSeqRow
            Get
                Return CType(Me.Rows(index), IC3810501InspectionRefreshSeqRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3810501InspectionRefreshSeqRowChanging As IC3810501InspectionRefreshSeqRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3810501InspectionRefreshSeqRowChanged As IC3810501InspectionRefreshSeqRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3810501InspectionRefreshSeqRowDeleting As IC3810501InspectionRefreshSeqRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3810501InspectionRefreshSeqRowDeleted As IC3810501InspectionRefreshSeqRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddIC3810501InspectionRefreshSeqRow(ByVal row As IC3810501InspectionRefreshSeqRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddIC3810501InspectionRefreshSeqRow(ByVal REZID As Long, ByVal SEQNO As Long) As IC3810501InspectionRefreshSeqRow
            Dim rowIC3810501InspectionRefreshSeqRow As IC3810501InspectionRefreshSeqRow = CType(Me.NewRow, IC3810501InspectionRefreshSeqRow)
            Dim columnValuesArray() As Object = New Object() {REZID, SEQNO}
            rowIC3810501InspectionRefreshSeqRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIC3810501InspectionRefreshSeqRow)
            Return rowIC3810501InspectionRefreshSeqRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IC3810501InspectionRefreshSeqDataTable = CType(MyBase.Clone, IC3810501InspectionRefreshSeqDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IC3810501InspectionRefreshSeqDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnREZID = MyBase.Columns("REZID")
            Me.columnSEQNO = MyBase.Columns("SEQNO")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnREZID = New Global.System.Data.DataColumn("REZID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREZID)
            Me.columnSEQNO = New Global.System.Data.DataColumn("SEQNO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEQNO)
            Me.columnREZID.AllowDBNull = False
            Me.columnSEQNO.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewIC3810501InspectionRefreshSeqRow() As IC3810501InspectionRefreshSeqRow
            Return CType(Me.NewRow, IC3810501InspectionRefreshSeqRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IC3810501InspectionRefreshSeqRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IC3810501InspectionRefreshSeqRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IC3810501InspectionRefreshSeqRowChangedEvent) Is Nothing) Then
                RaiseEvent IC3810501InspectionRefreshSeqRowChanged(Me, New IC3810501InspectionRefreshSeqRowChangeEvent(CType(e.Row, IC3810501InspectionRefreshSeqRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IC3810501InspectionRefreshSeqRowChangingEvent) Is Nothing) Then
                RaiseEvent IC3810501InspectionRefreshSeqRowChanging(Me, New IC3810501InspectionRefreshSeqRowChangeEvent(CType(e.Row, IC3810501InspectionRefreshSeqRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IC3810501InspectionRefreshSeqRowDeletedEvent) Is Nothing) Then
                RaiseEvent IC3810501InspectionRefreshSeqRowDeleted(Me, New IC3810501InspectionRefreshSeqRowChangeEvent(CType(e.Row, IC3810501InspectionRefreshSeqRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IC3810501InspectionRefreshSeqRowDeletingEvent) Is Nothing) Then
                RaiseEvent IC3810501InspectionRefreshSeqRowDeleting(Me, New IC3810501InspectionRefreshSeqRowChangeEvent(CType(e.Row, IC3810501InspectionRefreshSeqRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveIC3810501InspectionRefreshSeqRow(ByVal row As IC3810501InspectionRefreshSeqRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3810501DataSet = New IC3810501DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IC3810501InspectionRefreshSeqDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class IC3810501WashRefreshSeqDataTable
        Inherits Global.System.Data.TypedTableBase(Of IC3810501WashRefreshSeqRow)

        Private columnREZID As Global.System.Data.DataColumn

        Private columnSEQNO As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "IC3810501WashRefreshSeq"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property REZIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREZID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SEQNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEQNO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As IC3810501WashRefreshSeqRow
            Get
                Return CType(Me.Rows(index), IC3810501WashRefreshSeqRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3810501WashRefreshSeqRowChanging As IC3810501WashRefreshSeqRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3810501WashRefreshSeqRowChanged As IC3810501WashRefreshSeqRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3810501WashRefreshSeqRowDeleting As IC3810501WashRefreshSeqRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3810501WashRefreshSeqRowDeleted As IC3810501WashRefreshSeqRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddIC3810501WashRefreshSeqRow(ByVal row As IC3810501WashRefreshSeqRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddIC3810501WashRefreshSeqRow(ByVal REZID As Long, ByVal SEQNO As Long) As IC3810501WashRefreshSeqRow
            Dim rowIC3810501WashRefreshSeqRow As IC3810501WashRefreshSeqRow = CType(Me.NewRow, IC3810501WashRefreshSeqRow)
            Dim columnValuesArray() As Object = New Object() {REZID, SEQNO}
            rowIC3810501WashRefreshSeqRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIC3810501WashRefreshSeqRow)
            Return rowIC3810501WashRefreshSeqRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IC3810501WashRefreshSeqDataTable = CType(MyBase.Clone, IC3810501WashRefreshSeqDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IC3810501WashRefreshSeqDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnREZID = MyBase.Columns("REZID")
            Me.columnSEQNO = MyBase.Columns("SEQNO")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnREZID = New Global.System.Data.DataColumn("REZID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREZID)
            Me.columnSEQNO = New Global.System.Data.DataColumn("SEQNO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEQNO)
            Me.columnREZID.AllowDBNull = False
            Me.columnSEQNO.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewIC3810501WashRefreshSeqRow() As IC3810501WashRefreshSeqRow
            Return CType(Me.NewRow, IC3810501WashRefreshSeqRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IC3810501WashRefreshSeqRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IC3810501WashRefreshSeqRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IC3810501WashRefreshSeqRowChangedEvent) Is Nothing) Then
                RaiseEvent IC3810501WashRefreshSeqRowChanged(Me, New IC3810501WashRefreshSeqRowChangeEvent(CType(e.Row, IC3810501WashRefreshSeqRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IC3810501WashRefreshSeqRowChangingEvent) Is Nothing) Then
                RaiseEvent IC3810501WashRefreshSeqRowChanging(Me, New IC3810501WashRefreshSeqRowChangeEvent(CType(e.Row, IC3810501WashRefreshSeqRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IC3810501WashRefreshSeqRowDeletedEvent) Is Nothing) Then
                RaiseEvent IC3810501WashRefreshSeqRowDeleted(Me, New IC3810501WashRefreshSeqRowChangeEvent(CType(e.Row, IC3810501WashRefreshSeqRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IC3810501WashRefreshSeqRowDeletingEvent) Is Nothing) Then
                RaiseEvent IC3810501WashRefreshSeqRowDeleting(Me, New IC3810501WashRefreshSeqRowChangeEvent(CType(e.Row, IC3810501WashRefreshSeqRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveIC3810501WashRefreshSeqRow(ByVal row As IC3810501WashRefreshSeqRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3810501DataSet = New IC3810501DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IC3810501WashRefreshSeqDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class IC3810501StallProcessInfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of IC3810501StallProcessInfoRow)

        Private columnDLRCD As Global.System.Data.DataColumn

        Private columnSTRCD As Global.System.Data.DataColumn

        Private columnREZID As Global.System.Data.DataColumn

        Private columnDSEQNO As Global.System.Data.DataColumn

        Private columnSEQNO As Global.System.Data.DataColumn

        Private columnRESULT_STATUS As Global.System.Data.DataColumn

        Private columnRESULT_STALLID As Global.System.Data.DataColumn

        Private columnRESULT_START_TIME As Global.System.Data.DataColumn

        Private columnRESULT_END_TIME As Global.System.Data.DataColumn

        Private columnRESULT_IN_TIME As Global.System.Data.DataColumn

        Private columnRESULT_WORK_TIME As Global.System.Data.DataColumn

        Private columnREZ_START_TIME As Global.System.Data.DataColumn

        Private columnREZ_END_TIME As Global.System.Data.DataColumn

        Private columnREZ_WORK_TIME As Global.System.Data.DataColumn

        Private columnRESULT_WASH_START As Global.System.Data.DataColumn

        Private columnRESULT_WASH_END As Global.System.Data.DataColumn

        Private columnRESULT_WAIT_START As Global.System.Data.DataColumn

        Private columnRESULT_WAIT_END As Global.System.Data.DataColumn

        Private columnUPDATE_COUNT As Global.System.Data.DataColumn

        Private columnRESULT_INSPECTION_START As Global.System.Data.DataColumn

        Private columnRESULT_INSPECTION_END As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "IC3810501StallProcessInfo"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DLRCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDLRCD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property STRCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTRCD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property REZIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREZID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DSEQNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDSEQNO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SEQNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEQNO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RESULT_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESULT_STATUS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RESULT_STALLIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESULT_STALLID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RESULT_START_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESULT_START_TIME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RESULT_END_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESULT_END_TIME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RESULT_IN_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESULT_IN_TIME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RESULT_WORK_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESULT_WORK_TIME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property REZ_START_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREZ_START_TIME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property REZ_END_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREZ_END_TIME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property REZ_WORK_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREZ_WORK_TIME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RESULT_WASH_STARTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESULT_WASH_START
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RESULT_WASH_ENDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESULT_WASH_END
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RESULT_WAIT_STARTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESULT_WAIT_START
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RESULT_WAIT_ENDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESULT_WAIT_END
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property UPDATE_COUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATE_COUNT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RESULT_INSPECTION_STARTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESULT_INSPECTION_START
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RESULT_INSPECTION_ENDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESULT_INSPECTION_END
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As IC3810501StallProcessInfoRow
            Get
                Return CType(Me.Rows(index), IC3810501StallProcessInfoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3810501StallProcessInfoRowChanging As IC3810501StallProcessInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3810501StallProcessInfoRowChanged As IC3810501StallProcessInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3810501StallProcessInfoRowDeleting As IC3810501StallProcessInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3810501StallProcessInfoRowDeleted As IC3810501StallProcessInfoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddIC3810501StallProcessInfoRow(ByVal row As IC3810501StallProcessInfoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddIC3810501StallProcessInfoRow( _
                    ByVal DLRCD As String, _
                    ByVal STRCD As String, _
                    ByVal REZID As Long, _
                    ByVal DSEQNO As Long, _
                    ByVal SEQNO As Long, _
                    ByVal RESULT_STATUS As String, _
                    ByVal RESULT_STALLID As Long, _
                    ByVal RESULT_START_TIME As String, _
                    ByVal RESULT_END_TIME As String, _
                    ByVal RESULT_IN_TIME As String, _
                    ByVal RESULT_WORK_TIME As Long, _
                    ByVal REZ_START_TIME As String, _
                    ByVal REZ_END_TIME As String, _
                    ByVal REZ_WORK_TIME As Long, _
                    ByVal RESULT_WASH_START As String, _
                    ByVal RESULT_WASH_END As String, _
                    ByVal RESULT_WAIT_START As String, _
                    ByVal RESULT_WAIT_END As String, _
                    ByVal UPDATE_COUNT As Long, _
                    ByVal RESULT_INSPECTION_START As String, _
                    ByVal RESULT_INSPECTION_END As String) As IC3810501StallProcessInfoRow
            Dim rowIC3810501StallProcessInfoRow As IC3810501StallProcessInfoRow = CType(Me.NewRow, IC3810501StallProcessInfoRow)
            Dim columnValuesArray() As Object = New Object() {DLRCD, STRCD, REZID, DSEQNO, SEQNO, RESULT_STATUS, RESULT_STALLID, RESULT_START_TIME, RESULT_END_TIME, RESULT_IN_TIME, RESULT_WORK_TIME, REZ_START_TIME, REZ_END_TIME, REZ_WORK_TIME, RESULT_WASH_START, RESULT_WASH_END, RESULT_WAIT_START, RESULT_WAIT_END, UPDATE_COUNT, RESULT_INSPECTION_START, RESULT_INSPECTION_END}
            rowIC3810501StallProcessInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIC3810501StallProcessInfoRow)
            Return rowIC3810501StallProcessInfoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IC3810501StallProcessInfoDataTable = CType(MyBase.Clone, IC3810501StallProcessInfoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IC3810501StallProcessInfoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnDLRCD = MyBase.Columns("DLRCD")
            Me.columnSTRCD = MyBase.Columns("STRCD")
            Me.columnREZID = MyBase.Columns("REZID")
            Me.columnDSEQNO = MyBase.Columns("DSEQNO")
            Me.columnSEQNO = MyBase.Columns("SEQNO")
            Me.columnRESULT_STATUS = MyBase.Columns("RESULT_STATUS")
            Me.columnRESULT_STALLID = MyBase.Columns("RESULT_STALLID")
            Me.columnRESULT_START_TIME = MyBase.Columns("RESULT_START_TIME")
            Me.columnRESULT_END_TIME = MyBase.Columns("RESULT_END_TIME")
            Me.columnRESULT_IN_TIME = MyBase.Columns("RESULT_IN_TIME")
            Me.columnRESULT_WORK_TIME = MyBase.Columns("RESULT_WORK_TIME")
            Me.columnREZ_START_TIME = MyBase.Columns("REZ_START_TIME")
            Me.columnREZ_END_TIME = MyBase.Columns("REZ_END_TIME")
            Me.columnREZ_WORK_TIME = MyBase.Columns("REZ_WORK_TIME")
            Me.columnRESULT_WASH_START = MyBase.Columns("RESULT_WASH_START")
            Me.columnRESULT_WASH_END = MyBase.Columns("RESULT_WASH_END")
            Me.columnRESULT_WAIT_START = MyBase.Columns("RESULT_WAIT_START")
            Me.columnRESULT_WAIT_END = MyBase.Columns("RESULT_WAIT_END")
            Me.columnUPDATE_COUNT = MyBase.Columns("UPDATE_COUNT")
            Me.columnRESULT_INSPECTION_START = MyBase.Columns("RESULT_INSPECTION_START")
            Me.columnRESULT_INSPECTION_END = MyBase.Columns("RESULT_INSPECTION_END")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnDLRCD = New Global.System.Data.DataColumn("DLRCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDLRCD)
            Me.columnSTRCD = New Global.System.Data.DataColumn("STRCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTRCD)
            Me.columnREZID = New Global.System.Data.DataColumn("REZID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREZID)
            Me.columnDSEQNO = New Global.System.Data.DataColumn("DSEQNO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDSEQNO)
            Me.columnSEQNO = New Global.System.Data.DataColumn("SEQNO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEQNO)
            Me.columnRESULT_STATUS = New Global.System.Data.DataColumn("RESULT_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESULT_STATUS)
            Me.columnRESULT_STALLID = New Global.System.Data.DataColumn("RESULT_STALLID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESULT_STALLID)
            Me.columnRESULT_START_TIME = New Global.System.Data.DataColumn("RESULT_START_TIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESULT_START_TIME)
            Me.columnRESULT_END_TIME = New Global.System.Data.DataColumn("RESULT_END_TIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESULT_END_TIME)
            Me.columnRESULT_IN_TIME = New Global.System.Data.DataColumn("RESULT_IN_TIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESULT_IN_TIME)
            Me.columnRESULT_WORK_TIME = New Global.System.Data.DataColumn("RESULT_WORK_TIME", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESULT_WORK_TIME)
            Me.columnREZ_START_TIME = New Global.System.Data.DataColumn("REZ_START_TIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREZ_START_TIME)
            Me.columnREZ_END_TIME = New Global.System.Data.DataColumn("REZ_END_TIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREZ_END_TIME)
            Me.columnREZ_WORK_TIME = New Global.System.Data.DataColumn("REZ_WORK_TIME", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREZ_WORK_TIME)
            Me.columnRESULT_WASH_START = New Global.System.Data.DataColumn("RESULT_WASH_START", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESULT_WASH_START)
            Me.columnRESULT_WASH_END = New Global.System.Data.DataColumn("RESULT_WASH_END", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESULT_WASH_END)
            Me.columnRESULT_WAIT_START = New Global.System.Data.DataColumn("RESULT_WAIT_START", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESULT_WAIT_START)
            Me.columnRESULT_WAIT_END = New Global.System.Data.DataColumn("RESULT_WAIT_END", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESULT_WAIT_END)
            Me.columnUPDATE_COUNT = New Global.System.Data.DataColumn("UPDATE_COUNT", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATE_COUNT)
            Me.columnRESULT_INSPECTION_START = New Global.System.Data.DataColumn("RESULT_INSPECTION_START", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESULT_INSPECTION_START)
            Me.columnRESULT_INSPECTION_END = New Global.System.Data.DataColumn("RESULT_INSPECTION_END", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESULT_INSPECTION_END)
            Me.columnDLRCD.AllowDBNull = False
            Me.columnDLRCD.MaxLength = 5
            Me.columnSTRCD.AllowDBNull = False
            Me.columnSTRCD.MaxLength = 3
            Me.columnREZID.AllowDBNull = False
            Me.columnDSEQNO.AllowDBNull = False
            Me.columnSEQNO.AllowDBNull = False
            Me.columnRESULT_STATUS.MaxLength = 2
            Me.columnRESULT_STALLID.AllowDBNull = False
            Me.columnRESULT_START_TIME.MaxLength = 12
            Me.columnRESULT_END_TIME.MaxLength = 12
            Me.columnRESULT_IN_TIME.MaxLength = 12
            Me.columnREZ_START_TIME.MaxLength = 12
            Me.columnREZ_END_TIME.MaxLength = 12
            Me.columnRESULT_WASH_START.MaxLength = 12
            Me.columnRESULT_WASH_END.MaxLength = 12
            Me.columnRESULT_WAIT_START.MaxLength = 12
            Me.columnRESULT_WAIT_END.MaxLength = 12
            Me.columnRESULT_INSPECTION_START.MaxLength = 12
            Me.columnRESULT_INSPECTION_END.MaxLength = 12
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewIC3810501StallProcessInfoRow() As IC3810501StallProcessInfoRow
            Return CType(Me.NewRow, IC3810501StallProcessInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IC3810501StallProcessInfoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IC3810501StallProcessInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IC3810501StallProcessInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent IC3810501StallProcessInfoRowChanged(Me, New IC3810501StallProcessInfoRowChangeEvent(CType(e.Row, IC3810501StallProcessInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IC3810501StallProcessInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent IC3810501StallProcessInfoRowChanging(Me, New IC3810501StallProcessInfoRowChangeEvent(CType(e.Row, IC3810501StallProcessInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IC3810501StallProcessInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent IC3810501StallProcessInfoRowDeleted(Me, New IC3810501StallProcessInfoRowChangeEvent(CType(e.Row, IC3810501StallProcessInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IC3810501StallProcessInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent IC3810501StallProcessInfoRowDeleting(Me, New IC3810501StallProcessInfoRowChangeEvent(CType(e.Row, IC3810501StallProcessInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveIC3810501StallProcessInfoRow(ByVal row As IC3810501StallProcessInfoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3810501DataSet = New IC3810501DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IC3810501StallProcessInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IC3810501GetLastChipRow
        Inherits Global.System.Data.DataRow

        Private tableIC3810501GetLastChip As IC3810501GetLastChipDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIC3810501GetLastChip = CType(Me.Table, IC3810501GetLastChipDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property REZID() As Long
            Get
                Return CType(Me(Me.tableIC3810501GetLastChip.REZIDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3810501GetLastChip.REZIDColumn) = value
            End Set
        End Property
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IC3810501InspectionRefreshSeqRow
        Inherits Global.System.Data.DataRow

        Private tableIC3810501InspectionRefreshSeq As IC3810501InspectionRefreshSeqDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIC3810501InspectionRefreshSeq = CType(Me.Table, IC3810501InspectionRefreshSeqDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property REZID() As Long
            Get
                Return CType(Me(Me.tableIC3810501InspectionRefreshSeq.REZIDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3810501InspectionRefreshSeq.REZIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SEQNO() As Long
            Get
                Return CType(Me(Me.tableIC3810501InspectionRefreshSeq.SEQNOColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3810501InspectionRefreshSeq.SEQNOColumn) = value
            End Set
        End Property
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IC3810501WashRefreshSeqRow
        Inherits Global.System.Data.DataRow

        Private tableIC3810501WashRefreshSeq As IC3810501WashRefreshSeqDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIC3810501WashRefreshSeq = CType(Me.Table, IC3810501WashRefreshSeqDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property REZID() As Long
            Get
                Return CType(Me(Me.tableIC3810501WashRefreshSeq.REZIDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3810501WashRefreshSeq.REZIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SEQNO() As Long
            Get
                Return CType(Me(Me.tableIC3810501WashRefreshSeq.SEQNOColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3810501WashRefreshSeq.SEQNOColumn) = value
            End Set
        End Property
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IC3810501StallProcessInfoRow
        Inherits Global.System.Data.DataRow

        Private tableIC3810501StallProcessInfo As IC3810501StallProcessInfoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIC3810501StallProcessInfo = CType(Me.Table, IC3810501StallProcessInfoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DLRCD() As String
            Get
                Return CType(Me(Me.tableIC3810501StallProcessInfo.DLRCDColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3810501StallProcessInfo.DLRCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property STRCD() As String
            Get
                Return CType(Me(Me.tableIC3810501StallProcessInfo.STRCDColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3810501StallProcessInfo.STRCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property REZID() As Long
            Get
                Return CType(Me(Me.tableIC3810501StallProcessInfo.REZIDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3810501StallProcessInfo.REZIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DSEQNO() As Long
            Get
                Return CType(Me(Me.tableIC3810501StallProcessInfo.DSEQNOColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3810501StallProcessInfo.DSEQNOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SEQNO() As Long
            Get
                Return CType(Me(Me.tableIC3810501StallProcessInfo.SEQNOColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3810501StallProcessInfo.SEQNOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RESULT_STATUS() As String
            Get
                If Me.IsRESULT_STATUSNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableIC3810501StallProcessInfo.RESULT_STATUSColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableIC3810501StallProcessInfo.RESULT_STATUSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RESULT_STALLID() As Long
            Get
                Return CType(Me(Me.tableIC3810501StallProcessInfo.RESULT_STALLIDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3810501StallProcessInfo.RESULT_STALLIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RESULT_START_TIME() As String
            Get
                If Me.IsRESULT_START_TIMENull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableIC3810501StallProcessInfo.RESULT_START_TIMEColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableIC3810501StallProcessInfo.RESULT_START_TIMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RESULT_END_TIME() As String
            Get
                If Me.IsRESULT_END_TIMENull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableIC3810501StallProcessInfo.RESULT_END_TIMEColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableIC3810501StallProcessInfo.RESULT_END_TIMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RESULT_IN_TIME() As String
            Get
                If Me.IsRESULT_IN_TIMENull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableIC3810501StallProcessInfo.RESULT_IN_TIMEColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableIC3810501StallProcessInfo.RESULT_IN_TIMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RESULT_WORK_TIME() As Long
            Get
                Try
                    Return CType(Me(Me.tableIC3810501StallProcessInfo.RESULT_WORK_TIMEColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3810501StallProcessInfo' にある列 'RESULT_WORK_TIME' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Long)
                Me(Me.tableIC3810501StallProcessInfo.RESULT_WORK_TIMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property REZ_START_TIME() As String
            Get
                If Me.IsREZ_START_TIMENull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableIC3810501StallProcessInfo.REZ_START_TIMEColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableIC3810501StallProcessInfo.REZ_START_TIMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property REZ_END_TIME() As String
            Get
                If Me.IsREZ_END_TIMENull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableIC3810501StallProcessInfo.REZ_END_TIMEColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableIC3810501StallProcessInfo.REZ_END_TIMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property REZ_WORK_TIME() As Long
            Get
                Try
                    Return CType(Me(Me.tableIC3810501StallProcessInfo.REZ_WORK_TIMEColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3810501StallProcessInfo' にある列 'REZ_WORK_TIME' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Long)
                Me(Me.tableIC3810501StallProcessInfo.REZ_WORK_TIMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RESULT_WASH_START() As String
            Get
                If Me.IsRESULT_WASH_STARTNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableIC3810501StallProcessInfo.RESULT_WASH_STARTColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableIC3810501StallProcessInfo.RESULT_WASH_STARTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RESULT_WASH_END() As String
            Get
                If Me.IsRESULT_WASH_ENDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableIC3810501StallProcessInfo.RESULT_WASH_ENDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableIC3810501StallProcessInfo.RESULT_WASH_ENDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RESULT_WAIT_START() As String
            Get
                If Me.IsRESULT_WAIT_STARTNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableIC3810501StallProcessInfo.RESULT_WAIT_STARTColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableIC3810501StallProcessInfo.RESULT_WAIT_STARTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RESULT_WAIT_END() As String
            Get
                If Me.IsRESULT_WAIT_ENDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableIC3810501StallProcessInfo.RESULT_WAIT_ENDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableIC3810501StallProcessInfo.RESULT_WAIT_ENDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UPDATE_COUNT() As Long
            Get
                Try
                    Return CType(Me(Me.tableIC3810501StallProcessInfo.UPDATE_COUNTColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3810501StallProcessInfo' にある列 'UPDATE_COUNT' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Long)
                Me(Me.tableIC3810501StallProcessInfo.UPDATE_COUNTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RESULT_INSPECTION_START() As String
            Get
                If Me.IsRESULT_INSPECTION_STARTNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableIC3810501StallProcessInfo.RESULT_INSPECTION_STARTColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableIC3810501StallProcessInfo.RESULT_INSPECTION_STARTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RESULT_INSPECTION_END() As String
            Get
                If Me.IsRESULT_INSPECTION_ENDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableIC3810501StallProcessInfo.RESULT_INSPECTION_ENDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableIC3810501StallProcessInfo.RESULT_INSPECTION_ENDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRESULT_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableIC3810501StallProcessInfo.RESULT_STATUSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRESULT_STATUSNull()
            Me(Me.tableIC3810501StallProcessInfo.RESULT_STATUSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRESULT_START_TIMENull() As Boolean
            Return Me.IsNull(Me.tableIC3810501StallProcessInfo.RESULT_START_TIMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRESULT_START_TIMENull()
            Me(Me.tableIC3810501StallProcessInfo.RESULT_START_TIMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRESULT_END_TIMENull() As Boolean
            Return Me.IsNull(Me.tableIC3810501StallProcessInfo.RESULT_END_TIMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRESULT_END_TIMENull()
            Me(Me.tableIC3810501StallProcessInfo.RESULT_END_TIMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRESULT_IN_TIMENull() As Boolean
            Return Me.IsNull(Me.tableIC3810501StallProcessInfo.RESULT_IN_TIMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRESULT_IN_TIMENull()
            Me(Me.tableIC3810501StallProcessInfo.RESULT_IN_TIMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRESULT_WORK_TIMENull() As Boolean
            Return Me.IsNull(Me.tableIC3810501StallProcessInfo.RESULT_WORK_TIMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRESULT_WORK_TIMENull()
            Me(Me.tableIC3810501StallProcessInfo.RESULT_WORK_TIMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsREZ_START_TIMENull() As Boolean
            Return Me.IsNull(Me.tableIC3810501StallProcessInfo.REZ_START_TIMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetREZ_START_TIMENull()
            Me(Me.tableIC3810501StallProcessInfo.REZ_START_TIMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsREZ_END_TIMENull() As Boolean
            Return Me.IsNull(Me.tableIC3810501StallProcessInfo.REZ_END_TIMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetREZ_END_TIMENull()
            Me(Me.tableIC3810501StallProcessInfo.REZ_END_TIMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsREZ_WORK_TIMENull() As Boolean
            Return Me.IsNull(Me.tableIC3810501StallProcessInfo.REZ_WORK_TIMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetREZ_WORK_TIMENull()
            Me(Me.tableIC3810501StallProcessInfo.REZ_WORK_TIMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRESULT_WASH_STARTNull() As Boolean
            Return Me.IsNull(Me.tableIC3810501StallProcessInfo.RESULT_WASH_STARTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRESULT_WASH_STARTNull()
            Me(Me.tableIC3810501StallProcessInfo.RESULT_WASH_STARTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRESULT_WASH_ENDNull() As Boolean
            Return Me.IsNull(Me.tableIC3810501StallProcessInfo.RESULT_WASH_ENDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRESULT_WASH_ENDNull()
            Me(Me.tableIC3810501StallProcessInfo.RESULT_WASH_ENDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRESULT_WAIT_STARTNull() As Boolean
            Return Me.IsNull(Me.tableIC3810501StallProcessInfo.RESULT_WAIT_STARTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRESULT_WAIT_STARTNull()
            Me(Me.tableIC3810501StallProcessInfo.RESULT_WAIT_STARTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRESULT_WAIT_ENDNull() As Boolean
            Return Me.IsNull(Me.tableIC3810501StallProcessInfo.RESULT_WAIT_ENDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRESULT_WAIT_ENDNull()
            Me(Me.tableIC3810501StallProcessInfo.RESULT_WAIT_ENDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUPDATE_COUNTNull() As Boolean
            Return Me.IsNull(Me.tableIC3810501StallProcessInfo.UPDATE_COUNTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUPDATE_COUNTNull()
            Me(Me.tableIC3810501StallProcessInfo.UPDATE_COUNTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRESULT_INSPECTION_STARTNull() As Boolean
            Return Me.IsNull(Me.tableIC3810501StallProcessInfo.RESULT_INSPECTION_STARTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRESULT_INSPECTION_STARTNull()
            Me(Me.tableIC3810501StallProcessInfo.RESULT_INSPECTION_STARTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRESULT_INSPECTION_ENDNull() As Boolean
            Return Me.IsNull(Me.tableIC3810501StallProcessInfo.RESULT_INSPECTION_ENDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRESULT_INSPECTION_ENDNull()
            Me(Me.tableIC3810501StallProcessInfo.RESULT_INSPECTION_ENDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class IC3810501GetLastChipRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As IC3810501GetLastChipRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As IC3810501GetLastChipRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As IC3810501GetLastChipRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class IC3810501InspectionRefreshSeqRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As IC3810501InspectionRefreshSeqRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As IC3810501InspectionRefreshSeqRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As IC3810501InspectionRefreshSeqRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class IC3810501WashRefreshSeqRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As IC3810501WashRefreshSeqRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As IC3810501WashRefreshSeqRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As IC3810501WashRefreshSeqRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class IC3810501StallProcessInfoRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As IC3810501StallProcessInfoRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As IC3810501StallProcessInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As IC3810501StallProcessInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
