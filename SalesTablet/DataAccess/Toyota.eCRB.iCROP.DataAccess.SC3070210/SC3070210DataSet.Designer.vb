'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:4.0.30319.18063
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("SC3070210DataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class SC3070210DataSet
    Inherits Global.System.Data.DataSet
    
    Private tableSC3070210DISCOUNTAPPROVAL As SC3070210DISCOUNTAPPROVALDataTable
    
    Private tableSC3070210CONTRACTAPPROVAL As SC3070210CONTRACTAPPROVALDataTable
    
    Private tableSC3070210VEHICLE As SC3070210VEHICLEDataTable
    
    Private tableSC3070210REQUEST As SC3070210REQUESTDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("SC3070210DISCOUNTAPPROVAL")) Is Nothing) Then
                MyBase.Tables.Add(New SC3070210DISCOUNTAPPROVALDataTable(ds.Tables("SC3070210DISCOUNTAPPROVAL")))
            End If
            If (Not (ds.Tables("SC3070210CONTRACTAPPROVAL")) Is Nothing) Then
                MyBase.Tables.Add(New SC3070210CONTRACTAPPROVALDataTable(ds.Tables("SC3070210CONTRACTAPPROVAL")))
            End If
            If (Not (ds.Tables("SC3070210VEHICLE")) Is Nothing) Then
                MyBase.Tables.Add(New SC3070210VEHICLEDataTable(ds.Tables("SC3070210VEHICLE")))
            End If
            If (Not (ds.Tables("SC3070210REQUEST")) Is Nothing) Then
                MyBase.Tables.Add(New SC3070210REQUESTDataTable(ds.Tables("SC3070210REQUEST")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3070210DISCOUNTAPPROVAL() As SC3070210DISCOUNTAPPROVALDataTable
        Get
            Return Me.tableSC3070210DISCOUNTAPPROVAL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3070210CONTRACTAPPROVAL() As SC3070210CONTRACTAPPROVALDataTable
        Get
            Return Me.tableSC3070210CONTRACTAPPROVAL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3070210VEHICLE() As SC3070210VEHICLEDataTable
        Get
            Return Me.tableSC3070210VEHICLE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3070210REQUEST() As SC3070210REQUESTDataTable
        Get
            Return Me.tableSC3070210REQUEST
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As SC3070210DataSet = CType(MyBase.Clone,SC3070210DataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("SC3070210DISCOUNTAPPROVAL")) Is Nothing) Then
                MyBase.Tables.Add(New SC3070210DISCOUNTAPPROVALDataTable(ds.Tables("SC3070210DISCOUNTAPPROVAL")))
            End If
            If (Not (ds.Tables("SC3070210CONTRACTAPPROVAL")) Is Nothing) Then
                MyBase.Tables.Add(New SC3070210CONTRACTAPPROVALDataTable(ds.Tables("SC3070210CONTRACTAPPROVAL")))
            End If
            If (Not (ds.Tables("SC3070210VEHICLE")) Is Nothing) Then
                MyBase.Tables.Add(New SC3070210VEHICLEDataTable(ds.Tables("SC3070210VEHICLE")))
            End If
            If (Not (ds.Tables("SC3070210REQUEST")) Is Nothing) Then
                MyBase.Tables.Add(New SC3070210REQUESTDataTable(ds.Tables("SC3070210REQUEST")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableSC3070210DISCOUNTAPPROVAL = CType(MyBase.Tables("SC3070210DISCOUNTAPPROVAL"),SC3070210DISCOUNTAPPROVALDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3070210DISCOUNTAPPROVAL) Is Nothing) Then
                Me.tableSC3070210DISCOUNTAPPROVAL.InitVars
            End If
        End If
        Me.tableSC3070210CONTRACTAPPROVAL = CType(MyBase.Tables("SC3070210CONTRACTAPPROVAL"),SC3070210CONTRACTAPPROVALDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3070210CONTRACTAPPROVAL) Is Nothing) Then
                Me.tableSC3070210CONTRACTAPPROVAL.InitVars
            End If
        End If
        Me.tableSC3070210VEHICLE = CType(MyBase.Tables("SC3070210VEHICLE"),SC3070210VEHICLEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3070210VEHICLE) Is Nothing) Then
                Me.tableSC3070210VEHICLE.InitVars
            End If
        End If
        Me.tableSC3070210REQUEST = CType(MyBase.Tables("SC3070210REQUEST"),SC3070210REQUESTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3070210REQUEST) Is Nothing) Then
                Me.tableSC3070210REQUEST.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "SC3070210DataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/SC3070210DataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableSC3070210DISCOUNTAPPROVAL = New SC3070210DISCOUNTAPPROVALDataTable()
        MyBase.Tables.Add(Me.tableSC3070210DISCOUNTAPPROVAL)
        Me.tableSC3070210CONTRACTAPPROVAL = New SC3070210CONTRACTAPPROVALDataTable()
        MyBase.Tables.Add(Me.tableSC3070210CONTRACTAPPROVAL)
        Me.tableSC3070210VEHICLE = New SC3070210VEHICLEDataTable()
        MyBase.Tables.Add(Me.tableSC3070210VEHICLE)
        Me.tableSC3070210REQUEST = New SC3070210REQUESTDataTable()
        MyBase.Tables.Add(Me.tableSC3070210REQUEST)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3070210DISCOUNTAPPROVAL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3070210CONTRACTAPPROVAL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3070210VEHICLE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3070210REQUEST() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As SC3070210DataSet = New SC3070210DataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3070210DISCOUNTAPPROVALRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3070210DISCOUNTAPPROVALRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3070210CONTRACTAPPROVALRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3070210CONTRACTAPPROVALRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3070210VEHICLERowChangeEventHandler(ByVal sender As Object, ByVal e As SC3070210VEHICLERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3070210REQUESTRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3070210REQUESTRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3070210DISCOUNTAPPROVALDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3070210DISCOUNTAPPROVALRow)
        
        Private columnESTIMATEID As Global.System.Data.DataColumn
        
        Private columnSEQNO As Global.System.Data.DataColumn
        
        Private columnSTAFFACCOUNT As Global.System.Data.DataColumn
        
        Private columnSTAFFNAME As Global.System.Data.DataColumn
        
        Private columnREQUESTPRICE As Global.System.Data.DataColumn
        
        Private columnREASONID As Global.System.Data.DataColumn
        
        Private columnREASON As Global.System.Data.DataColumn
        
        Private columnREQUESTDATE As Global.System.Data.DataColumn
        
        Private columnMANAGERACCOUNT As Global.System.Data.DataColumn
        
        Private columnMANAGERNAME As Global.System.Data.DataColumn
        
        Private columnAPPROVEDPRICE As Global.System.Data.DataColumn
        
        Private columnMANAGERMEMO As Global.System.Data.DataColumn
        
        Private columnAPPROVEDDATE As Global.System.Data.DataColumn
        
        Private columnRESPONSEFLG As Global.System.Data.DataColumn
        
        Private columnNOTICEREQID As Global.System.Data.DataColumn
        
        Private columnCANCELFLG As Global.System.Data.DataColumn
        
        Private columnCANCELDATE As Global.System.Data.DataColumn
        
        Private columnSTAFFMEMO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3070210DISCOUNTAPPROVAL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ESTIMATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SEQNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEQNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STAFFACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTAFFACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STAFFNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTAFFNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REQUESTPRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREQUESTPRICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REASONIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREASONID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REASONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREASON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REQUESTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREQUESTDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MANAGERACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMANAGERACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MANAGERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMANAGERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APPROVEDPRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPPROVEDPRICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MANAGERMEMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMANAGERMEMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APPROVEDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPPROVEDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RESPONSEFLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESPONSEFLG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOTICEREQIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOTICEREQID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CANCELFLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANCELFLG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CANCELDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANCELDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STAFFMEMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTAFFMEMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3070210DISCOUNTAPPROVALRow
            Get
                Return CType(Me.Rows(index),SC3070210DISCOUNTAPPROVALRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3070210DISCOUNTAPPROVALRowChanging As SC3070210DISCOUNTAPPROVALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3070210DISCOUNTAPPROVALRowChanged As SC3070210DISCOUNTAPPROVALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3070210DISCOUNTAPPROVALRowDeleting As SC3070210DISCOUNTAPPROVALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3070210DISCOUNTAPPROVALRowDeleted As SC3070210DISCOUNTAPPROVALRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3070210DISCOUNTAPPROVALRow(ByVal row As SC3070210DISCOUNTAPPROVALRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3070210DISCOUNTAPPROVALRow( _
                    ByVal ESTIMATEID As Decimal,  _
                    ByVal SEQNO As Decimal,  _
                    ByVal STAFFACCOUNT As String,  _
                    ByVal STAFFNAME As String,  _
                    ByVal REQUESTPRICE As Decimal,  _
                    ByVal REASONID As Decimal,  _
                    ByVal REASON As String,  _
                    ByVal REQUESTDATE As Date,  _
                    ByVal MANAGERACCOUNT As String,  _
                    ByVal MANAGERNAME As String,  _
                    ByVal APPROVEDPRICE As Decimal,  _
                    ByVal MANAGERMEMO As String,  _
                    ByVal APPROVEDDATE As Date,  _
                    ByVal RESPONSEFLG As String,  _
                    ByVal NOTICEREQID As Decimal,  _
                    ByVal CANCELFLG As String,  _
                    ByVal CANCELDATE As Date,  _
                    ByVal STAFFMEMO As String) As SC3070210DISCOUNTAPPROVALRow
            Dim rowSC3070210DISCOUNTAPPROVALRow As SC3070210DISCOUNTAPPROVALRow = CType(Me.NewRow,SC3070210DISCOUNTAPPROVALRow)
            Dim columnValuesArray() As Object = New Object() {ESTIMATEID, SEQNO, STAFFACCOUNT, STAFFNAME, REQUESTPRICE, REASONID, REASON, REQUESTDATE, MANAGERACCOUNT, MANAGERNAME, APPROVEDPRICE, MANAGERMEMO, APPROVEDDATE, RESPONSEFLG, NOTICEREQID, CANCELFLG, CANCELDATE, STAFFMEMO}
            rowSC3070210DISCOUNTAPPROVALRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3070210DISCOUNTAPPROVALRow)
            Return rowSC3070210DISCOUNTAPPROVALRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByESTIMATEIDSEQNO(ByVal ESTIMATEID As Decimal, ByVal SEQNO As Decimal) As SC3070210DISCOUNTAPPROVALRow
            Return CType(Me.Rows.Find(New Object() {ESTIMATEID, SEQNO}),SC3070210DISCOUNTAPPROVALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3070210DISCOUNTAPPROVALDataTable = CType(MyBase.Clone,SC3070210DISCOUNTAPPROVALDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3070210DISCOUNTAPPROVALDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnESTIMATEID = MyBase.Columns("ESTIMATEID")
            Me.columnSEQNO = MyBase.Columns("SEQNO")
            Me.columnSTAFFACCOUNT = MyBase.Columns("STAFFACCOUNT")
            Me.columnSTAFFNAME = MyBase.Columns("STAFFNAME")
            Me.columnREQUESTPRICE = MyBase.Columns("REQUESTPRICE")
            Me.columnREASONID = MyBase.Columns("REASONID")
            Me.columnREASON = MyBase.Columns("REASON")
            Me.columnREQUESTDATE = MyBase.Columns("REQUESTDATE")
            Me.columnMANAGERACCOUNT = MyBase.Columns("MANAGERACCOUNT")
            Me.columnMANAGERNAME = MyBase.Columns("MANAGERNAME")
            Me.columnAPPROVEDPRICE = MyBase.Columns("APPROVEDPRICE")
            Me.columnMANAGERMEMO = MyBase.Columns("MANAGERMEMO")
            Me.columnAPPROVEDDATE = MyBase.Columns("APPROVEDDATE")
            Me.columnRESPONSEFLG = MyBase.Columns("RESPONSEFLG")
            Me.columnNOTICEREQID = MyBase.Columns("NOTICEREQID")
            Me.columnCANCELFLG = MyBase.Columns("CANCELFLG")
            Me.columnCANCELDATE = MyBase.Columns("CANCELDATE")
            Me.columnSTAFFMEMO = MyBase.Columns("STAFFMEMO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnESTIMATEID = New Global.System.Data.DataColumn("ESTIMATEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATEID)
            Me.columnSEQNO = New Global.System.Data.DataColumn("SEQNO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEQNO)
            Me.columnSTAFFACCOUNT = New Global.System.Data.DataColumn("STAFFACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTAFFACCOUNT)
            Me.columnSTAFFNAME = New Global.System.Data.DataColumn("STAFFNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTAFFNAME)
            Me.columnREQUESTPRICE = New Global.System.Data.DataColumn("REQUESTPRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREQUESTPRICE)
            Me.columnREASONID = New Global.System.Data.DataColumn("REASONID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREASONID)
            Me.columnREASON = New Global.System.Data.DataColumn("REASON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREASON)
            Me.columnREQUESTDATE = New Global.System.Data.DataColumn("REQUESTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREQUESTDATE)
            Me.columnMANAGERACCOUNT = New Global.System.Data.DataColumn("MANAGERACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMANAGERACCOUNT)
            Me.columnMANAGERNAME = New Global.System.Data.DataColumn("MANAGERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMANAGERNAME)
            Me.columnAPPROVEDPRICE = New Global.System.Data.DataColumn("APPROVEDPRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPPROVEDPRICE)
            Me.columnMANAGERMEMO = New Global.System.Data.DataColumn("MANAGERMEMO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMANAGERMEMO)
            Me.columnAPPROVEDDATE = New Global.System.Data.DataColumn("APPROVEDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPPROVEDDATE)
            Me.columnRESPONSEFLG = New Global.System.Data.DataColumn("RESPONSEFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESPONSEFLG)
            Me.columnNOTICEREQID = New Global.System.Data.DataColumn("NOTICEREQID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOTICEREQID)
            Me.columnCANCELFLG = New Global.System.Data.DataColumn("CANCELFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANCELFLG)
            Me.columnCANCELDATE = New Global.System.Data.DataColumn("CANCELDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANCELDATE)
            Me.columnSTAFFMEMO = New Global.System.Data.DataColumn("STAFFMEMO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTAFFMEMO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("SC3070210DISCOUNTAPPROVAL_PK", New Global.System.Data.DataColumn() {Me.columnESTIMATEID, Me.columnSEQNO}, true))
            Me.columnESTIMATEID.AllowDBNull = false
            Me.columnSEQNO.AllowDBNull = false
            Me.columnSTAFFACCOUNT.AllowDBNull = false
            Me.columnSTAFFNAME.AllowDBNull = false
            Me.columnREQUESTDATE.AllowDBNull = false
            Me.columnRESPONSEFLG.AllowDBNull = false
            Me.columnCANCELFLG.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3070210DISCOUNTAPPROVALRow() As SC3070210DISCOUNTAPPROVALRow
            Return CType(Me.NewRow,SC3070210DISCOUNTAPPROVALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3070210DISCOUNTAPPROVALRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3070210DISCOUNTAPPROVALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3070210DISCOUNTAPPROVALRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3070210DISCOUNTAPPROVALRowChanged(Me, New SC3070210DISCOUNTAPPROVALRowChangeEvent(CType(e.Row,SC3070210DISCOUNTAPPROVALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3070210DISCOUNTAPPROVALRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3070210DISCOUNTAPPROVALRowChanging(Me, New SC3070210DISCOUNTAPPROVALRowChangeEvent(CType(e.Row,SC3070210DISCOUNTAPPROVALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3070210DISCOUNTAPPROVALRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3070210DISCOUNTAPPROVALRowDeleted(Me, New SC3070210DISCOUNTAPPROVALRowChangeEvent(CType(e.Row,SC3070210DISCOUNTAPPROVALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3070210DISCOUNTAPPROVALRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3070210DISCOUNTAPPROVALRowDeleting(Me, New SC3070210DISCOUNTAPPROVALRowChangeEvent(CType(e.Row,SC3070210DISCOUNTAPPROVALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3070210DISCOUNTAPPROVALRow(ByVal row As SC3070210DISCOUNTAPPROVALRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3070210DataSet = New SC3070210DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3070210DISCOUNTAPPROVALDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3070210CONTRACTAPPROVALDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3070210CONTRACTAPPROVALRow)
        
        Private columnESTIMATEID As Global.System.Data.DataColumn
        
        Private columnSEQNO As Global.System.Data.DataColumn
        
        Private columnSTAFFACCOUNT As Global.System.Data.DataColumn
        
        Private columnSTAFFNAME As Global.System.Data.DataColumn
        
        Private columnREQUESTDATE As Global.System.Data.DataColumn
        
        Private columnMANAGERACCOUNT As Global.System.Data.DataColumn
        
        Private columnMANAGERNAME As Global.System.Data.DataColumn
        
        Private columnMANAGERMEMO As Global.System.Data.DataColumn
        
        Private columnAPPROVEDDATE As Global.System.Data.DataColumn
        
        Private columnRESPONSEFLG As Global.System.Data.DataColumn
        
        Private columnNOTICEREQID As Global.System.Data.DataColumn
        
        Private columnCANCELFLG As Global.System.Data.DataColumn
        
        Private columnCANCELDATE As Global.System.Data.DataColumn
        
        Private columnSTAFFMEMO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3070210CONTRACTAPPROVAL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ESTIMATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SEQNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEQNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STAFFACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTAFFACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STAFFNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTAFFNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REQUESTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREQUESTDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MANAGERACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMANAGERACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MANAGERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMANAGERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MANAGERMEMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMANAGERMEMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APPROVEDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPPROVEDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RESPONSEFLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESPONSEFLG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOTICEREQIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOTICEREQID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CANCELFLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANCELFLG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CANCELDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANCELDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STAFFMEMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTAFFMEMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3070210CONTRACTAPPROVALRow
            Get
                Return CType(Me.Rows(index),SC3070210CONTRACTAPPROVALRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3070210CONTRACTAPPROVALRowChanging As SC3070210CONTRACTAPPROVALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3070210CONTRACTAPPROVALRowChanged As SC3070210CONTRACTAPPROVALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3070210CONTRACTAPPROVALRowDeleting As SC3070210CONTRACTAPPROVALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3070210CONTRACTAPPROVALRowDeleted As SC3070210CONTRACTAPPROVALRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3070210CONTRACTAPPROVALRow(ByVal row As SC3070210CONTRACTAPPROVALRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3070210CONTRACTAPPROVALRow(ByVal ESTIMATEID As Decimal, ByVal SEQNO As Decimal, ByVal STAFFACCOUNT As String, ByVal STAFFNAME As String, ByVal REQUESTDATE As Date, ByVal MANAGERACCOUNT As String, ByVal MANAGERNAME As String, ByVal MANAGERMEMO As String, ByVal APPROVEDDATE As Date, ByVal RESPONSEFLG As String, ByVal NOTICEREQID As Decimal, ByVal CANCELFLG As String, ByVal CANCELDATE As Date, ByVal STAFFMEMO As String) As SC3070210CONTRACTAPPROVALRow
            Dim rowSC3070210CONTRACTAPPROVALRow As SC3070210CONTRACTAPPROVALRow = CType(Me.NewRow,SC3070210CONTRACTAPPROVALRow)
            Dim columnValuesArray() As Object = New Object() {ESTIMATEID, SEQNO, STAFFACCOUNT, STAFFNAME, REQUESTDATE, MANAGERACCOUNT, MANAGERNAME, MANAGERMEMO, APPROVEDDATE, RESPONSEFLG, NOTICEREQID, CANCELFLG, CANCELDATE, STAFFMEMO}
            rowSC3070210CONTRACTAPPROVALRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3070210CONTRACTAPPROVALRow)
            Return rowSC3070210CONTRACTAPPROVALRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByESTIMATEIDSEQNO(ByVal ESTIMATEID As Decimal, ByVal SEQNO As Decimal) As SC3070210CONTRACTAPPROVALRow
            Return CType(Me.Rows.Find(New Object() {ESTIMATEID, SEQNO}),SC3070210CONTRACTAPPROVALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3070210CONTRACTAPPROVALDataTable = CType(MyBase.Clone,SC3070210CONTRACTAPPROVALDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3070210CONTRACTAPPROVALDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnESTIMATEID = MyBase.Columns("ESTIMATEID")
            Me.columnSEQNO = MyBase.Columns("SEQNO")
            Me.columnSTAFFACCOUNT = MyBase.Columns("STAFFACCOUNT")
            Me.columnSTAFFNAME = MyBase.Columns("STAFFNAME")
            Me.columnREQUESTDATE = MyBase.Columns("REQUESTDATE")
            Me.columnMANAGERACCOUNT = MyBase.Columns("MANAGERACCOUNT")
            Me.columnMANAGERNAME = MyBase.Columns("MANAGERNAME")
            Me.columnMANAGERMEMO = MyBase.Columns("MANAGERMEMO")
            Me.columnAPPROVEDDATE = MyBase.Columns("APPROVEDDATE")
            Me.columnRESPONSEFLG = MyBase.Columns("RESPONSEFLG")
            Me.columnNOTICEREQID = MyBase.Columns("NOTICEREQID")
            Me.columnCANCELFLG = MyBase.Columns("CANCELFLG")
            Me.columnCANCELDATE = MyBase.Columns("CANCELDATE")
            Me.columnSTAFFMEMO = MyBase.Columns("STAFFMEMO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnESTIMATEID = New Global.System.Data.DataColumn("ESTIMATEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATEID)
            Me.columnSEQNO = New Global.System.Data.DataColumn("SEQNO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEQNO)
            Me.columnSTAFFACCOUNT = New Global.System.Data.DataColumn("STAFFACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTAFFACCOUNT)
            Me.columnSTAFFNAME = New Global.System.Data.DataColumn("STAFFNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTAFFNAME)
            Me.columnREQUESTDATE = New Global.System.Data.DataColumn("REQUESTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREQUESTDATE)
            Me.columnMANAGERACCOUNT = New Global.System.Data.DataColumn("MANAGERACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMANAGERACCOUNT)
            Me.columnMANAGERNAME = New Global.System.Data.DataColumn("MANAGERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMANAGERNAME)
            Me.columnMANAGERMEMO = New Global.System.Data.DataColumn("MANAGERMEMO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMANAGERMEMO)
            Me.columnAPPROVEDDATE = New Global.System.Data.DataColumn("APPROVEDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPPROVEDDATE)
            Me.columnRESPONSEFLG = New Global.System.Data.DataColumn("RESPONSEFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESPONSEFLG)
            Me.columnNOTICEREQID = New Global.System.Data.DataColumn("NOTICEREQID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOTICEREQID)
            Me.columnCANCELFLG = New Global.System.Data.DataColumn("CANCELFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANCELFLG)
            Me.columnCANCELDATE = New Global.System.Data.DataColumn("CANCELDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANCELDATE)
            Me.columnSTAFFMEMO = New Global.System.Data.DataColumn("STAFFMEMO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTAFFMEMO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("SC3070210CONTRACTAPPROVAL_PK", New Global.System.Data.DataColumn() {Me.columnESTIMATEID, Me.columnSEQNO}, true))
            Me.columnESTIMATEID.AllowDBNull = false
            Me.columnSEQNO.AllowDBNull = false
            Me.columnSTAFFACCOUNT.AllowDBNull = false
            Me.columnSTAFFNAME.AllowDBNull = false
            Me.columnREQUESTDATE.AllowDBNull = false
            Me.columnRESPONSEFLG.AllowDBNull = false
            Me.columnCANCELFLG.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3070210CONTRACTAPPROVALRow() As SC3070210CONTRACTAPPROVALRow
            Return CType(Me.NewRow,SC3070210CONTRACTAPPROVALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3070210CONTRACTAPPROVALRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3070210CONTRACTAPPROVALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3070210CONTRACTAPPROVALRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3070210CONTRACTAPPROVALRowChanged(Me, New SC3070210CONTRACTAPPROVALRowChangeEvent(CType(e.Row,SC3070210CONTRACTAPPROVALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3070210CONTRACTAPPROVALRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3070210CONTRACTAPPROVALRowChanging(Me, New SC3070210CONTRACTAPPROVALRowChangeEvent(CType(e.Row,SC3070210CONTRACTAPPROVALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3070210CONTRACTAPPROVALRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3070210CONTRACTAPPROVALRowDeleted(Me, New SC3070210CONTRACTAPPROVALRowChangeEvent(CType(e.Row,SC3070210CONTRACTAPPROVALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3070210CONTRACTAPPROVALRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3070210CONTRACTAPPROVALRowDeleting(Me, New SC3070210CONTRACTAPPROVALRowChangeEvent(CType(e.Row,SC3070210CONTRACTAPPROVALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3070210CONTRACTAPPROVALRow(ByVal row As SC3070210CONTRACTAPPROVALRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3070210DataSet = New SC3070210DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3070210CONTRACTAPPROVALDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3070210VEHICLEDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3070210VEHICLERow)
        
        Private columnDLR_CD As Global.System.Data.DataColumn
        
        Private columnVCL_ID As Global.System.Data.DataColumn
        
        Private columnDELI_DATE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3070210VEHICLE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DLR_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDLR_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VCL_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVCL_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DELI_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDELI_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3070210VEHICLERow
            Get
                Return CType(Me.Rows(index),SC3070210VEHICLERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3070210VEHICLERowChanging As SC3070210VEHICLERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3070210VEHICLERowChanged As SC3070210VEHICLERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3070210VEHICLERowDeleting As SC3070210VEHICLERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3070210VEHICLERowDeleted As SC3070210VEHICLERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3070210VEHICLERow(ByVal row As SC3070210VEHICLERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3070210VEHICLERow(ByVal DLR_CD As String, ByVal VCL_ID As Decimal, ByVal DELI_DATE As Date) As SC3070210VEHICLERow
            Dim rowSC3070210VEHICLERow As SC3070210VEHICLERow = CType(Me.NewRow,SC3070210VEHICLERow)
            Dim columnValuesArray() As Object = New Object() {DLR_CD, VCL_ID, DELI_DATE}
            rowSC3070210VEHICLERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3070210VEHICLERow)
            Return rowSC3070210VEHICLERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByDLR_CDVCL_ID(ByVal DLR_CD As String, ByVal VCL_ID As Decimal) As SC3070210VEHICLERow
            Return CType(Me.Rows.Find(New Object() {DLR_CD, VCL_ID}),SC3070210VEHICLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3070210VEHICLEDataTable = CType(MyBase.Clone,SC3070210VEHICLEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3070210VEHICLEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDLR_CD = MyBase.Columns("DLR_CD")
            Me.columnVCL_ID = MyBase.Columns("VCL_ID")
            Me.columnDELI_DATE = MyBase.Columns("DELI_DATE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDLR_CD = New Global.System.Data.DataColumn("DLR_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDLR_CD)
            Me.columnVCL_ID = New Global.System.Data.DataColumn("VCL_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVCL_ID)
            Me.columnDELI_DATE = New Global.System.Data.DataColumn("DELI_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDELI_DATE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("SC3070210VEHICLEKey_PK", New Global.System.Data.DataColumn() {Me.columnDLR_CD, Me.columnVCL_ID}, true))
            Me.columnDLR_CD.AllowDBNull = false
            Me.columnVCL_ID.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3070210VEHICLERow() As SC3070210VEHICLERow
            Return CType(Me.NewRow,SC3070210VEHICLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3070210VEHICLERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3070210VEHICLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3070210VEHICLERowChangedEvent) Is Nothing) Then
                RaiseEvent SC3070210VEHICLERowChanged(Me, New SC3070210VEHICLERowChangeEvent(CType(e.Row,SC3070210VEHICLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3070210VEHICLERowChangingEvent) Is Nothing) Then
                RaiseEvent SC3070210VEHICLERowChanging(Me, New SC3070210VEHICLERowChangeEvent(CType(e.Row,SC3070210VEHICLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3070210VEHICLERowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3070210VEHICLERowDeleted(Me, New SC3070210VEHICLERowChangeEvent(CType(e.Row,SC3070210VEHICLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3070210VEHICLERowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3070210VEHICLERowDeleting(Me, New SC3070210VEHICLERowChangeEvent(CType(e.Row,SC3070210VEHICLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3070210VEHICLERow(ByVal row As SC3070210VEHICLERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3070210DataSet = New SC3070210DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3070210VEHICLEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3070210REQUESTDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3070210REQUESTRow)
        
        Private columnREQ_ID As Global.System.Data.DataColumn
        
        Private columnREQ_STATUS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3070210REQUEST"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REQ_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREQ_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REQ_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREQ_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3070210REQUESTRow
            Get
                Return CType(Me.Rows(index),SC3070210REQUESTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3070210REQUESTRowChanging As SC3070210REQUESTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3070210REQUESTRowChanged As SC3070210REQUESTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3070210REQUESTRowDeleting As SC3070210REQUESTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3070210REQUESTRowDeleted As SC3070210REQUESTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3070210REQUESTRow(ByVal row As SC3070210REQUESTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3070210REQUESTRow(ByVal REQ_ID As Decimal, ByVal REQ_STATUS As String) As SC3070210REQUESTRow
            Dim rowSC3070210REQUESTRow As SC3070210REQUESTRow = CType(Me.NewRow,SC3070210REQUESTRow)
            Dim columnValuesArray() As Object = New Object() {REQ_ID, REQ_STATUS}
            rowSC3070210REQUESTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3070210REQUESTRow)
            Return rowSC3070210REQUESTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByREQ_ID(ByVal REQ_ID As Decimal) As SC3070210REQUESTRow
            Return CType(Me.Rows.Find(New Object() {REQ_ID}),SC3070210REQUESTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3070210REQUESTDataTable = CType(MyBase.Clone,SC3070210REQUESTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3070210REQUESTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnREQ_ID = MyBase.Columns("REQ_ID")
            Me.columnREQ_STATUS = MyBase.Columns("REQ_STATUS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnREQ_ID = New Global.System.Data.DataColumn("REQ_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREQ_ID)
            Me.columnREQ_STATUS = New Global.System.Data.DataColumn("REQ_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREQ_STATUS)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("SC3070210REQUEST_PK", New Global.System.Data.DataColumn() {Me.columnREQ_ID}, true))
            Me.columnREQ_ID.AllowDBNull = false
            Me.columnREQ_ID.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3070210REQUESTRow() As SC3070210REQUESTRow
            Return CType(Me.NewRow,SC3070210REQUESTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3070210REQUESTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3070210REQUESTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3070210REQUESTRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3070210REQUESTRowChanged(Me, New SC3070210REQUESTRowChangeEvent(CType(e.Row,SC3070210REQUESTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3070210REQUESTRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3070210REQUESTRowChanging(Me, New SC3070210REQUESTRowChangeEvent(CType(e.Row,SC3070210REQUESTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3070210REQUESTRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3070210REQUESTRowDeleted(Me, New SC3070210REQUESTRowChangeEvent(CType(e.Row,SC3070210REQUESTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3070210REQUESTRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3070210REQUESTRowDeleting(Me, New SC3070210REQUESTRowChangeEvent(CType(e.Row,SC3070210REQUESTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3070210REQUESTRow(ByVal row As SC3070210REQUESTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3070210DataSet = New SC3070210DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3070210REQUESTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3070210DISCOUNTAPPROVALRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3070210DISCOUNTAPPROVAL As SC3070210DISCOUNTAPPROVALDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3070210DISCOUNTAPPROVAL = CType(Me.Table,SC3070210DISCOUNTAPPROVALDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ESTIMATEID() As Decimal
            Get
                Return CType(Me(Me.tableSC3070210DISCOUNTAPPROVAL.ESTIMATEIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableSC3070210DISCOUNTAPPROVAL.ESTIMATEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SEQNO() As Decimal
            Get
                Return CType(Me(Me.tableSC3070210DISCOUNTAPPROVAL.SEQNOColumn),Decimal)
            End Get
            Set
                Me(Me.tableSC3070210DISCOUNTAPPROVAL.SEQNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STAFFACCOUNT() As String
            Get
                Return CType(Me(Me.tableSC3070210DISCOUNTAPPROVAL.STAFFACCOUNTColumn),String)
            End Get
            Set
                Me(Me.tableSC3070210DISCOUNTAPPROVAL.STAFFACCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STAFFNAME() As String
            Get
                Return CType(Me(Me.tableSC3070210DISCOUNTAPPROVAL.STAFFNAMEColumn),String)
            End Get
            Set
                Me(Me.tableSC3070210DISCOUNTAPPROVAL.STAFFNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REQUESTPRICE() As Decimal
            Get
                If Me.IsREQUESTPRICENull Then
                    Return 0D
                Else
                    Return CType(Me(Me.tableSC3070210DISCOUNTAPPROVAL.REQUESTPRICEColumn),Decimal)
                End If
            End Get
            Set
                Me(Me.tableSC3070210DISCOUNTAPPROVAL.REQUESTPRICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REASONID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSC3070210DISCOUNTAPPROVAL.REASONIDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3070210DISCOUNTAPPROVAL' にある列 'REASONID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3070210DISCOUNTAPPROVAL.REASONIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REASON() As String
            Get
                If Me.IsREASONNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSC3070210DISCOUNTAPPROVAL.REASONColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSC3070210DISCOUNTAPPROVAL.REASONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REQUESTDATE() As Date
            Get
                Return CType(Me(Me.tableSC3070210DISCOUNTAPPROVAL.REQUESTDATEColumn),Date)
            End Get
            Set
                Me(Me.tableSC3070210DISCOUNTAPPROVAL.REQUESTDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MANAGERACCOUNT() As String
            Get
                If Me.IsMANAGERACCOUNTNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSC3070210DISCOUNTAPPROVAL.MANAGERACCOUNTColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSC3070210DISCOUNTAPPROVAL.MANAGERACCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MANAGERNAME() As String
            Get
                If Me.IsMANAGERNAMENull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSC3070210DISCOUNTAPPROVAL.MANAGERNAMEColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSC3070210DISCOUNTAPPROVAL.MANAGERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APPROVEDPRICE() As Decimal
            Get
                If Me.IsAPPROVEDPRICENull Then
                    Return 0D
                Else
                    Return CType(Me(Me.tableSC3070210DISCOUNTAPPROVAL.APPROVEDPRICEColumn),Decimal)
                End If
            End Get
            Set
                Me(Me.tableSC3070210DISCOUNTAPPROVAL.APPROVEDPRICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MANAGERMEMO() As String
            Get
                If Me.IsMANAGERMEMONull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSC3070210DISCOUNTAPPROVAL.MANAGERMEMOColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSC3070210DISCOUNTAPPROVAL.MANAGERMEMOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APPROVEDDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSC3070210DISCOUNTAPPROVAL.APPROVEDDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3070210DISCOUNTAPPROVAL' にある列 'APPROVEDDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3070210DISCOUNTAPPROVAL.APPROVEDDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RESPONSEFLG() As String
            Get
                Return CType(Me(Me.tableSC3070210DISCOUNTAPPROVAL.RESPONSEFLGColumn),String)
            End Get
            Set
                Me(Me.tableSC3070210DISCOUNTAPPROVAL.RESPONSEFLGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOTICEREQID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSC3070210DISCOUNTAPPROVAL.NOTICEREQIDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3070210DISCOUNTAPPROVAL' にある列 'NOTICEREQID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3070210DISCOUNTAPPROVAL.NOTICEREQIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CANCELFLG() As String
            Get
                Return CType(Me(Me.tableSC3070210DISCOUNTAPPROVAL.CANCELFLGColumn),String)
            End Get
            Set
                Me(Me.tableSC3070210DISCOUNTAPPROVAL.CANCELFLGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CANCELDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSC3070210DISCOUNTAPPROVAL.CANCELDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3070210DISCOUNTAPPROVAL' にある列 'CANCELDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3070210DISCOUNTAPPROVAL.CANCELDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STAFFMEMO() As String
            Get
                If Me.IsSTAFFMEMONull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSC3070210DISCOUNTAPPROVAL.STAFFMEMOColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSC3070210DISCOUNTAPPROVAL.STAFFMEMOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREQUESTPRICENull() As Boolean
            Return Me.IsNull(Me.tableSC3070210DISCOUNTAPPROVAL.REQUESTPRICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREQUESTPRICENull()
            Me(Me.tableSC3070210DISCOUNTAPPROVAL.REQUESTPRICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREASONIDNull() As Boolean
            Return Me.IsNull(Me.tableSC3070210DISCOUNTAPPROVAL.REASONIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREASONIDNull()
            Me(Me.tableSC3070210DISCOUNTAPPROVAL.REASONIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREASONNull() As Boolean
            Return Me.IsNull(Me.tableSC3070210DISCOUNTAPPROVAL.REASONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREASONNull()
            Me(Me.tableSC3070210DISCOUNTAPPROVAL.REASONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMANAGERACCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableSC3070210DISCOUNTAPPROVAL.MANAGERACCOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMANAGERACCOUNTNull()
            Me(Me.tableSC3070210DISCOUNTAPPROVAL.MANAGERACCOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMANAGERNAMENull() As Boolean
            Return Me.IsNull(Me.tableSC3070210DISCOUNTAPPROVAL.MANAGERNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMANAGERNAMENull()
            Me(Me.tableSC3070210DISCOUNTAPPROVAL.MANAGERNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPPROVEDPRICENull() As Boolean
            Return Me.IsNull(Me.tableSC3070210DISCOUNTAPPROVAL.APPROVEDPRICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPPROVEDPRICENull()
            Me(Me.tableSC3070210DISCOUNTAPPROVAL.APPROVEDPRICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMANAGERMEMONull() As Boolean
            Return Me.IsNull(Me.tableSC3070210DISCOUNTAPPROVAL.MANAGERMEMOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMANAGERMEMONull()
            Me(Me.tableSC3070210DISCOUNTAPPROVAL.MANAGERMEMOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPPROVEDDATENull() As Boolean
            Return Me.IsNull(Me.tableSC3070210DISCOUNTAPPROVAL.APPROVEDDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPPROVEDDATENull()
            Me(Me.tableSC3070210DISCOUNTAPPROVAL.APPROVEDDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOTICEREQIDNull() As Boolean
            Return Me.IsNull(Me.tableSC3070210DISCOUNTAPPROVAL.NOTICEREQIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOTICEREQIDNull()
            Me(Me.tableSC3070210DISCOUNTAPPROVAL.NOTICEREQIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCANCELDATENull() As Boolean
            Return Me.IsNull(Me.tableSC3070210DISCOUNTAPPROVAL.CANCELDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCANCELDATENull()
            Me(Me.tableSC3070210DISCOUNTAPPROVAL.CANCELDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTAFFMEMONull() As Boolean
            Return Me.IsNull(Me.tableSC3070210DISCOUNTAPPROVAL.STAFFMEMOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTAFFMEMONull()
            Me(Me.tableSC3070210DISCOUNTAPPROVAL.STAFFMEMOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3070210CONTRACTAPPROVALRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3070210CONTRACTAPPROVAL As SC3070210CONTRACTAPPROVALDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3070210CONTRACTAPPROVAL = CType(Me.Table,SC3070210CONTRACTAPPROVALDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ESTIMATEID() As Decimal
            Get
                Return CType(Me(Me.tableSC3070210CONTRACTAPPROVAL.ESTIMATEIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableSC3070210CONTRACTAPPROVAL.ESTIMATEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SEQNO() As Decimal
            Get
                Return CType(Me(Me.tableSC3070210CONTRACTAPPROVAL.SEQNOColumn),Decimal)
            End Get
            Set
                Me(Me.tableSC3070210CONTRACTAPPROVAL.SEQNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STAFFACCOUNT() As String
            Get
                Return CType(Me(Me.tableSC3070210CONTRACTAPPROVAL.STAFFACCOUNTColumn),String)
            End Get
            Set
                Me(Me.tableSC3070210CONTRACTAPPROVAL.STAFFACCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STAFFNAME() As String
            Get
                Return CType(Me(Me.tableSC3070210CONTRACTAPPROVAL.STAFFNAMEColumn),String)
            End Get
            Set
                Me(Me.tableSC3070210CONTRACTAPPROVAL.STAFFNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REQUESTDATE() As Date
            Get
                Return CType(Me(Me.tableSC3070210CONTRACTAPPROVAL.REQUESTDATEColumn),Date)
            End Get
            Set
                Me(Me.tableSC3070210CONTRACTAPPROVAL.REQUESTDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MANAGERACCOUNT() As String
            Get
                If Me.IsMANAGERACCOUNTNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSC3070210CONTRACTAPPROVAL.MANAGERACCOUNTColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSC3070210CONTRACTAPPROVAL.MANAGERACCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MANAGERNAME() As String
            Get
                If Me.IsMANAGERNAMENull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSC3070210CONTRACTAPPROVAL.MANAGERNAMEColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSC3070210CONTRACTAPPROVAL.MANAGERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MANAGERMEMO() As String
            Get
                If Me.IsMANAGERMEMONull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSC3070210CONTRACTAPPROVAL.MANAGERMEMOColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSC3070210CONTRACTAPPROVAL.MANAGERMEMOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APPROVEDDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSC3070210CONTRACTAPPROVAL.APPROVEDDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3070210CONTRACTAPPROVAL' にある列 'APPROVEDDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3070210CONTRACTAPPROVAL.APPROVEDDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RESPONSEFLG() As String
            Get
                Return CType(Me(Me.tableSC3070210CONTRACTAPPROVAL.RESPONSEFLGColumn),String)
            End Get
            Set
                Me(Me.tableSC3070210CONTRACTAPPROVAL.RESPONSEFLGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOTICEREQID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSC3070210CONTRACTAPPROVAL.NOTICEREQIDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3070210CONTRACTAPPROVAL' にある列 'NOTICEREQID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3070210CONTRACTAPPROVAL.NOTICEREQIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CANCELFLG() As String
            Get
                Return CType(Me(Me.tableSC3070210CONTRACTAPPROVAL.CANCELFLGColumn),String)
            End Get
            Set
                Me(Me.tableSC3070210CONTRACTAPPROVAL.CANCELFLGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CANCELDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSC3070210CONTRACTAPPROVAL.CANCELDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3070210CONTRACTAPPROVAL' にある列 'CANCELDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3070210CONTRACTAPPROVAL.CANCELDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STAFFMEMO() As String
            Get
                If Me.IsSTAFFMEMONull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSC3070210CONTRACTAPPROVAL.STAFFMEMOColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSC3070210CONTRACTAPPROVAL.STAFFMEMOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMANAGERACCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableSC3070210CONTRACTAPPROVAL.MANAGERACCOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMANAGERACCOUNTNull()
            Me(Me.tableSC3070210CONTRACTAPPROVAL.MANAGERACCOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMANAGERNAMENull() As Boolean
            Return Me.IsNull(Me.tableSC3070210CONTRACTAPPROVAL.MANAGERNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMANAGERNAMENull()
            Me(Me.tableSC3070210CONTRACTAPPROVAL.MANAGERNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMANAGERMEMONull() As Boolean
            Return Me.IsNull(Me.tableSC3070210CONTRACTAPPROVAL.MANAGERMEMOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMANAGERMEMONull()
            Me(Me.tableSC3070210CONTRACTAPPROVAL.MANAGERMEMOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPPROVEDDATENull() As Boolean
            Return Me.IsNull(Me.tableSC3070210CONTRACTAPPROVAL.APPROVEDDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPPROVEDDATENull()
            Me(Me.tableSC3070210CONTRACTAPPROVAL.APPROVEDDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOTICEREQIDNull() As Boolean
            Return Me.IsNull(Me.tableSC3070210CONTRACTAPPROVAL.NOTICEREQIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOTICEREQIDNull()
            Me(Me.tableSC3070210CONTRACTAPPROVAL.NOTICEREQIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCANCELDATENull() As Boolean
            Return Me.IsNull(Me.tableSC3070210CONTRACTAPPROVAL.CANCELDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCANCELDATENull()
            Me(Me.tableSC3070210CONTRACTAPPROVAL.CANCELDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTAFFMEMONull() As Boolean
            Return Me.IsNull(Me.tableSC3070210CONTRACTAPPROVAL.STAFFMEMOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTAFFMEMONull()
            Me(Me.tableSC3070210CONTRACTAPPROVAL.STAFFMEMOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3070210VEHICLERow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3070210VEHICLE As SC3070210VEHICLEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3070210VEHICLE = CType(Me.Table,SC3070210VEHICLEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DLR_CD() As String
            Get
                Return CType(Me(Me.tableSC3070210VEHICLE.DLR_CDColumn),String)
            End Get
            Set
                Me(Me.tableSC3070210VEHICLE.DLR_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VCL_ID() As Decimal
            Get
                Return CType(Me(Me.tableSC3070210VEHICLE.VCL_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableSC3070210VEHICLE.VCL_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DELI_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSC3070210VEHICLE.DELI_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3070210VEHICLE' にある列 'DELI_DATE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3070210VEHICLE.DELI_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDELI_DATENull() As Boolean
            Return Me.IsNull(Me.tableSC3070210VEHICLE.DELI_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDELI_DATENull()
            Me(Me.tableSC3070210VEHICLE.DELI_DATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3070210REQUESTRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3070210REQUEST As SC3070210REQUESTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3070210REQUEST = CType(Me.Table,SC3070210REQUESTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REQ_ID() As Decimal
            Get
                Return CType(Me(Me.tableSC3070210REQUEST.REQ_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableSC3070210REQUEST.REQ_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REQ_STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3070210REQUEST.REQ_STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3070210REQUEST' にある列 'REQ_STATUS' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3070210REQUEST.REQ_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREQ_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableSC3070210REQUEST.REQ_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREQ_STATUSNull()
            Me(Me.tableSC3070210REQUEST.REQ_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3070210DISCOUNTAPPROVALRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3070210DISCOUNTAPPROVALRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3070210DISCOUNTAPPROVALRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3070210DISCOUNTAPPROVALRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3070210CONTRACTAPPROVALRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3070210CONTRACTAPPROVALRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3070210CONTRACTAPPROVALRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3070210CONTRACTAPPROVALRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3070210VEHICLERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3070210VEHICLERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3070210VEHICLERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3070210VEHICLERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3070210REQUESTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3070210REQUESTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3070210REQUESTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3070210REQUESTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
