'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:4.0.30319.239
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System.Security.Permissions
Imports System.Runtime.Serialization

'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(), _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
 Global.System.ComponentModel.ToolboxItem(True), _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), _
 Global.System.Xml.Serialization.XmlRootAttribute("IC3070201DataSet"), _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")> _
Partial Public Class IC3070201DataSet
    Inherits Global.System.Data.DataSet

    <SecurityPermissionAttribute(SecurityAction.Demand, _
     SerializationFormatter:=True)> _
    Public Overrides Sub GetObjectData( _
           info As SerializationInfo, context As StreamingContext)
        If Not (info Is Nothing) Then

            info.AddValue("derivedValue", True)
            MyBase.GetObjectData(info, context)
        End If

    End Sub

    Private tableIC3070201EstimationInfo As IC3070201EstimationInfoDataTable

    Private tableIC3070201VclOptionInfo As IC3070201VclOptionInfoDataTable

    Private tableIC3070201CustomerInfo As IC3070201CustomerInfoDataTable

    Private tableIC3070201ChargeInfo As IC3070201ChargeInfoDataTable

    Private tableIC3070201PaymentInfo As IC3070201PaymentInfoDataTable

    Private tableIC3070201TradeincarInfo As IC3070201TradeincarInfoDataTable

    Private tableIC3070201EstInsuranceInfo As IC3070201EstInsuranceInfoDataTable

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("IC3070201EstimationInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070201EstimationInfoDataTable(ds.Tables("IC3070201EstimationInfo")))
            End If
            If (Not (ds.Tables("IC3070201VclOptionInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070201VclOptionInfoDataTable(ds.Tables("IC3070201VclOptionInfo")))
            End If
            If (Not (ds.Tables("IC3070201CustomerInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070201CustomerInfoDataTable(ds.Tables("IC3070201CustomerInfo")))
            End If
            If (Not (ds.Tables("IC3070201ChargeInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070201ChargeInfoDataTable(ds.Tables("IC3070201ChargeInfo")))
            End If
            If (Not (ds.Tables("IC3070201PaymentInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070201PaymentInfoDataTable(ds.Tables("IC3070201PaymentInfo")))
            End If
            If (Not (ds.Tables("IC3070201TradeincarInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070201TradeincarInfoDataTable(ds.Tables("IC3070201TradeincarInfo")))
            End If
            If (Not (ds.Tables("IC3070201EstInsuranceInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070201EstInsuranceInfoDataTable(ds.Tables("IC3070201EstInsuranceInfo")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property IC3070201EstimationInfo() As IC3070201EstimationInfoDataTable
        Get
            Return Me.tableIC3070201EstimationInfo
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property IC3070201VclOptionInfo() As IC3070201VclOptionInfoDataTable
        Get
            Return Me.tableIC3070201VclOptionInfo
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property IC3070201CustomerInfo() As IC3070201CustomerInfoDataTable
        Get
            Return Me.tableIC3070201CustomerInfo
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property IC3070201ChargeInfo() As IC3070201ChargeInfoDataTable
        Get
            Return Me.tableIC3070201ChargeInfo
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property IC3070201PaymentInfo() As IC3070201PaymentInfoDataTable
        Get
            Return Me.tableIC3070201PaymentInfo
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property IC3070201TradeincarInfo() As IC3070201TradeincarInfoDataTable
        Get
            Return Me.tableIC3070201TradeincarInfo
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property IC3070201EstInsuranceInfo() As IC3070201EstInsuranceInfoDataTable
        Get
            Return Me.tableIC3070201EstInsuranceInfo
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As IC3070201DataSet = CType(MyBase.Clone, IC3070201DataSet)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("IC3070201EstimationInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070201EstimationInfoDataTable(ds.Tables("IC3070201EstimationInfo")))
            End If
            If (Not (ds.Tables("IC3070201VclOptionInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070201VclOptionInfoDataTable(ds.Tables("IC3070201VclOptionInfo")))
            End If
            If (Not (ds.Tables("IC3070201CustomerInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070201CustomerInfoDataTable(ds.Tables("IC3070201CustomerInfo")))
            End If
            If (Not (ds.Tables("IC3070201ChargeInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070201ChargeInfoDataTable(ds.Tables("IC3070201ChargeInfo")))
            End If
            If (Not (ds.Tables("IC3070201PaymentInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070201PaymentInfoDataTable(ds.Tables("IC3070201PaymentInfo")))
            End If
            If (Not (ds.Tables("IC3070201TradeincarInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070201TradeincarInfoDataTable(ds.Tables("IC3070201TradeincarInfo")))
            End If
            If (Not (ds.Tables("IC3070201EstInsuranceInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070201EstInsuranceInfoDataTable(ds.Tables("IC3070201EstInsuranceInfo")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableIC3070201EstimationInfo = CType(MyBase.Tables("IC3070201EstimationInfo"), IC3070201EstimationInfoDataTable)
        If (initTable = True) Then
            If (Not (Me.tableIC3070201EstimationInfo) Is Nothing) Then
                Me.tableIC3070201EstimationInfo.InitVars()
            End If
        End If
        Me.tableIC3070201VclOptionInfo = CType(MyBase.Tables("IC3070201VclOptionInfo"), IC3070201VclOptionInfoDataTable)
        If (initTable = True) Then
            If (Not (Me.tableIC3070201VclOptionInfo) Is Nothing) Then
                Me.tableIC3070201VclOptionInfo.InitVars()
            End If
        End If
        Me.tableIC3070201CustomerInfo = CType(MyBase.Tables("IC3070201CustomerInfo"), IC3070201CustomerInfoDataTable)
        If (initTable = True) Then
            If (Not (Me.tableIC3070201CustomerInfo) Is Nothing) Then
                Me.tableIC3070201CustomerInfo.InitVars()
            End If
        End If
        Me.tableIC3070201ChargeInfo = CType(MyBase.Tables("IC3070201ChargeInfo"), IC3070201ChargeInfoDataTable)
        If (initTable = True) Then
            If (Not (Me.tableIC3070201ChargeInfo) Is Nothing) Then
                Me.tableIC3070201ChargeInfo.InitVars()
            End If
        End If
        Me.tableIC3070201PaymentInfo = CType(MyBase.Tables("IC3070201PaymentInfo"), IC3070201PaymentInfoDataTable)
        If (initTable = True) Then
            If (Not (Me.tableIC3070201PaymentInfo) Is Nothing) Then
                Me.tableIC3070201PaymentInfo.InitVars()
            End If
        End If
        Me.tableIC3070201TradeincarInfo = CType(MyBase.Tables("IC3070201TradeincarInfo"), IC3070201TradeincarInfoDataTable)
        If (initTable = True) Then
            If (Not (Me.tableIC3070201TradeincarInfo) Is Nothing) Then
                Me.tableIC3070201TradeincarInfo.InitVars()
            End If
        End If
        Me.tableIC3070201EstInsuranceInfo = CType(MyBase.Tables("IC3070201EstInsuranceInfo"), IC3070201EstInsuranceInfoDataTable)
        If (initTable = True) Then
            If (Not (Me.tableIC3070201EstInsuranceInfo) Is Nothing) Then
                Me.tableIC3070201EstInsuranceInfo.InitVars()
            End If
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
        Me.DataSetName = "IC3070201DataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/IC3070201DataSet.xsd"
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableIC3070201EstimationInfo = New IC3070201EstimationInfoDataTable()
        MyBase.Tables.Add(Me.tableIC3070201EstimationInfo)
        Me.tableIC3070201VclOptionInfo = New IC3070201VclOptionInfoDataTable()
        MyBase.Tables.Add(Me.tableIC3070201VclOptionInfo)
        Me.tableIC3070201CustomerInfo = New IC3070201CustomerInfoDataTable()
        MyBase.Tables.Add(Me.tableIC3070201CustomerInfo)
        Me.tableIC3070201ChargeInfo = New IC3070201ChargeInfoDataTable()
        MyBase.Tables.Add(Me.tableIC3070201ChargeInfo)
        Me.tableIC3070201PaymentInfo = New IC3070201PaymentInfoDataTable()
        MyBase.Tables.Add(Me.tableIC3070201PaymentInfo)
        Me.tableIC3070201TradeincarInfo = New IC3070201TradeincarInfoDataTable()
        MyBase.Tables.Add(Me.tableIC3070201TradeincarInfo)
        Me.tableIC3070201EstInsuranceInfo = New IC3070201EstInsuranceInfoDataTable()
        MyBase.Tables.Add(Me.tableIC3070201EstInsuranceInfo)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeIC3070201EstimationInfo() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeIC3070201VclOptionInfo() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeIC3070201CustomerInfo() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeIC3070201ChargeInfo() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeIC3070201PaymentInfo() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeIC3070201TradeincarInfo() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeIC3070201EstInsuranceInfo() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As IC3070201DataSet = New IC3070201DataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub IC3070201EstimationInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As IC3070201EstimationInfoRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub IC3070201VclOptionInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As IC3070201VclOptionInfoRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub IC3070201CustomerInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As IC3070201CustomerInfoRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub IC3070201ChargeInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As IC3070201ChargeInfoRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub IC3070201PaymentInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As IC3070201PaymentInfoRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub IC3070201TradeincarInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As IC3070201TradeincarInfoRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub IC3070201EstInsuranceInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As IC3070201EstInsuranceInfoRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class IC3070201EstimationInfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of IC3070201EstimationInfoRow)

        <SecurityPermissionAttribute(SecurityAction.Demand, _
         SerializationFormatter:=True)> _
        Public Overrides Sub GetObjectData( _
           info As SerializationInfo, context As StreamingContext)
            If Not (info Is Nothing) Then

                info.AddValue("derivedValue", True)
                MyBase.GetObjectData(info, context)
            End If

        End Sub

        Private columnESTIMATEID As Global.System.Data.DataColumn

        Private columnDLRCD As Global.System.Data.DataColumn

        Private columnSTRCD As Global.System.Data.DataColumn

        Private columnFLLWUPBOX_SEQNO As Global.System.Data.DataColumn

        Private columnCNT_STRCD As Global.System.Data.DataColumn

        Private columnCNT_STAFF As Global.System.Data.DataColumn

        Private columnCSTKIND As Global.System.Data.DataColumn

        Private columnCUSTOMERCLASS As Global.System.Data.DataColumn

        Private columnCRCUSTID As Global.System.Data.DataColumn

        Private columnCUSTID As Global.System.Data.DataColumn

        Private columnDELIDATE As Global.System.Data.DataColumn

        Private columnDISCOUNTPRICE As Global.System.Data.DataColumn

        Private columnMEMO As Global.System.Data.DataColumn

        Private columnESTPRINTDATE As Global.System.Data.DataColumn

        Private columnCONTRACTNO As Global.System.Data.DataColumn

        Private columnCONTPRINTFLG As Global.System.Data.DataColumn

        Private columnCONTRACTFLG As Global.System.Data.DataColumn

        Private columnCONTRACTDATE As Global.System.Data.DataColumn

        Private columnDELFLG As Global.System.Data.DataColumn

        Private columnTCVVERSION As Global.System.Data.DataColumn

        Private columnSERIESCD As Global.System.Data.DataColumn

        Private columnSERIESNM As Global.System.Data.DataColumn

        Private columnMODELCD As Global.System.Data.DataColumn

        Private columnMODELNM As Global.System.Data.DataColumn

        Private columnBODYTYPE As Global.System.Data.DataColumn

        Private columnDRIVESYSTEM As Global.System.Data.DataColumn

        Private columnDISPLACEMENT As Global.System.Data.DataColumn

        Private columnTRANSMISSION As Global.System.Data.DataColumn

        Private columnSUFFIXCD As Global.System.Data.DataColumn

        Private columnEXTCOLORCD As Global.System.Data.DataColumn

        Private columnEXTCOLOR As Global.System.Data.DataColumn

        Private columnEXTAMOUNT As Global.System.Data.DataColumn

        Private columnINTCOLORCD As Global.System.Data.DataColumn

        Private columnINTCOLOR As Global.System.Data.DataColumn

        Private columnINTAMOUNT As Global.System.Data.DataColumn

        Private columnMODELNUMBER As Global.System.Data.DataColumn

        Private columnBASEPRICE As Global.System.Data.DataColumn

        Private columnCREATEDATE As Global.System.Data.DataColumn

        Private columnCREATEACCOUNT As Global.System.Data.DataColumn

        Private columnUPDATEACCOUNT As Global.System.Data.DataColumn

        Private columnCREATEID As Global.System.Data.DataColumn

        Private columnUPDATEID As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "IC3070201EstimationInfo"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESTIMATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATEID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DLRCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDLRCD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property STRCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTRCD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FLLWUPBOX_SEQNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFLLWUPBOX_SEQNO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CNT_STRCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCNT_STRCD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CNT_STAFFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCNT_STAFF
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CSTKINDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCSTKIND
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CUSTOMERCLASSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTOMERCLASS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CRCUSTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCRCUSTID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CUSTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DELIDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDELIDATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DISCOUNTPRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISCOUNTPRICE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESTPRINTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTPRINTDATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONTRACTNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTRACTNO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONTPRINTFLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTPRINTFLG
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONTRACTFLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTRACTFLG
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONTRACTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTRACTDATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DELFLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDELFLG
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TCVVERSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTCVVERSION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SERIESCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIESCD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SERIESNMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIESNM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MODELCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODELCD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MODELNMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODELNM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BODYTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBODYTYPE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DRIVESYSTEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDRIVESYSTEM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DISPLACEMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISPLACEMENT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TRANSMISSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSMISSION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SUFFIXCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUFFIXCD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EXTCOLORCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTCOLORCD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EXTCOLORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTCOLOR
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EXTAMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTAMOUNT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property INTCOLORCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINTCOLORCD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property INTCOLORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINTCOLOR
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property INTAMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINTAMOUNT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MODELNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODELNUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BASEPRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASEPRICE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CREATEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CREATEACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEACCOUNT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property UPDATEACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEACCOUNT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CREATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property UPDATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As IC3070201EstimationInfoRow
            Get
                Return CType(Me.Rows(index), IC3070201EstimationInfoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201EstimationInfoRowChanging As IC3070201EstimationInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201EstimationInfoRowChanged As IC3070201EstimationInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201EstimationInfoRowDeleting As IC3070201EstimationInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201EstimationInfoRowDeleted As IC3070201EstimationInfoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddIC3070201EstimationInfoRow(ByVal row As IC3070201EstimationInfoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddIC3070201EstimationInfoRow( _
                    ByVal ESTIMATEID As Long, _
                    ByVal DLRCD As String, _
                    ByVal STRCD As String, _
                    ByVal FLLWUPBOX_SEQNO As Long, _
                    ByVal CNT_STRCD As String, _
                    ByVal CNT_STAFF As String, _
                    ByVal CSTKIND As String, _
                    ByVal CUSTOMERCLASS As String, _
                    ByVal CRCUSTID As String, _
                    ByVal CUSTID As String, _
                    ByVal DELIDATE As Date, _
                    ByVal DISCOUNTPRICE As Double, _
                    ByVal MEMO As String, _
                    ByVal ESTPRINTDATE As Date, _
                    ByVal CONTRACTNO As String, _
                    ByVal CONTPRINTFLG As String, _
                    ByVal CONTRACTFLG As String, _
                    ByVal CONTRACTDATE As Date, _
                    ByVal DELFLG As String, _
                    ByVal TCVVERSION As String, _
                    ByVal SERIESCD As String, _
                    ByVal SERIESNM As String, _
                    ByVal MODELCD As String, _
                    ByVal MODELNM As String, _
                    ByVal BODYTYPE As String, _
                    ByVal DRIVESYSTEM As String, _
                    ByVal DISPLACEMENT As String, _
                    ByVal TRANSMISSION As String, _
                    ByVal SUFFIXCD As String, _
                    ByVal EXTCOLORCD As String, _
                    ByVal EXTCOLOR As String, _
                    ByVal EXTAMOUNT As Double, _
                    ByVal INTCOLORCD As String, _
                    ByVal INTCOLOR As String, _
                    ByVal INTAMOUNT As Double, _
                    ByVal MODELNUMBER As String, _
                    ByVal BASEPRICE As Double, _
                    ByVal CREATEDATE As Date, _
                    ByVal CREATEACCOUNT As String, _
                    ByVal UPDATEACCOUNT As String, _
                    ByVal CREATEID As String, _
                    ByVal UPDATEID As String) As IC3070201EstimationInfoRow
            Dim rowIC3070201EstimationInfoRow As IC3070201EstimationInfoRow = CType(Me.NewRow, IC3070201EstimationInfoRow)
            Dim columnValuesArray() As Object = New Object() {ESTIMATEID, DLRCD, STRCD, FLLWUPBOX_SEQNO, CNT_STRCD, CNT_STAFF, CSTKIND, CUSTOMERCLASS, CRCUSTID, CUSTID, DELIDATE, DISCOUNTPRICE, MEMO, ESTPRINTDATE, CONTRACTNO, CONTPRINTFLG, CONTRACTFLG, CONTRACTDATE, DELFLG, TCVVERSION, SERIESCD, SERIESNM, MODELCD, MODELNM, BODYTYPE, DRIVESYSTEM, DISPLACEMENT, TRANSMISSION, SUFFIXCD, EXTCOLORCD, EXTCOLOR, EXTAMOUNT, INTCOLORCD, INTCOLOR, INTAMOUNT, MODELNUMBER, BASEPRICE, CREATEDATE, CREATEACCOUNT, UPDATEACCOUNT, CREATEID, UPDATEID}
            rowIC3070201EstimationInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIC3070201EstimationInfoRow)
            Return rowIC3070201EstimationInfoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IC3070201EstimationInfoDataTable = CType(MyBase.Clone, IC3070201EstimationInfoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IC3070201EstimationInfoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnESTIMATEID = MyBase.Columns("ESTIMATEID")
            Me.columnDLRCD = MyBase.Columns("DLRCD")
            Me.columnSTRCD = MyBase.Columns("STRCD")
            Me.columnFLLWUPBOX_SEQNO = MyBase.Columns("FLLWUPBOX_SEQNO")
            Me.columnCNT_STRCD = MyBase.Columns("CNT_STRCD")
            Me.columnCNT_STAFF = MyBase.Columns("CNT_STAFF")
            Me.columnCSTKIND = MyBase.Columns("CSTKIND")
            Me.columnCUSTOMERCLASS = MyBase.Columns("CUSTOMERCLASS")
            Me.columnCRCUSTID = MyBase.Columns("CRCUSTID")
            Me.columnCUSTID = MyBase.Columns("CUSTID")
            Me.columnDELIDATE = MyBase.Columns("DELIDATE")
            Me.columnDISCOUNTPRICE = MyBase.Columns("DISCOUNTPRICE")
            Me.columnMEMO = MyBase.Columns("MEMO")
            Me.columnESTPRINTDATE = MyBase.Columns("ESTPRINTDATE")
            Me.columnCONTRACTNO = MyBase.Columns("CONTRACTNO")
            Me.columnCONTPRINTFLG = MyBase.Columns("CONTPRINTFLG")
            Me.columnCONTRACTFLG = MyBase.Columns("CONTRACTFLG")
            Me.columnCONTRACTDATE = MyBase.Columns("CONTRACTDATE")
            Me.columnDELFLG = MyBase.Columns("DELFLG")
            Me.columnTCVVERSION = MyBase.Columns("TCVVERSION")
            Me.columnSERIESCD = MyBase.Columns("SERIESCD")
            Me.columnSERIESNM = MyBase.Columns("SERIESNM")
            Me.columnMODELCD = MyBase.Columns("MODELCD")
            Me.columnMODELNM = MyBase.Columns("MODELNM")
            Me.columnBODYTYPE = MyBase.Columns("BODYTYPE")
            Me.columnDRIVESYSTEM = MyBase.Columns("DRIVESYSTEM")
            Me.columnDISPLACEMENT = MyBase.Columns("DISPLACEMENT")
            Me.columnTRANSMISSION = MyBase.Columns("TRANSMISSION")
            Me.columnSUFFIXCD = MyBase.Columns("SUFFIXCD")
            Me.columnEXTCOLORCD = MyBase.Columns("EXTCOLORCD")
            Me.columnEXTCOLOR = MyBase.Columns("EXTCOLOR")
            Me.columnEXTAMOUNT = MyBase.Columns("EXTAMOUNT")
            Me.columnINTCOLORCD = MyBase.Columns("INTCOLORCD")
            Me.columnINTCOLOR = MyBase.Columns("INTCOLOR")
            Me.columnINTAMOUNT = MyBase.Columns("INTAMOUNT")
            Me.columnMODELNUMBER = MyBase.Columns("MODELNUMBER")
            Me.columnBASEPRICE = MyBase.Columns("BASEPRICE")
            Me.columnCREATEDATE = MyBase.Columns("CREATEDATE")
            Me.columnCREATEACCOUNT = MyBase.Columns("CREATEACCOUNT")
            Me.columnUPDATEACCOUNT = MyBase.Columns("UPDATEACCOUNT")
            Me.columnCREATEID = MyBase.Columns("CREATEID")
            Me.columnUPDATEID = MyBase.Columns("UPDATEID")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnESTIMATEID = New Global.System.Data.DataColumn("ESTIMATEID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATEID)
            Me.columnDLRCD = New Global.System.Data.DataColumn("DLRCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDLRCD)
            Me.columnSTRCD = New Global.System.Data.DataColumn("STRCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTRCD)
            Me.columnFLLWUPBOX_SEQNO = New Global.System.Data.DataColumn("FLLWUPBOX_SEQNO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFLLWUPBOX_SEQNO)
            Me.columnCNT_STRCD = New Global.System.Data.DataColumn("CNT_STRCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCNT_STRCD)
            Me.columnCNT_STAFF = New Global.System.Data.DataColumn("CNT_STAFF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCNT_STAFF)
            Me.columnCSTKIND = New Global.System.Data.DataColumn("CSTKIND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCSTKIND)
            Me.columnCUSTOMERCLASS = New Global.System.Data.DataColumn("CUSTOMERCLASS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTOMERCLASS)
            Me.columnCRCUSTID = New Global.System.Data.DataColumn("CRCUSTID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCRCUSTID)
            Me.columnCUSTID = New Global.System.Data.DataColumn("CUSTID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTID)
            Me.columnDELIDATE = New Global.System.Data.DataColumn("DELIDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDELIDATE)
            Me.columnDISCOUNTPRICE = New Global.System.Data.DataColumn("DISCOUNTPRICE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISCOUNTPRICE)
            Me.columnMEMO = New Global.System.Data.DataColumn("MEMO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMO)
            Me.columnESTPRINTDATE = New Global.System.Data.DataColumn("ESTPRINTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTPRINTDATE)
            Me.columnCONTRACTNO = New Global.System.Data.DataColumn("CONTRACTNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTRACTNO)
            Me.columnCONTPRINTFLG = New Global.System.Data.DataColumn("CONTPRINTFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTPRINTFLG)
            Me.columnCONTRACTFLG = New Global.System.Data.DataColumn("CONTRACTFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTRACTFLG)
            Me.columnCONTRACTDATE = New Global.System.Data.DataColumn("CONTRACTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTRACTDATE)
            Me.columnDELFLG = New Global.System.Data.DataColumn("DELFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDELFLG)
            Me.columnTCVVERSION = New Global.System.Data.DataColumn("TCVVERSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTCVVERSION)
            Me.columnSERIESCD = New Global.System.Data.DataColumn("SERIESCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIESCD)
            Me.columnSERIESNM = New Global.System.Data.DataColumn("SERIESNM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIESNM)
            Me.columnMODELCD = New Global.System.Data.DataColumn("MODELCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODELCD)
            Me.columnMODELNM = New Global.System.Data.DataColumn("MODELNM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODELNM)
            Me.columnBODYTYPE = New Global.System.Data.DataColumn("BODYTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBODYTYPE)
            Me.columnDRIVESYSTEM = New Global.System.Data.DataColumn("DRIVESYSTEM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDRIVESYSTEM)
            Me.columnDISPLACEMENT = New Global.System.Data.DataColumn("DISPLACEMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISPLACEMENT)
            Me.columnTRANSMISSION = New Global.System.Data.DataColumn("TRANSMISSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSMISSION)
            Me.columnSUFFIXCD = New Global.System.Data.DataColumn("SUFFIXCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUFFIXCD)
            Me.columnEXTCOLORCD = New Global.System.Data.DataColumn("EXTCOLORCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTCOLORCD)
            Me.columnEXTCOLOR = New Global.System.Data.DataColumn("EXTCOLOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTCOLOR)
            Me.columnEXTAMOUNT = New Global.System.Data.DataColumn("EXTAMOUNT", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTAMOUNT)
            Me.columnINTCOLORCD = New Global.System.Data.DataColumn("INTCOLORCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINTCOLORCD)
            Me.columnINTCOLOR = New Global.System.Data.DataColumn("INTCOLOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINTCOLOR)
            Me.columnINTAMOUNT = New Global.System.Data.DataColumn("INTAMOUNT", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINTAMOUNT)
            Me.columnMODELNUMBER = New Global.System.Data.DataColumn("MODELNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODELNUMBER)
            Me.columnBASEPRICE = New Global.System.Data.DataColumn("BASEPRICE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASEPRICE)
            Me.columnCREATEDATE = New Global.System.Data.DataColumn("CREATEDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDATE)
            Me.columnCREATEACCOUNT = New Global.System.Data.DataColumn("CREATEACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEACCOUNT)
            Me.columnUPDATEACCOUNT = New Global.System.Data.DataColumn("UPDATEACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEACCOUNT)
            Me.columnCREATEID = New Global.System.Data.DataColumn("CREATEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEID)
            Me.columnUPDATEID = New Global.System.Data.DataColumn("UPDATEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEID)
            Me.columnESTIMATEID.AllowDBNull = False
            Me.columnDLRCD.AllowDBNull = False
            Me.columnDLRCD.MaxLength = 5
            Me.columnSTRCD.MaxLength = 3
            Me.columnCNT_STRCD.MaxLength = 3
            Me.columnCNT_STAFF.MaxLength = 20
            Me.columnCSTKIND.MaxLength = 1
            Me.columnCUSTOMERCLASS.MaxLength = 1
            Me.columnCRCUSTID.MaxLength = 19
            Me.columnCUSTID.MaxLength = 18
            Me.columnMEMO.MaxLength = 1024
            Me.columnCONTRACTNO.MaxLength = 13
            Me.columnCONTPRINTFLG.AllowDBNull = False
            Me.columnCONTPRINTFLG.MaxLength = 1
            Me.columnCONTRACTFLG.AllowDBNull = False
            Me.columnCONTRACTFLG.MaxLength = 1
            Me.columnDELFLG.AllowDBNull = False
            Me.columnDELFLG.MaxLength = 1
            Me.columnTCVVERSION.AllowDBNull = False
            Me.columnTCVVERSION.MaxLength = 6
            Me.columnSERIESCD.AllowDBNull = False
            Me.columnSERIESCD.MaxLength = 64
            Me.columnSERIESNM.AllowDBNull = False
            Me.columnSERIESNM.MaxLength = 128
            Me.columnMODELCD.AllowDBNull = False
            Me.columnMODELCD.MaxLength = 32
            Me.columnMODELNM.AllowDBNull = False
            Me.columnMODELNM.MaxLength = 128
            Me.columnBODYTYPE.AllowDBNull = False
            Me.columnBODYTYPE.MaxLength = 64
            Me.columnDRIVESYSTEM.AllowDBNull = False
            Me.columnDRIVESYSTEM.MaxLength = 64
            Me.columnDISPLACEMENT.AllowDBNull = False
            Me.columnDISPLACEMENT.MaxLength = 64
            Me.columnTRANSMISSION.AllowDBNull = False
            Me.columnTRANSMISSION.MaxLength = 64
            Me.columnSUFFIXCD.AllowDBNull = False
            Me.columnSUFFIXCD.MaxLength = 32
            Me.columnEXTCOLORCD.AllowDBNull = False
            Me.columnEXTCOLORCD.MaxLength = 6
            Me.columnEXTCOLOR.AllowDBNull = False
            Me.columnEXTCOLOR.MaxLength = 50
            Me.columnEXTAMOUNT.AllowDBNull = False
            Me.columnINTCOLORCD.AllowDBNull = False
            Me.columnINTCOLORCD.MaxLength = 7
            Me.columnINTCOLOR.AllowDBNull = False
            Me.columnINTCOLOR.MaxLength = 50
            Me.columnINTAMOUNT.AllowDBNull = False
            Me.columnMODELNUMBER.AllowDBNull = False
            Me.columnMODELNUMBER.MaxLength = 32
            Me.columnBASEPRICE.AllowDBNull = False
            Me.columnCREATEDATE.AllowDBNull = False
            Me.columnCREATEACCOUNT.AllowDBNull = False
            Me.columnCREATEACCOUNT.MaxLength = 20
            Me.columnUPDATEACCOUNT.AllowDBNull = False
            Me.columnUPDATEACCOUNT.MaxLength = 20
            Me.columnCREATEID.AllowDBNull = False
            Me.columnCREATEID.MaxLength = 16
            Me.columnUPDATEID.AllowDBNull = False
            Me.columnUPDATEID.MaxLength = 16
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewIC3070201EstimationInfoRow() As IC3070201EstimationInfoRow
            Return CType(Me.NewRow, IC3070201EstimationInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IC3070201EstimationInfoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IC3070201EstimationInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IC3070201EstimationInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent IC3070201EstimationInfoRowChanged(Me, New IC3070201EstimationInfoRowChangeEvent(CType(e.Row, IC3070201EstimationInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IC3070201EstimationInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent IC3070201EstimationInfoRowChanging(Me, New IC3070201EstimationInfoRowChangeEvent(CType(e.Row, IC3070201EstimationInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IC3070201EstimationInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent IC3070201EstimationInfoRowDeleted(Me, New IC3070201EstimationInfoRowChangeEvent(CType(e.Row, IC3070201EstimationInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IC3070201EstimationInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent IC3070201EstimationInfoRowDeleting(Me, New IC3070201EstimationInfoRowChangeEvent(CType(e.Row, IC3070201EstimationInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveIC3070201EstimationInfoRow(ByVal row As IC3070201EstimationInfoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3070201DataSet = New IC3070201DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IC3070201EstimationInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class IC3070201VclOptionInfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of IC3070201VclOptionInfoRow)

        <SecurityPermissionAttribute(SecurityAction.Demand, _
         SerializationFormatter:=True)> _
        Public Overrides Sub GetObjectData( _
           info As SerializationInfo, context As StreamingContext)
            If Not (info Is Nothing) Then

                info.AddValue("derivedValue", True)
                MyBase.GetObjectData(info, context)
            End If

        End Sub

        Private columnESTIMATEID As Global.System.Data.DataColumn

        Private columnOPTIONPART As Global.System.Data.DataColumn

        Private columnOPTIONCODE As Global.System.Data.DataColumn

        Private columnOPTIONNAME As Global.System.Data.DataColumn

        Private columnPRICE As Global.System.Data.DataColumn

        Private columnINSTALLCOST As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "IC3070201VclOptionInfo"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESTIMATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATEID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OPTIONPARTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPTIONPART
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OPTIONCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPTIONCODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OPTIONNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPTIONNAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRICE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property INSTALLCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTALLCOST
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As IC3070201VclOptionInfoRow
            Get
                Return CType(Me.Rows(index), IC3070201VclOptionInfoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201VclOptionInfoRowChanging As IC3070201VclOptionInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201VclOptionInfoRowChanged As IC3070201VclOptionInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201VclOptionInfoRowDeleting As IC3070201VclOptionInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201VclOptionInfoRowDeleted As IC3070201VclOptionInfoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddIC3070201VclOptionInfoRow(ByVal row As IC3070201VclOptionInfoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddIC3070201VclOptionInfoRow(ByVal ESTIMATEID As Long, ByVal OPTIONPART As String, ByVal OPTIONCODE As String, ByVal OPTIONNAME As String, ByVal PRICE As Double, ByVal INSTALLCOST As Double) As IC3070201VclOptionInfoRow
            Dim rowIC3070201VclOptionInfoRow As IC3070201VclOptionInfoRow = CType(Me.NewRow, IC3070201VclOptionInfoRow)
            Dim columnValuesArray() As Object = New Object() {ESTIMATEID, OPTIONPART, OPTIONCODE, OPTIONNAME, PRICE, INSTALLCOST}
            rowIC3070201VclOptionInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIC3070201VclOptionInfoRow)
            Return rowIC3070201VclOptionInfoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IC3070201VclOptionInfoDataTable = CType(MyBase.Clone, IC3070201VclOptionInfoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IC3070201VclOptionInfoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnESTIMATEID = MyBase.Columns("ESTIMATEID")
            Me.columnOPTIONPART = MyBase.Columns("OPTIONPART")
            Me.columnOPTIONCODE = MyBase.Columns("OPTIONCODE")
            Me.columnOPTIONNAME = MyBase.Columns("OPTIONNAME")
            Me.columnPRICE = MyBase.Columns("PRICE")
            Me.columnINSTALLCOST = MyBase.Columns("INSTALLCOST")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnESTIMATEID = New Global.System.Data.DataColumn("ESTIMATEID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATEID)
            Me.columnOPTIONPART = New Global.System.Data.DataColumn("OPTIONPART", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPTIONPART)
            Me.columnOPTIONCODE = New Global.System.Data.DataColumn("OPTIONCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPTIONCODE)
            Me.columnOPTIONNAME = New Global.System.Data.DataColumn("OPTIONNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPTIONNAME)
            Me.columnPRICE = New Global.System.Data.DataColumn("PRICE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRICE)
            Me.columnINSTALLCOST = New Global.System.Data.DataColumn("INSTALLCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTALLCOST)
            Me.columnESTIMATEID.AllowDBNull = False
            Me.columnOPTIONPART.AllowDBNull = False
            Me.columnOPTIONPART.MaxLength = 1
            Me.columnOPTIONCODE.AllowDBNull = False
            Me.columnOPTIONCODE.MaxLength = 10
            Me.columnOPTIONNAME.AllowDBNull = False
            Me.columnOPTIONNAME.MaxLength = 64
            Me.columnPRICE.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewIC3070201VclOptionInfoRow() As IC3070201VclOptionInfoRow
            Return CType(Me.NewRow, IC3070201VclOptionInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IC3070201VclOptionInfoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IC3070201VclOptionInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IC3070201VclOptionInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent IC3070201VclOptionInfoRowChanged(Me, New IC3070201VclOptionInfoRowChangeEvent(CType(e.Row, IC3070201VclOptionInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IC3070201VclOptionInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent IC3070201VclOptionInfoRowChanging(Me, New IC3070201VclOptionInfoRowChangeEvent(CType(e.Row, IC3070201VclOptionInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IC3070201VclOptionInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent IC3070201VclOptionInfoRowDeleted(Me, New IC3070201VclOptionInfoRowChangeEvent(CType(e.Row, IC3070201VclOptionInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IC3070201VclOptionInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent IC3070201VclOptionInfoRowDeleting(Me, New IC3070201VclOptionInfoRowChangeEvent(CType(e.Row, IC3070201VclOptionInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveIC3070201VclOptionInfoRow(ByVal row As IC3070201VclOptionInfoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3070201DataSet = New IC3070201DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IC3070201VclOptionInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class IC3070201CustomerInfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of IC3070201CustomerInfoRow)

        <SecurityPermissionAttribute(SecurityAction.Demand, _
         SerializationFormatter:=True)> _
        Public Overrides Sub GetObjectData( _
           info As SerializationInfo, context As StreamingContext)
            If Not (info Is Nothing) Then

                info.AddValue("derivedValue", True)
                MyBase.GetObjectData(info, context)
            End If

        End Sub

        Private columnESTIMATEID As Global.System.Data.DataColumn

        Private columnCONTRACTCUSTTYPE As Global.System.Data.DataColumn

        Private columnCUSTPART As Global.System.Data.DataColumn

        Private columnNAME As Global.System.Data.DataColumn

        Private columnSOCIALID As Global.System.Data.DataColumn

        Private columnZIPCODE As Global.System.Data.DataColumn

        Private columnADDRESS As Global.System.Data.DataColumn

        Private columnTELNO As Global.System.Data.DataColumn

        Private columnMOBILE As Global.System.Data.DataColumn

        Private columnFAXNO As Global.System.Data.DataColumn

        Private columnEMAIL As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "IC3070201CustomerInfo"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESTIMATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATEID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONTRACTCUSTTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTRACTCUSTTYPE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CUSTPARTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTPART
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SOCIALIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOCIALID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ZIPCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZIPCODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADDRESSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDRESS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TELNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELNO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MOBILEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOBILE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FAXNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAXNO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As IC3070201CustomerInfoRow
            Get
                Return CType(Me.Rows(index), IC3070201CustomerInfoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201CustomerInfoRowChanging As IC3070201CustomerInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201CustomerInfoRowChanged As IC3070201CustomerInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201CustomerInfoRowDeleting As IC3070201CustomerInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201CustomerInfoRowDeleted As IC3070201CustomerInfoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddIC3070201CustomerInfoRow(ByVal row As IC3070201CustomerInfoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddIC3070201CustomerInfoRow(ByVal ESTIMATEID As Long, ByVal CONTRACTCUSTTYPE As String, ByVal CUSTPART As String, ByVal NAME As String, ByVal SOCIALID As String, ByVal ZIPCODE As String, ByVal ADDRESS As String, ByVal TELNO As String, ByVal MOBILE As String, ByVal FAXNO As String, ByVal EMAIL As String) As IC3070201CustomerInfoRow
            Dim rowIC3070201CustomerInfoRow As IC3070201CustomerInfoRow = CType(Me.NewRow, IC3070201CustomerInfoRow)
            Dim columnValuesArray() As Object = New Object() {ESTIMATEID, CONTRACTCUSTTYPE, CUSTPART, NAME, SOCIALID, ZIPCODE, ADDRESS, TELNO, MOBILE, FAXNO, EMAIL}
            rowIC3070201CustomerInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIC3070201CustomerInfoRow)
            Return rowIC3070201CustomerInfoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IC3070201CustomerInfoDataTable = CType(MyBase.Clone, IC3070201CustomerInfoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IC3070201CustomerInfoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnESTIMATEID = MyBase.Columns("ESTIMATEID")
            Me.columnCONTRACTCUSTTYPE = MyBase.Columns("CONTRACTCUSTTYPE")
            Me.columnCUSTPART = MyBase.Columns("CUSTPART")
            Me.columnNAME = MyBase.Columns("NAME")
            Me.columnSOCIALID = MyBase.Columns("SOCIALID")
            Me.columnZIPCODE = MyBase.Columns("ZIPCODE")
            Me.columnADDRESS = MyBase.Columns("ADDRESS")
            Me.columnTELNO = MyBase.Columns("TELNO")
            Me.columnMOBILE = MyBase.Columns("MOBILE")
            Me.columnFAXNO = MyBase.Columns("FAXNO")
            Me.columnEMAIL = MyBase.Columns("EMAIL")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnESTIMATEID = New Global.System.Data.DataColumn("ESTIMATEID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATEID)
            Me.columnCONTRACTCUSTTYPE = New Global.System.Data.DataColumn("CONTRACTCUSTTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTRACTCUSTTYPE)
            Me.columnCUSTPART = New Global.System.Data.DataColumn("CUSTPART", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTPART)
            Me.columnNAME = New Global.System.Data.DataColumn("NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAME)
            Me.columnSOCIALID = New Global.System.Data.DataColumn("SOCIALID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOCIALID)
            Me.columnZIPCODE = New Global.System.Data.DataColumn("ZIPCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZIPCODE)
            Me.columnADDRESS = New Global.System.Data.DataColumn("ADDRESS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDRESS)
            Me.columnTELNO = New Global.System.Data.DataColumn("TELNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELNO)
            Me.columnMOBILE = New Global.System.Data.DataColumn("MOBILE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOBILE)
            Me.columnFAXNO = New Global.System.Data.DataColumn("FAXNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAXNO)
            Me.columnEMAIL = New Global.System.Data.DataColumn("EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL)
            Me.columnESTIMATEID.AllowDBNull = False
            Me.columnCONTRACTCUSTTYPE.AllowDBNull = False
            Me.columnCONTRACTCUSTTYPE.MaxLength = 1
            Me.columnCUSTPART.MaxLength = 1
            Me.columnNAME.MaxLength = 256
            Me.columnSOCIALID.MaxLength = 32
            Me.columnZIPCODE.MaxLength = 32
            Me.columnADDRESS.MaxLength = 320
            Me.columnTELNO.MaxLength = 64
            Me.columnMOBILE.MaxLength = 128
            Me.columnFAXNO.MaxLength = 64
            Me.columnEMAIL.MaxLength = 128
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewIC3070201CustomerInfoRow() As IC3070201CustomerInfoRow
            Return CType(Me.NewRow, IC3070201CustomerInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IC3070201CustomerInfoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IC3070201CustomerInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IC3070201CustomerInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent IC3070201CustomerInfoRowChanged(Me, New IC3070201CustomerInfoRowChangeEvent(CType(e.Row, IC3070201CustomerInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IC3070201CustomerInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent IC3070201CustomerInfoRowChanging(Me, New IC3070201CustomerInfoRowChangeEvent(CType(e.Row, IC3070201CustomerInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IC3070201CustomerInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent IC3070201CustomerInfoRowDeleted(Me, New IC3070201CustomerInfoRowChangeEvent(CType(e.Row, IC3070201CustomerInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IC3070201CustomerInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent IC3070201CustomerInfoRowDeleting(Me, New IC3070201CustomerInfoRowChangeEvent(CType(e.Row, IC3070201CustomerInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveIC3070201CustomerInfoRow(ByVal row As IC3070201CustomerInfoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3070201DataSet = New IC3070201DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IC3070201CustomerInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class IC3070201ChargeInfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of IC3070201ChargeInfoRow)

        <SecurityPermissionAttribute(SecurityAction.Demand, _
         SerializationFormatter:=True)> _
        Public Overrides Sub GetObjectData( _
           info As SerializationInfo, context As StreamingContext)
            If Not (info Is Nothing) Then

                info.AddValue("derivedValue", True)
                MyBase.GetObjectData(info, context)
            End If

        End Sub

        Private columnESTIMATEID As Global.System.Data.DataColumn

        Private columnITEMCODE As Global.System.Data.DataColumn

        Private columnITEMNAME As Global.System.Data.DataColumn

        Private columnPRICE As Global.System.Data.DataColumn

        Private columnCHARGEDVS As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "IC3070201ChargeInfo"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESTIMATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATEID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ITEMCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMCODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ITEMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMNAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRICE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CHARGEDVSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHARGEDVS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As IC3070201ChargeInfoRow
            Get
                Return CType(Me.Rows(index), IC3070201ChargeInfoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201ChargeInfoRowChanging As IC3070201ChargeInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201ChargeInfoRowChanged As IC3070201ChargeInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201ChargeInfoRowDeleting As IC3070201ChargeInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201ChargeInfoRowDeleted As IC3070201ChargeInfoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddIC3070201ChargeInfoRow(ByVal row As IC3070201ChargeInfoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddIC3070201ChargeInfoRow(ByVal ESTIMATEID As Long, ByVal ITEMCODE As String, ByVal ITEMNAME As String, ByVal PRICE As Double, ByVal CHARGEDVS As String) As IC3070201ChargeInfoRow
            Dim rowIC3070201ChargeInfoRow As IC3070201ChargeInfoRow = CType(Me.NewRow, IC3070201ChargeInfoRow)
            Dim columnValuesArray() As Object = New Object() {ESTIMATEID, ITEMCODE, ITEMNAME, PRICE, CHARGEDVS}
            rowIC3070201ChargeInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIC3070201ChargeInfoRow)
            Return rowIC3070201ChargeInfoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IC3070201ChargeInfoDataTable = CType(MyBase.Clone, IC3070201ChargeInfoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IC3070201ChargeInfoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnESTIMATEID = MyBase.Columns("ESTIMATEID")
            Me.columnITEMCODE = MyBase.Columns("ITEMCODE")
            Me.columnITEMNAME = MyBase.Columns("ITEMNAME")
            Me.columnPRICE = MyBase.Columns("PRICE")
            Me.columnCHARGEDVS = MyBase.Columns("CHARGEDVS")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnESTIMATEID = New Global.System.Data.DataColumn("ESTIMATEID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATEID)
            Me.columnITEMCODE = New Global.System.Data.DataColumn("ITEMCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMCODE)
            Me.columnITEMNAME = New Global.System.Data.DataColumn("ITEMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMNAME)
            Me.columnPRICE = New Global.System.Data.DataColumn("PRICE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRICE)
            Me.columnCHARGEDVS = New Global.System.Data.DataColumn("CHARGEDVS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHARGEDVS)
            Me.columnESTIMATEID.AllowDBNull = False
            Me.columnITEMCODE.AllowDBNull = False
            Me.columnITEMCODE.MaxLength = 10
            Me.columnITEMNAME.AllowDBNull = False
            Me.columnITEMNAME.MaxLength = 64
            Me.columnCHARGEDVS.AllowDBNull = False
            Me.columnCHARGEDVS.MaxLength = 1
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewIC3070201ChargeInfoRow() As IC3070201ChargeInfoRow
            Return CType(Me.NewRow, IC3070201ChargeInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IC3070201ChargeInfoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IC3070201ChargeInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IC3070201ChargeInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent IC3070201ChargeInfoRowChanged(Me, New IC3070201ChargeInfoRowChangeEvent(CType(e.Row, IC3070201ChargeInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IC3070201ChargeInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent IC3070201ChargeInfoRowChanging(Me, New IC3070201ChargeInfoRowChangeEvent(CType(e.Row, IC3070201ChargeInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IC3070201ChargeInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent IC3070201ChargeInfoRowDeleted(Me, New IC3070201ChargeInfoRowChangeEvent(CType(e.Row, IC3070201ChargeInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IC3070201ChargeInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent IC3070201ChargeInfoRowDeleting(Me, New IC3070201ChargeInfoRowChangeEvent(CType(e.Row, IC3070201ChargeInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveIC3070201ChargeInfoRow(ByVal row As IC3070201ChargeInfoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3070201DataSet = New IC3070201DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IC3070201ChargeInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class IC3070201PaymentInfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of IC3070201PaymentInfoRow)

        <SecurityPermissionAttribute(SecurityAction.Demand, _
         SerializationFormatter:=True)> _
        Public Overrides Sub GetObjectData( _
           info As SerializationInfo, context As StreamingContext)
            If Not (info Is Nothing) Then

                info.AddValue("derivedValue", True)
                MyBase.GetObjectData(info, context)
            End If

        End Sub

        Private columnESTIMATEID As Global.System.Data.DataColumn

        Private columnPAYMENTMETHOD As Global.System.Data.DataColumn

        Private columnFINANCECOMCODE As Global.System.Data.DataColumn

        Private columnPAYMENTPERIOD As Global.System.Data.DataColumn

        Private columnMONTHLYPAYMENT As Global.System.Data.DataColumn

        Private columnDEPOSIT As Global.System.Data.DataColumn

        Private columnBONUSPAYMENT As Global.System.Data.DataColumn

        Private columnDUEDATE As Global.System.Data.DataColumn

        Private columnDELFLG As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "IC3070201PaymentInfo"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESTIMATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATEID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PAYMENTMETHODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAYMENTMETHOD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FINANCECOMCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFINANCECOMCODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PAYMENTPERIODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAYMENTPERIOD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MONTHLYPAYMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMONTHLYPAYMENT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DEPOSITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPOSIT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BONUSPAYMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBONUSPAYMENT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DUEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDUEDATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DELFLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDELFLG
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As IC3070201PaymentInfoRow
            Get
                Return CType(Me.Rows(index), IC3070201PaymentInfoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201PaymentInfoRowChanging As IC3070201PaymentInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201PaymentInfoRowChanged As IC3070201PaymentInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201PaymentInfoRowDeleting As IC3070201PaymentInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201PaymentInfoRowDeleted As IC3070201PaymentInfoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddIC3070201PaymentInfoRow(ByVal row As IC3070201PaymentInfoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddIC3070201PaymentInfoRow(ByVal ESTIMATEID As Long, ByVal PAYMENTMETHOD As String, ByVal FINANCECOMCODE As String, ByVal PAYMENTPERIOD As Short, ByVal MONTHLYPAYMENT As Double, ByVal DEPOSIT As Double, ByVal BONUSPAYMENT As Double, ByVal DUEDATE As Short, ByVal DELFLG As String) As IC3070201PaymentInfoRow
            Dim rowIC3070201PaymentInfoRow As IC3070201PaymentInfoRow = CType(Me.NewRow, IC3070201PaymentInfoRow)
            Dim columnValuesArray() As Object = New Object() {ESTIMATEID, PAYMENTMETHOD, FINANCECOMCODE, PAYMENTPERIOD, MONTHLYPAYMENT, DEPOSIT, BONUSPAYMENT, DUEDATE, DELFLG}
            rowIC3070201PaymentInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIC3070201PaymentInfoRow)
            Return rowIC3070201PaymentInfoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IC3070201PaymentInfoDataTable = CType(MyBase.Clone, IC3070201PaymentInfoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IC3070201PaymentInfoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnESTIMATEID = MyBase.Columns("ESTIMATEID")
            Me.columnPAYMENTMETHOD = MyBase.Columns("PAYMENTMETHOD")
            Me.columnFINANCECOMCODE = MyBase.Columns("FINANCECOMCODE")
            Me.columnPAYMENTPERIOD = MyBase.Columns("PAYMENTPERIOD")
            Me.columnMONTHLYPAYMENT = MyBase.Columns("MONTHLYPAYMENT")
            Me.columnDEPOSIT = MyBase.Columns("DEPOSIT")
            Me.columnBONUSPAYMENT = MyBase.Columns("BONUSPAYMENT")
            Me.columnDUEDATE = MyBase.Columns("DUEDATE")
            Me.columnDELFLG = MyBase.Columns("DELFLG")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnESTIMATEID = New Global.System.Data.DataColumn("ESTIMATEID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATEID)
            Me.columnPAYMENTMETHOD = New Global.System.Data.DataColumn("PAYMENTMETHOD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAYMENTMETHOD)
            Me.columnFINANCECOMCODE = New Global.System.Data.DataColumn("FINANCECOMCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFINANCECOMCODE)
            Me.columnPAYMENTPERIOD = New Global.System.Data.DataColumn("PAYMENTPERIOD", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAYMENTPERIOD)
            Me.columnMONTHLYPAYMENT = New Global.System.Data.DataColumn("MONTHLYPAYMENT", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMONTHLYPAYMENT)
            Me.columnDEPOSIT = New Global.System.Data.DataColumn("DEPOSIT", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPOSIT)
            Me.columnBONUSPAYMENT = New Global.System.Data.DataColumn("BONUSPAYMENT", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBONUSPAYMENT)
            Me.columnDUEDATE = New Global.System.Data.DataColumn("DUEDATE", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDUEDATE)
            Me.columnDELFLG = New Global.System.Data.DataColumn("DELFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDELFLG)
            Me.columnESTIMATEID.AllowDBNull = False
            Me.columnPAYMENTMETHOD.AllowDBNull = False
            Me.columnPAYMENTMETHOD.MaxLength = 1
            Me.columnFINANCECOMCODE.MaxLength = 5
            Me.columnDELFLG.AllowDBNull = False
            Me.columnDELFLG.MaxLength = 1
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewIC3070201PaymentInfoRow() As IC3070201PaymentInfoRow
            Return CType(Me.NewRow, IC3070201PaymentInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IC3070201PaymentInfoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IC3070201PaymentInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IC3070201PaymentInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent IC3070201PaymentInfoRowChanged(Me, New IC3070201PaymentInfoRowChangeEvent(CType(e.Row, IC3070201PaymentInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IC3070201PaymentInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent IC3070201PaymentInfoRowChanging(Me, New IC3070201PaymentInfoRowChangeEvent(CType(e.Row, IC3070201PaymentInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IC3070201PaymentInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent IC3070201PaymentInfoRowDeleted(Me, New IC3070201PaymentInfoRowChangeEvent(CType(e.Row, IC3070201PaymentInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IC3070201PaymentInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent IC3070201PaymentInfoRowDeleting(Me, New IC3070201PaymentInfoRowChangeEvent(CType(e.Row, IC3070201PaymentInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveIC3070201PaymentInfoRow(ByVal row As IC3070201PaymentInfoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3070201DataSet = New IC3070201DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IC3070201PaymentInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class IC3070201TradeincarInfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of IC3070201TradeincarInfoRow)

        <SecurityPermissionAttribute(SecurityAction.Demand, _
         SerializationFormatter:=True)> _
        Public Overrides Sub GetObjectData( _
           info As SerializationInfo, context As StreamingContext)
            If Not (info Is Nothing) Then

                info.AddValue("derivedValue", True)
                MyBase.GetObjectData(info, context)
            End If

        End Sub

        Private columnESTIMATEID As Global.System.Data.DataColumn

        Private columnSEQNO As Global.System.Data.DataColumn

        Private columnASSESSMENTNO As Global.System.Data.DataColumn

        Private columnVEHICLENAME As Global.System.Data.DataColumn

        Private columnASSESSEDPRICE As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "IC3070201TradeincarInfo"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESTIMATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATEID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SEQNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEQNO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ASSESSMENTNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASSESSMENTNO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VEHICLENAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVEHICLENAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ASSESSEDPRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASSESSEDPRICE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As IC3070201TradeincarInfoRow
            Get
                Return CType(Me.Rows(index), IC3070201TradeincarInfoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201TradeincarInfoRowChanging As IC3070201TradeincarInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201TradeincarInfoRowChanged As IC3070201TradeincarInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201TradeincarInfoRowDeleting As IC3070201TradeincarInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201TradeincarInfoRowDeleted As IC3070201TradeincarInfoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddIC3070201TradeincarInfoRow(ByVal row As IC3070201TradeincarInfoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddIC3070201TradeincarInfoRow(ByVal ESTIMATEID As Long, ByVal SEQNO As Short, ByVal ASSESSMENTNO As Long, ByVal VEHICLENAME As String, ByVal ASSESSEDPRICE As Double) As IC3070201TradeincarInfoRow
            Dim rowIC3070201TradeincarInfoRow As IC3070201TradeincarInfoRow = CType(Me.NewRow, IC3070201TradeincarInfoRow)
            Dim columnValuesArray() As Object = New Object() {ESTIMATEID, SEQNO, ASSESSMENTNO, VEHICLENAME, ASSESSEDPRICE}
            rowIC3070201TradeincarInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIC3070201TradeincarInfoRow)
            Return rowIC3070201TradeincarInfoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IC3070201TradeincarInfoDataTable = CType(MyBase.Clone, IC3070201TradeincarInfoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IC3070201TradeincarInfoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnESTIMATEID = MyBase.Columns("ESTIMATEID")
            Me.columnSEQNO = MyBase.Columns("SEQNO")
            Me.columnASSESSMENTNO = MyBase.Columns("ASSESSMENTNO")
            Me.columnVEHICLENAME = MyBase.Columns("VEHICLENAME")
            Me.columnASSESSEDPRICE = MyBase.Columns("ASSESSEDPRICE")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnESTIMATEID = New Global.System.Data.DataColumn("ESTIMATEID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATEID)
            Me.columnSEQNO = New Global.System.Data.DataColumn("SEQNO", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEQNO)
            Me.columnASSESSMENTNO = New Global.System.Data.DataColumn("ASSESSMENTNO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASSESSMENTNO)
            Me.columnVEHICLENAME = New Global.System.Data.DataColumn("VEHICLENAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVEHICLENAME)
            Me.columnASSESSEDPRICE = New Global.System.Data.DataColumn("ASSESSEDPRICE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASSESSEDPRICE)
            Me.columnESTIMATEID.AllowDBNull = False
            Me.columnSEQNO.AllowDBNull = False
            Me.columnVEHICLENAME.AllowDBNull = False
            Me.columnVEHICLENAME.MaxLength = 128
            Me.columnASSESSEDPRICE.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewIC3070201TradeincarInfoRow() As IC3070201TradeincarInfoRow
            Return CType(Me.NewRow, IC3070201TradeincarInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IC3070201TradeincarInfoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IC3070201TradeincarInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IC3070201TradeincarInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent IC3070201TradeincarInfoRowChanged(Me, New IC3070201TradeincarInfoRowChangeEvent(CType(e.Row, IC3070201TradeincarInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IC3070201TradeincarInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent IC3070201TradeincarInfoRowChanging(Me, New IC3070201TradeincarInfoRowChangeEvent(CType(e.Row, IC3070201TradeincarInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IC3070201TradeincarInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent IC3070201TradeincarInfoRowDeleted(Me, New IC3070201TradeincarInfoRowChangeEvent(CType(e.Row, IC3070201TradeincarInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IC3070201TradeincarInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent IC3070201TradeincarInfoRowDeleting(Me, New IC3070201TradeincarInfoRowChangeEvent(CType(e.Row, IC3070201TradeincarInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveIC3070201TradeincarInfoRow(ByVal row As IC3070201TradeincarInfoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3070201DataSet = New IC3070201DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IC3070201TradeincarInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class IC3070201EstInsuranceInfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of IC3070201EstInsuranceInfoRow)

        <SecurityPermissionAttribute(SecurityAction.Demand, _
         SerializationFormatter:=True)> _
        Public Overrides Sub GetObjectData( _
           info As SerializationInfo, context As StreamingContext)
            If Not (info Is Nothing) Then

                info.AddValue("derivedValue", True)
                MyBase.GetObjectData(info, context)
            End If

        End Sub

        Private columnESTIMATEID As Global.System.Data.DataColumn

        Private columnINSUDVS As Global.System.Data.DataColumn

        Private columnINSUCOMCD As Global.System.Data.DataColumn

        Private columnINSUKIND As Global.System.Data.DataColumn

        Private columnAMOUNT As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "IC3070201EstInsuranceInfo"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESTIMATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATEID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property INSUDVSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSUDVS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property INSUCOMCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSUCOMCD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property INSUKINDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSUKIND
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAMOUNT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As IC3070201EstInsuranceInfoRow
            Get
                Return CType(Me.Rows(index), IC3070201EstInsuranceInfoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201EstInsuranceInfoRowChanging As IC3070201EstInsuranceInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201EstInsuranceInfoRowChanged As IC3070201EstInsuranceInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201EstInsuranceInfoRowDeleting As IC3070201EstInsuranceInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070201EstInsuranceInfoRowDeleted As IC3070201EstInsuranceInfoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddIC3070201EstInsuranceInfoRow(ByVal row As IC3070201EstInsuranceInfoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddIC3070201EstInsuranceInfoRow(ByVal ESTIMATEID As Long, ByVal INSUDVS As String, ByVal INSUCOMCD As String, ByVal INSUKIND As String, ByVal AMOUNT As Double) As IC3070201EstInsuranceInfoRow
            Dim rowIC3070201EstInsuranceInfoRow As IC3070201EstInsuranceInfoRow = CType(Me.NewRow, IC3070201EstInsuranceInfoRow)
            Dim columnValuesArray() As Object = New Object() {ESTIMATEID, INSUDVS, INSUCOMCD, INSUKIND, AMOUNT}
            rowIC3070201EstInsuranceInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIC3070201EstInsuranceInfoRow)
            Return rowIC3070201EstInsuranceInfoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IC3070201EstInsuranceInfoDataTable = CType(MyBase.Clone, IC3070201EstInsuranceInfoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IC3070201EstInsuranceInfoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnESTIMATEID = MyBase.Columns("ESTIMATEID")
            Me.columnINSUDVS = MyBase.Columns("INSUDVS")
            Me.columnINSUCOMCD = MyBase.Columns("INSUCOMCD")
            Me.columnINSUKIND = MyBase.Columns("INSUKIND")
            Me.columnAMOUNT = MyBase.Columns("AMOUNT")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnESTIMATEID = New Global.System.Data.DataColumn("ESTIMATEID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATEID)
            Me.columnINSUDVS = New Global.System.Data.DataColumn("INSUDVS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSUDVS)
            Me.columnINSUCOMCD = New Global.System.Data.DataColumn("INSUCOMCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSUCOMCD)
            Me.columnINSUKIND = New Global.System.Data.DataColumn("INSUKIND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSUKIND)
            Me.columnAMOUNT = New Global.System.Data.DataColumn("AMOUNT", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAMOUNT)
            Me.columnESTIMATEID.AllowDBNull = False
            Me.columnINSUDVS.AllowDBNull = False
            Me.columnINSUDVS.MaxLength = 1
            Me.columnINSUCOMCD.MaxLength = 5
            Me.columnINSUKIND.MaxLength = 1
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewIC3070201EstInsuranceInfoRow() As IC3070201EstInsuranceInfoRow
            Return CType(Me.NewRow, IC3070201EstInsuranceInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IC3070201EstInsuranceInfoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IC3070201EstInsuranceInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IC3070201EstInsuranceInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent IC3070201EstInsuranceInfoRowChanged(Me, New IC3070201EstInsuranceInfoRowChangeEvent(CType(e.Row, IC3070201EstInsuranceInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IC3070201EstInsuranceInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent IC3070201EstInsuranceInfoRowChanging(Me, New IC3070201EstInsuranceInfoRowChangeEvent(CType(e.Row, IC3070201EstInsuranceInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IC3070201EstInsuranceInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent IC3070201EstInsuranceInfoRowDeleted(Me, New IC3070201EstInsuranceInfoRowChangeEvent(CType(e.Row, IC3070201EstInsuranceInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IC3070201EstInsuranceInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent IC3070201EstInsuranceInfoRowDeleting(Me, New IC3070201EstInsuranceInfoRowChangeEvent(CType(e.Row, IC3070201EstInsuranceInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveIC3070201EstInsuranceInfoRow(ByVal row As IC3070201EstInsuranceInfoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3070201DataSet = New IC3070201DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IC3070201EstInsuranceInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IC3070201EstimationInfoRow
        Inherits Global.System.Data.DataRow

        Private tableIC3070201EstimationInfo As IC3070201EstimationInfoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIC3070201EstimationInfo = CType(Me.Table, IC3070201EstimationInfoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESTIMATEID() As Long
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.ESTIMATEIDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3070201EstimationInfo.ESTIMATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DLRCD() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.DLRCDColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.DLRCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property STRCD() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070201EstimationInfo.STRCDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201EstimationInfo' にある列 'STRCD' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.STRCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FLLWUPBOX_SEQNO() As Long
            Get
                Try
                    Return CType(Me(Me.tableIC3070201EstimationInfo.FLLWUPBOX_SEQNOColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201EstimationInfo' にある列 'FLLWUPBOX_SEQNO' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Long)
                Me(Me.tableIC3070201EstimationInfo.FLLWUPBOX_SEQNOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CNT_STRCD() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070201EstimationInfo.CNT_STRCDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201EstimationInfo' にある列 'CNT_STRCD' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.CNT_STRCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CNT_STAFF() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070201EstimationInfo.CNT_STAFFColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201EstimationInfo' にある列 'CNT_STAFF' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.CNT_STAFFColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CSTKIND() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070201EstimationInfo.CSTKINDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201EstimationInfo' にある列 'CSTKIND' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.CSTKINDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CUSTOMERCLASS() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070201EstimationInfo.CUSTOMERCLASSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201EstimationInfo' にある列 'CUSTOMERCLASS' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.CUSTOMERCLASSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CRCUSTID() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070201EstimationInfo.CRCUSTIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201EstimationInfo' にある列 'CRCUSTID' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.CRCUSTIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CUSTID() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070201EstimationInfo.CUSTIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201EstimationInfo' にある列 'CUSTID' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.CUSTIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DELIDATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableIC3070201EstimationInfo.DELIDATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201EstimationInfo' にある列 'DELIDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableIC3070201EstimationInfo.DELIDATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DISCOUNTPRICE() As Double
            Get
                Try
                    Return CType(Me(Me.tableIC3070201EstimationInfo.DISCOUNTPRICEColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201EstimationInfo' にある列 'DISCOUNTPRICE' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIC3070201EstimationInfo.DISCOUNTPRICEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMO() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070201EstimationInfo.MEMOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201EstimationInfo' にある列 'MEMO' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.MEMOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESTPRINTDATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableIC3070201EstimationInfo.ESTPRINTDATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201EstimationInfo' にある列 'ESTPRINTDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableIC3070201EstimationInfo.ESTPRINTDATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTRACTNO() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070201EstimationInfo.CONTRACTNOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201EstimationInfo' にある列 'CONTRACTNO' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.CONTRACTNOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTPRINTFLG() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.CONTPRINTFLGColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.CONTPRINTFLGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTRACTFLG() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.CONTRACTFLGColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.CONTRACTFLGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTRACTDATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableIC3070201EstimationInfo.CONTRACTDATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201EstimationInfo' にある列 'CONTRACTDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableIC3070201EstimationInfo.CONTRACTDATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DELFLG() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.DELFLGColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.DELFLGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TCVVERSION() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.TCVVERSIONColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.TCVVERSIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SERIESCD() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.SERIESCDColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.SERIESCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SERIESNM() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.SERIESNMColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.SERIESNMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MODELCD() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.MODELCDColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.MODELCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MODELNM() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.MODELNMColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.MODELNMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BODYTYPE() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.BODYTYPEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.BODYTYPEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DRIVESYSTEM() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.DRIVESYSTEMColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.DRIVESYSTEMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DISPLACEMENT() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.DISPLACEMENTColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.DISPLACEMENTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRANSMISSION() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.TRANSMISSIONColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.TRANSMISSIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SUFFIXCD() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.SUFFIXCDColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.SUFFIXCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EXTCOLORCD() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.EXTCOLORCDColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.EXTCOLORCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EXTCOLOR() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.EXTCOLORColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.EXTCOLORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EXTAMOUNT() As Double
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.EXTAMOUNTColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableIC3070201EstimationInfo.EXTAMOUNTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property INTCOLORCD() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.INTCOLORCDColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.INTCOLORCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property INTCOLOR() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.INTCOLORColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.INTCOLORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property INTAMOUNT() As Double
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.INTAMOUNTColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableIC3070201EstimationInfo.INTAMOUNTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MODELNUMBER() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.MODELNUMBERColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.MODELNUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BASEPRICE() As Double
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.BASEPRICEColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableIC3070201EstimationInfo.BASEPRICEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CREATEDATE() As Date
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.CREATEDATEColumn), Date)
            End Get
            Set(value As Date)
                Me(Me.tableIC3070201EstimationInfo.CREATEDATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CREATEACCOUNT() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.CREATEACCOUNTColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.CREATEACCOUNTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UPDATEACCOUNT() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.UPDATEACCOUNTColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.UPDATEACCOUNTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CREATEID() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.CREATEIDColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.CREATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UPDATEID() As String
            Get
                Return CType(Me(Me.tableIC3070201EstimationInfo.UPDATEIDColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstimationInfo.UPDATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSTRCDNull() As Boolean
            Return Me.IsNull(Me.tableIC3070201EstimationInfo.STRCDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSTRCDNull()
            Me(Me.tableIC3070201EstimationInfo.STRCDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFLLWUPBOX_SEQNONull() As Boolean
            Return Me.IsNull(Me.tableIC3070201EstimationInfo.FLLWUPBOX_SEQNOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFLLWUPBOX_SEQNONull()
            Me(Me.tableIC3070201EstimationInfo.FLLWUPBOX_SEQNOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCNT_STRCDNull() As Boolean
            Return Me.IsNull(Me.tableIC3070201EstimationInfo.CNT_STRCDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCNT_STRCDNull()
            Me(Me.tableIC3070201EstimationInfo.CNT_STRCDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCNT_STAFFNull() As Boolean
            Return Me.IsNull(Me.tableIC3070201EstimationInfo.CNT_STAFFColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCNT_STAFFNull()
            Me(Me.tableIC3070201EstimationInfo.CNT_STAFFColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCSTKINDNull() As Boolean
            Return Me.IsNull(Me.tableIC3070201EstimationInfo.CSTKINDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCSTKINDNull()
            Me(Me.tableIC3070201EstimationInfo.CSTKINDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCUSTOMERCLASSNull() As Boolean
            Return Me.IsNull(Me.tableIC3070201EstimationInfo.CUSTOMERCLASSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCUSTOMERCLASSNull()
            Me(Me.tableIC3070201EstimationInfo.CUSTOMERCLASSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCRCUSTIDNull() As Boolean
            Return Me.IsNull(Me.tableIC3070201EstimationInfo.CRCUSTIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCRCUSTIDNull()
            Me(Me.tableIC3070201EstimationInfo.CRCUSTIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCUSTIDNull() As Boolean
            Return Me.IsNull(Me.tableIC3070201EstimationInfo.CUSTIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCUSTIDNull()
            Me(Me.tableIC3070201EstimationInfo.CUSTIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDELIDATENull() As Boolean
            Return Me.IsNull(Me.tableIC3070201EstimationInfo.DELIDATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDELIDATENull()
            Me(Me.tableIC3070201EstimationInfo.DELIDATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDISCOUNTPRICENull() As Boolean
            Return Me.IsNull(Me.tableIC3070201EstimationInfo.DISCOUNTPRICEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDISCOUNTPRICENull()
            Me(Me.tableIC3070201EstimationInfo.DISCOUNTPRICEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMONull() As Boolean
            Return Me.IsNull(Me.tableIC3070201EstimationInfo.MEMOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMONull()
            Me(Me.tableIC3070201EstimationInfo.MEMOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsESTPRINTDATENull() As Boolean
            Return Me.IsNull(Me.tableIC3070201EstimationInfo.ESTPRINTDATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetESTPRINTDATENull()
            Me(Me.tableIC3070201EstimationInfo.ESTPRINTDATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONTRACTNONull() As Boolean
            Return Me.IsNull(Me.tableIC3070201EstimationInfo.CONTRACTNOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONTRACTNONull()
            Me(Me.tableIC3070201EstimationInfo.CONTRACTNOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONTRACTDATENull() As Boolean
            Return Me.IsNull(Me.tableIC3070201EstimationInfo.CONTRACTDATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONTRACTDATENull()
            Me(Me.tableIC3070201EstimationInfo.CONTRACTDATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IC3070201VclOptionInfoRow
        Inherits Global.System.Data.DataRow

        Private tableIC3070201VclOptionInfo As IC3070201VclOptionInfoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIC3070201VclOptionInfo = CType(Me.Table, IC3070201VclOptionInfoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESTIMATEID() As Long
            Get
                Return CType(Me(Me.tableIC3070201VclOptionInfo.ESTIMATEIDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3070201VclOptionInfo.ESTIMATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property OPTIONPART() As String
            Get
                Return CType(Me(Me.tableIC3070201VclOptionInfo.OPTIONPARTColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201VclOptionInfo.OPTIONPARTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property OPTIONCODE() As String
            Get
                Return CType(Me(Me.tableIC3070201VclOptionInfo.OPTIONCODEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201VclOptionInfo.OPTIONCODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property OPTIONNAME() As String
            Get
                Return CType(Me(Me.tableIC3070201VclOptionInfo.OPTIONNAMEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201VclOptionInfo.OPTIONNAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRICE() As Double
            Get
                Return CType(Me(Me.tableIC3070201VclOptionInfo.PRICEColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableIC3070201VclOptionInfo.PRICEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property INSTALLCOST() As Double
            Get
                Try
                    Return CType(Me(Me.tableIC3070201VclOptionInfo.INSTALLCOSTColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201VclOptionInfo' にある列 'INSTALLCOST' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIC3070201VclOptionInfo.INSTALLCOSTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsINSTALLCOSTNull() As Boolean
            Return Me.IsNull(Me.tableIC3070201VclOptionInfo.INSTALLCOSTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetINSTALLCOSTNull()
            Me(Me.tableIC3070201VclOptionInfo.INSTALLCOSTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IC3070201CustomerInfoRow
        Inherits Global.System.Data.DataRow

        Private tableIC3070201CustomerInfo As IC3070201CustomerInfoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIC3070201CustomerInfo = CType(Me.Table, IC3070201CustomerInfoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESTIMATEID() As Long
            Get
                Return CType(Me(Me.tableIC3070201CustomerInfo.ESTIMATEIDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3070201CustomerInfo.ESTIMATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTRACTCUSTTYPE() As String
            Get
                Return CType(Me(Me.tableIC3070201CustomerInfo.CONTRACTCUSTTYPEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201CustomerInfo.CONTRACTCUSTTYPEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CUSTPART() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070201CustomerInfo.CUSTPARTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201CustomerInfo' にある列 'CUSTPART' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070201CustomerInfo.CUSTPARTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070201CustomerInfo.NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201CustomerInfo' にある列 'NAME' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070201CustomerInfo.NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SOCIALID() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070201CustomerInfo.SOCIALIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201CustomerInfo' にある列 'SOCIALID' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070201CustomerInfo.SOCIALIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ZIPCODE() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070201CustomerInfo.ZIPCODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201CustomerInfo' にある列 'ZIPCODE' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070201CustomerInfo.ZIPCODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADDRESS() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070201CustomerInfo.ADDRESSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201CustomerInfo' にある列 'ADDRESS' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070201CustomerInfo.ADDRESSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TELNO() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070201CustomerInfo.TELNOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201CustomerInfo' にある列 'TELNO' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070201CustomerInfo.TELNOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MOBILE() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070201CustomerInfo.MOBILEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201CustomerInfo' にある列 'MOBILE' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070201CustomerInfo.MOBILEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FAXNO() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070201CustomerInfo.FAXNOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201CustomerInfo' にある列 'FAXNO' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070201CustomerInfo.FAXNOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EMAIL() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070201CustomerInfo.EMAILColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201CustomerInfo' にある列 'EMAIL' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070201CustomerInfo.EMAILColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCUSTPARTNull() As Boolean
            Return Me.IsNull(Me.tableIC3070201CustomerInfo.CUSTPARTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCUSTPARTNull()
            Me(Me.tableIC3070201CustomerInfo.CUSTPARTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNAMENull() As Boolean
            Return Me.IsNull(Me.tableIC3070201CustomerInfo.NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNAMENull()
            Me(Me.tableIC3070201CustomerInfo.NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSOCIALIDNull() As Boolean
            Return Me.IsNull(Me.tableIC3070201CustomerInfo.SOCIALIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSOCIALIDNull()
            Me(Me.tableIC3070201CustomerInfo.SOCIALIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsZIPCODENull() As Boolean
            Return Me.IsNull(Me.tableIC3070201CustomerInfo.ZIPCODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetZIPCODENull()
            Me(Me.tableIC3070201CustomerInfo.ZIPCODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsADDRESSNull() As Boolean
            Return Me.IsNull(Me.tableIC3070201CustomerInfo.ADDRESSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetADDRESSNull()
            Me(Me.tableIC3070201CustomerInfo.ADDRESSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTELNONull() As Boolean
            Return Me.IsNull(Me.tableIC3070201CustomerInfo.TELNOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTELNONull()
            Me(Me.tableIC3070201CustomerInfo.TELNOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMOBILENull() As Boolean
            Return Me.IsNull(Me.tableIC3070201CustomerInfo.MOBILEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMOBILENull()
            Me(Me.tableIC3070201CustomerInfo.MOBILEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFAXNONull() As Boolean
            Return Me.IsNull(Me.tableIC3070201CustomerInfo.FAXNOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFAXNONull()
            Me(Me.tableIC3070201CustomerInfo.FAXNOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEMAILNull() As Boolean
            Return Me.IsNull(Me.tableIC3070201CustomerInfo.EMAILColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEMAILNull()
            Me(Me.tableIC3070201CustomerInfo.EMAILColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IC3070201ChargeInfoRow
        Inherits Global.System.Data.DataRow

        Private tableIC3070201ChargeInfo As IC3070201ChargeInfoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIC3070201ChargeInfo = CType(Me.Table, IC3070201ChargeInfoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESTIMATEID() As Long
            Get
                Return CType(Me(Me.tableIC3070201ChargeInfo.ESTIMATEIDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3070201ChargeInfo.ESTIMATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ITEMCODE() As String
            Get
                Return CType(Me(Me.tableIC3070201ChargeInfo.ITEMCODEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201ChargeInfo.ITEMCODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ITEMNAME() As String
            Get
                Return CType(Me(Me.tableIC3070201ChargeInfo.ITEMNAMEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201ChargeInfo.ITEMNAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRICE() As Double
            Get
                Try
                    Return CType(Me(Me.tableIC3070201ChargeInfo.PRICEColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201ChargeInfo' にある列 'PRICE' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIC3070201ChargeInfo.PRICEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CHARGEDVS() As String
            Get
                Return CType(Me(Me.tableIC3070201ChargeInfo.CHARGEDVSColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201ChargeInfo.CHARGEDVSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRICENull() As Boolean
            Return Me.IsNull(Me.tableIC3070201ChargeInfo.PRICEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRICENull()
            Me(Me.tableIC3070201ChargeInfo.PRICEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IC3070201PaymentInfoRow
        Inherits Global.System.Data.DataRow

        Private tableIC3070201PaymentInfo As IC3070201PaymentInfoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIC3070201PaymentInfo = CType(Me.Table, IC3070201PaymentInfoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESTIMATEID() As Long
            Get
                Return CType(Me(Me.tableIC3070201PaymentInfo.ESTIMATEIDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3070201PaymentInfo.ESTIMATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PAYMENTMETHOD() As String
            Get
                Return CType(Me(Me.tableIC3070201PaymentInfo.PAYMENTMETHODColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201PaymentInfo.PAYMENTMETHODColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FINANCECOMCODE() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070201PaymentInfo.FINANCECOMCODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201PaymentInfo' にある列 'FINANCECOMCODE' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070201PaymentInfo.FINANCECOMCODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PAYMENTPERIOD() As Short
            Get
                Try
                    Return CType(Me(Me.tableIC3070201PaymentInfo.PAYMENTPERIODColumn), Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201PaymentInfo' にある列 'PAYMENTPERIOD' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Short)
                Me(Me.tableIC3070201PaymentInfo.PAYMENTPERIODColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MONTHLYPAYMENT() As Double
            Get
                Try
                    Return CType(Me(Me.tableIC3070201PaymentInfo.MONTHLYPAYMENTColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201PaymentInfo' にある列 'MONTHLYPAYMENT' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIC3070201PaymentInfo.MONTHLYPAYMENTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DEPOSIT() As Double
            Get
                Try
                    Return CType(Me(Me.tableIC3070201PaymentInfo.DEPOSITColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201PaymentInfo' にある列 'DEPOSIT' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIC3070201PaymentInfo.DEPOSITColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BONUSPAYMENT() As Double
            Get
                Try
                    Return CType(Me(Me.tableIC3070201PaymentInfo.BONUSPAYMENTColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201PaymentInfo' にある列 'BONUSPAYMENT' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIC3070201PaymentInfo.BONUSPAYMENTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DUEDATE() As Short
            Get
                Try
                    Return CType(Me(Me.tableIC3070201PaymentInfo.DUEDATEColumn), Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201PaymentInfo' にある列 'DUEDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Short)
                Me(Me.tableIC3070201PaymentInfo.DUEDATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DELFLG() As String
            Get
                Return CType(Me(Me.tableIC3070201PaymentInfo.DELFLGColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201PaymentInfo.DELFLGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFINANCECOMCODENull() As Boolean
            Return Me.IsNull(Me.tableIC3070201PaymentInfo.FINANCECOMCODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFINANCECOMCODENull()
            Me(Me.tableIC3070201PaymentInfo.FINANCECOMCODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPAYMENTPERIODNull() As Boolean
            Return Me.IsNull(Me.tableIC3070201PaymentInfo.PAYMENTPERIODColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPAYMENTPERIODNull()
            Me(Me.tableIC3070201PaymentInfo.PAYMENTPERIODColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMONTHLYPAYMENTNull() As Boolean
            Return Me.IsNull(Me.tableIC3070201PaymentInfo.MONTHLYPAYMENTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMONTHLYPAYMENTNull()
            Me(Me.tableIC3070201PaymentInfo.MONTHLYPAYMENTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDEPOSITNull() As Boolean
            Return Me.IsNull(Me.tableIC3070201PaymentInfo.DEPOSITColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDEPOSITNull()
            Me(Me.tableIC3070201PaymentInfo.DEPOSITColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBONUSPAYMENTNull() As Boolean
            Return Me.IsNull(Me.tableIC3070201PaymentInfo.BONUSPAYMENTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBONUSPAYMENTNull()
            Me(Me.tableIC3070201PaymentInfo.BONUSPAYMENTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDUEDATENull() As Boolean
            Return Me.IsNull(Me.tableIC3070201PaymentInfo.DUEDATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDUEDATENull()
            Me(Me.tableIC3070201PaymentInfo.DUEDATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IC3070201TradeincarInfoRow
        Inherits Global.System.Data.DataRow

        Private tableIC3070201TradeincarInfo As IC3070201TradeincarInfoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIC3070201TradeincarInfo = CType(Me.Table, IC3070201TradeincarInfoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESTIMATEID() As Long
            Get
                Return CType(Me(Me.tableIC3070201TradeincarInfo.ESTIMATEIDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3070201TradeincarInfo.ESTIMATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SEQNO() As Short
            Get
                Return CType(Me(Me.tableIC3070201TradeincarInfo.SEQNOColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableIC3070201TradeincarInfo.SEQNOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ASSESSMENTNO() As Long
            Get
                Try
                    Return CType(Me(Me.tableIC3070201TradeincarInfo.ASSESSMENTNOColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201TradeincarInfo' にある列 'ASSESSMENTNO' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Long)
                Me(Me.tableIC3070201TradeincarInfo.ASSESSMENTNOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VEHICLENAME() As String
            Get
                Return CType(Me(Me.tableIC3070201TradeincarInfo.VEHICLENAMEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201TradeincarInfo.VEHICLENAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ASSESSEDPRICE() As Double
            Get
                Return CType(Me(Me.tableIC3070201TradeincarInfo.ASSESSEDPRICEColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableIC3070201TradeincarInfo.ASSESSEDPRICEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsASSESSMENTNONull() As Boolean
            Return Me.IsNull(Me.tableIC3070201TradeincarInfo.ASSESSMENTNOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetASSESSMENTNONull()
            Me(Me.tableIC3070201TradeincarInfo.ASSESSMENTNOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IC3070201EstInsuranceInfoRow
        Inherits Global.System.Data.DataRow

        Private tableIC3070201EstInsuranceInfo As IC3070201EstInsuranceInfoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIC3070201EstInsuranceInfo = CType(Me.Table, IC3070201EstInsuranceInfoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESTIMATEID() As Long
            Get
                Return CType(Me(Me.tableIC3070201EstInsuranceInfo.ESTIMATEIDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3070201EstInsuranceInfo.ESTIMATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property INSUDVS() As String
            Get
                Return CType(Me(Me.tableIC3070201EstInsuranceInfo.INSUDVSColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstInsuranceInfo.INSUDVSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property INSUCOMCD() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070201EstInsuranceInfo.INSUCOMCDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201EstInsuranceInfo' にある列 'INSUCOMCD' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstInsuranceInfo.INSUCOMCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property INSUKIND() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070201EstInsuranceInfo.INSUKINDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201EstInsuranceInfo' にある列 'INSUKIND' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070201EstInsuranceInfo.INSUKINDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AMOUNT() As Double
            Get
                Try
                    Return CType(Me(Me.tableIC3070201EstInsuranceInfo.AMOUNTColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070201EstInsuranceInfo' にある列 'AMOUNT' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIC3070201EstInsuranceInfo.AMOUNTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsINSUCOMCDNull() As Boolean
            Return Me.IsNull(Me.tableIC3070201EstInsuranceInfo.INSUCOMCDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetINSUCOMCDNull()
            Me(Me.tableIC3070201EstInsuranceInfo.INSUCOMCDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsINSUKINDNull() As Boolean
            Return Me.IsNull(Me.tableIC3070201EstInsuranceInfo.INSUKINDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetINSUKINDNull()
            Me(Me.tableIC3070201EstInsuranceInfo.INSUKINDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableIC3070201EstInsuranceInfo.AMOUNTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAMOUNTNull()
            Me(Me.tableIC3070201EstInsuranceInfo.AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class IC3070201EstimationInfoRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As IC3070201EstimationInfoRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As IC3070201EstimationInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As IC3070201EstimationInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class IC3070201VclOptionInfoRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As IC3070201VclOptionInfoRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As IC3070201VclOptionInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As IC3070201VclOptionInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class IC3070201CustomerInfoRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As IC3070201CustomerInfoRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As IC3070201CustomerInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As IC3070201CustomerInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class IC3070201ChargeInfoRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As IC3070201ChargeInfoRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As IC3070201ChargeInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As IC3070201ChargeInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class IC3070201PaymentInfoRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As IC3070201PaymentInfoRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As IC3070201PaymentInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As IC3070201PaymentInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class IC3070201TradeincarInfoRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As IC3070201TradeincarInfoRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As IC3070201TradeincarInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As IC3070201TradeincarInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class IC3070201EstInsuranceInfoRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As IC3070201EstInsuranceInfoRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As IC3070201EstInsuranceInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As IC3070201EstInsuranceInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
