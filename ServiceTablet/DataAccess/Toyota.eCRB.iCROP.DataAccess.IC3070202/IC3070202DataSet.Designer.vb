'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:4.0.30319.239
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System.Security.Permissions
Imports System.Runtime.Serialization

'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(), _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
 Global.System.ComponentModel.ToolboxItem(True), _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), _
 Global.System.Xml.Serialization.XmlRootAttribute("IC3070202DataSet"), _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")> _
Partial Public Class IC3070202DataSet
    Inherits Global.System.Data.DataSet

    <SecurityPermissionAttribute(SecurityAction.Demand, _
     SerializationFormatter:=True)> _
    Public Overrides Sub GetObjectData( _
           info As SerializationInfo, context As StreamingContext)
        If Not (info Is Nothing) Then

            info.AddValue("derivedValue", True)
            MyBase.GetObjectData(info, context)
        End If

    End Sub

    Private tableIC3070202EstResult As IC3070202EstResultDataTable

    Private tableIC3070202EstimationInfo As IC3070202EstimationInfoDataTable

    Private tableIC3070202EstVclOptionInfo As IC3070202EstVclOptionInfoDataTable

    Private tableIC3070202EstCustomerInfo As IC3070202EstCustomerInfoDataTable

    Private tableIC3070202EstChargeInfo As IC3070202EstChargeInfoDataTable

    Private tableIC3070202EstPaymentInfo As IC3070202EstPaymentInfoDataTable

    Private tableIC3070202EstTradeInCarInfo As IC3070202EstTradeInCarInfoDataTable

    Private tableIC3070202EstInsuranceInfo As IC3070202EstInsuranceInfoDataTable

    Private tableIC3070202EstimateID As IC3070202EstimateIdDataTable

    Private tableIC3070202CreateDate As IC3070202CreateDateDataTable

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("IC3070202EstResult")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070202EstResultDataTable(ds.Tables("IC3070202EstResult")))
            End If
            If (Not (ds.Tables("IC3070202EstimationInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070202EstimationInfoDataTable(ds.Tables("IC3070202EstimationInfo")))
            End If
            If (Not (ds.Tables("IC3070202EstVclOptionInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070202EstVclOptionInfoDataTable(ds.Tables("IC3070202EstVclOptionInfo")))
            End If
            If (Not (ds.Tables("IC3070202EstCustomerInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070202EstCustomerInfoDataTable(ds.Tables("IC3070202EstCustomerInfo")))
            End If
            If (Not (ds.Tables("IC3070202EstChargeInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070202EstChargeInfoDataTable(ds.Tables("IC3070202EstChargeInfo")))
            End If
            If (Not (ds.Tables("IC3070202EstPaymentInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070202EstPaymentInfoDataTable(ds.Tables("IC3070202EstPaymentInfo")))
            End If
            If (Not (ds.Tables("IC3070202EstTradeInCarInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070202EstTradeInCarInfoDataTable(ds.Tables("IC3070202EstTradeInCarInfo")))
            End If
            If (Not (ds.Tables("IC3070202EstInsuranceInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070202EstInsuranceInfoDataTable(ds.Tables("IC3070202EstInsuranceInfo")))
            End If
            If (Not (ds.Tables("IC3070202EstimateId")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070202EstimateIdDataTable(ds.Tables("IC3070202EstimateId")))
            End If
            If (Not (ds.Tables("IC3070202CreateDate")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070202CreateDateDataTable(ds.Tables("IC3070202CreateDate")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property IC3070202EstResult() As IC3070202EstResultDataTable
        Get
            Return Me.tableIC3070202EstResult
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property IC3070202EstimationInfo() As IC3070202EstimationInfoDataTable
        Get
            Return Me.tableIC3070202EstimationInfo
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property IC3070202EstVclOptionInfo() As IC3070202EstVclOptionInfoDataTable
        Get
            Return Me.tableIC3070202EstVclOptionInfo
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property IC3070202EstCustomerInfo() As IC3070202EstCustomerInfoDataTable
        Get
            Return Me.tableIC3070202EstCustomerInfo
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property IC3070202EstChargeInfo() As IC3070202EstChargeInfoDataTable
        Get
            Return Me.tableIC3070202EstChargeInfo
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property IC3070202EstPaymentInfo() As IC3070202EstPaymentInfoDataTable
        Get
            Return Me.tableIC3070202EstPaymentInfo
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property IC3070202EstTradeInCarInfo() As IC3070202EstTradeInCarInfoDataTable
        Get
            Return Me.tableIC3070202EstTradeInCarInfo
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property IC3070202EstInsuranceInfo() As IC3070202EstInsuranceInfoDataTable
        Get
            Return Me.tableIC3070202EstInsuranceInfo
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property IC3070202EstimateID() As IC3070202EstimateIdDataTable
        Get
            Return Me.tableIC3070202EstimateID
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property IC3070202CreateDate() As IC3070202CreateDateDataTable
        Get
            Return Me.tableIC3070202CreateDate
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As IC3070202DataSet = CType(MyBase.Clone, IC3070202DataSet)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("IC3070202EstResult")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070202EstResultDataTable(ds.Tables("IC3070202EstResult")))
            End If
            If (Not (ds.Tables("IC3070202EstimationInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070202EstimationInfoDataTable(ds.Tables("IC3070202EstimationInfo")))
            End If
            If (Not (ds.Tables("IC3070202EstVclOptionInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070202EstVclOptionInfoDataTable(ds.Tables("IC3070202EstVclOptionInfo")))
            End If
            If (Not (ds.Tables("IC3070202EstCustomerInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070202EstCustomerInfoDataTable(ds.Tables("IC3070202EstCustomerInfo")))
            End If
            If (Not (ds.Tables("IC3070202EstChargeInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070202EstChargeInfoDataTable(ds.Tables("IC3070202EstChargeInfo")))
            End If
            If (Not (ds.Tables("IC3070202EstPaymentInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070202EstPaymentInfoDataTable(ds.Tables("IC3070202EstPaymentInfo")))
            End If
            If (Not (ds.Tables("IC3070202EstTradeInCarInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070202EstTradeInCarInfoDataTable(ds.Tables("IC3070202EstTradeInCarInfo")))
            End If
            If (Not (ds.Tables("IC3070202EstInsuranceInfo")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070202EstInsuranceInfoDataTable(ds.Tables("IC3070202EstInsuranceInfo")))
            End If
            If (Not (ds.Tables("IC3070202EstimateId")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070202EstimateIdDataTable(ds.Tables("IC3070202EstimateId")))
            End If
            If (Not (ds.Tables("IC3070202CreateDate")) Is Nothing) Then
                MyBase.Tables.Add(New IC3070202CreateDateDataTable(ds.Tables("IC3070202CreateDate")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableIC3070202EstResult = CType(MyBase.Tables("IC3070202EstResult"), IC3070202EstResultDataTable)
        If (initTable = True) Then
            If (Not (Me.tableIC3070202EstResult) Is Nothing) Then
                Me.tableIC3070202EstResult.InitVars()
            End If
        End If
        Me.tableIC3070202EstimationInfo = CType(MyBase.Tables("IC3070202EstimationInfo"), IC3070202EstimationInfoDataTable)
        If (initTable = True) Then
            If (Not (Me.tableIC3070202EstimationInfo) Is Nothing) Then
                Me.tableIC3070202EstimationInfo.InitVars()
            End If
        End If
        Me.tableIC3070202EstVclOptionInfo = CType(MyBase.Tables("IC3070202EstVclOptionInfo"), IC3070202EstVclOptionInfoDataTable)
        If (initTable = True) Then
            If (Not (Me.tableIC3070202EstVclOptionInfo) Is Nothing) Then
                Me.tableIC3070202EstVclOptionInfo.InitVars()
            End If
        End If
        Me.tableIC3070202EstCustomerInfo = CType(MyBase.Tables("IC3070202EstCustomerInfo"), IC3070202EstCustomerInfoDataTable)
        If (initTable = True) Then
            If (Not (Me.tableIC3070202EstCustomerInfo) Is Nothing) Then
                Me.tableIC3070202EstCustomerInfo.InitVars()
            End If
        End If
        Me.tableIC3070202EstChargeInfo = CType(MyBase.Tables("IC3070202EstChargeInfo"), IC3070202EstChargeInfoDataTable)
        If (initTable = True) Then
            If (Not (Me.tableIC3070202EstChargeInfo) Is Nothing) Then
                Me.tableIC3070202EstChargeInfo.InitVars()
            End If
        End If
        Me.tableIC3070202EstPaymentInfo = CType(MyBase.Tables("IC3070202EstPaymentInfo"), IC3070202EstPaymentInfoDataTable)
        If (initTable = True) Then
            If (Not (Me.tableIC3070202EstPaymentInfo) Is Nothing) Then
                Me.tableIC3070202EstPaymentInfo.InitVars()
            End If
        End If
        Me.tableIC3070202EstTradeInCarInfo = CType(MyBase.Tables("IC3070202EstTradeInCarInfo"), IC3070202EstTradeInCarInfoDataTable)
        If (initTable = True) Then
            If (Not (Me.tableIC3070202EstTradeInCarInfo) Is Nothing) Then
                Me.tableIC3070202EstTradeInCarInfo.InitVars()
            End If
        End If
        Me.tableIC3070202EstInsuranceInfo = CType(MyBase.Tables("IC3070202EstInsuranceInfo"), IC3070202EstInsuranceInfoDataTable)
        If (initTable = True) Then
            If (Not (Me.tableIC3070202EstInsuranceInfo) Is Nothing) Then
                Me.tableIC3070202EstInsuranceInfo.InitVars()
            End If
        End If
        Me.tableIC3070202EstimateID = CType(MyBase.Tables("IC3070202EstimateId"), IC3070202EstimateIdDataTable)
        If (initTable = True) Then
            If (Not (Me.tableIC3070202EstimateID) Is Nothing) Then
                Me.tableIC3070202EstimateID.InitVars()
            End If
        End If
        Me.tableIC3070202CreateDate = CType(MyBase.Tables("IC3070202CreateDate"), IC3070202CreateDateDataTable)
        If (initTable = True) Then
            If (Not (Me.tableIC3070202CreateDate) Is Nothing) Then
                Me.tableIC3070202CreateDate.InitVars()
            End If
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
        Me.DataSetName = "IC3070202DataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/IC3070202DataSet.xsd"
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableIC3070202EstResult = New IC3070202EstResultDataTable()
        MyBase.Tables.Add(Me.tableIC3070202EstResult)
        Me.tableIC3070202EstimationInfo = New IC3070202EstimationInfoDataTable()
        MyBase.Tables.Add(Me.tableIC3070202EstimationInfo)
        Me.tableIC3070202EstVclOptionInfo = New IC3070202EstVclOptionInfoDataTable()
        MyBase.Tables.Add(Me.tableIC3070202EstVclOptionInfo)
        Me.tableIC3070202EstCustomerInfo = New IC3070202EstCustomerInfoDataTable()
        MyBase.Tables.Add(Me.tableIC3070202EstCustomerInfo)
        Me.tableIC3070202EstChargeInfo = New IC3070202EstChargeInfoDataTable()
        MyBase.Tables.Add(Me.tableIC3070202EstChargeInfo)
        Me.tableIC3070202EstPaymentInfo = New IC3070202EstPaymentInfoDataTable()
        MyBase.Tables.Add(Me.tableIC3070202EstPaymentInfo)
        Me.tableIC3070202EstTradeInCarInfo = New IC3070202EstTradeInCarInfoDataTable()
        MyBase.Tables.Add(Me.tableIC3070202EstTradeInCarInfo)
        Me.tableIC3070202EstInsuranceInfo = New IC3070202EstInsuranceInfoDataTable()
        MyBase.Tables.Add(Me.tableIC3070202EstInsuranceInfo)
        Me.tableIC3070202EstimateID = New IC3070202EstimateIdDataTable()
        MyBase.Tables.Add(Me.tableIC3070202EstimateID)
        Me.tableIC3070202CreateDate = New IC3070202CreateDateDataTable()
        MyBase.Tables.Add(Me.tableIC3070202CreateDate)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeIC3070202EstResult() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeIC3070202EstimationInfo() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeIC3070202EstVclOptionInfo() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeIC3070202EstCustomerInfo() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeIC3070202EstChargeInfo() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeIC3070202EstPaymentInfo() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeIC3070202EstTradeInCarInfo() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeIC3070202EstInsuranceInfo() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeIC3070202EstimateID() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeIC3070202CreateDate() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As IC3070202DataSet = New IC3070202DataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub IC3070202EstResultRowChangeEventHandler(ByVal sender As Object, ByVal e As IC3070202EstResultRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub IC3070202EstimationInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As IC3070202EstimationInfoRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub IC3070202EstVclOptionInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As IC3070202EstVclOptionInfoRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub IC3070202EstCustomerInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As IC3070202EstCustomerInfoRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub IC3070202EstChargeInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As IC3070202EstChargeInfoRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub IC3070202EstPaymentInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As IC3070202EstPaymentInfoRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub IC3070202EstTradeInCarInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As IC3070202EstTradeInCarInfoRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub IC3070202EstInsuranceInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As IC3070202EstInsuranceInfoRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub IC3070202EstimateIdRowChangeEventHandler(ByVal sender As Object, ByVal e As IC3070202EstimateIdRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub IC3070202CreateDateRowChangeEventHandler(ByVal sender As Object, ByVal e As IC3070202CreateDateRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class IC3070202EstResultDataTable
        Inherits Global.System.Data.TypedTableBase(Of IC3070202EstResultRow)

        <SecurityPermissionAttribute(SecurityAction.Demand, _
         SerializationFormatter:=True)> _
        Public Overrides Sub GetObjectData( _
           info As SerializationInfo, context As StreamingContext)
            If Not (info Is Nothing) Then

                info.AddValue("derivedValue", True)
                MyBase.GetObjectData(info, context)
            End If

        End Sub

        Private columnIsSuccess As Global.System.Data.DataColumn

        Private columnEstimateId As Global.System.Data.DataColumn

        Private columnCreateDate As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "IC3070202EstResult"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IsSuccessColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsSuccess
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EstimateIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEstimateId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CreateDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreateDate
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As IC3070202EstResultRow
            Get
                Return CType(Me.Rows(index), IC3070202EstResultRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstResultRowChanging As IC3070202EstResultRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstResultRowChanged As IC3070202EstResultRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstResultRowDeleting As IC3070202EstResultRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstResultRowDeleted As IC3070202EstResultRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddIC3070202EstResultRow(ByVal row As IC3070202EstResultRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddIC3070202EstResultRow(ByVal IsSuccess As Boolean, ByVal EstimateId As Long, ByVal CreateDate As Date) As IC3070202EstResultRow
            Dim rowIC3070202EstResultRow As IC3070202EstResultRow = CType(Me.NewRow, IC3070202EstResultRow)
            Dim columnValuesArray() As Object = New Object() {IsSuccess, EstimateId, CreateDate}
            rowIC3070202EstResultRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIC3070202EstResultRow)
            Return rowIC3070202EstResultRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IC3070202EstResultDataTable = CType(MyBase.Clone, IC3070202EstResultDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IC3070202EstResultDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnIsSuccess = MyBase.Columns("IsSuccess")
            Me.columnEstimateId = MyBase.Columns("EstimateId")
            Me.columnCreateDate = MyBase.Columns("CreateDate")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnIsSuccess = New Global.System.Data.DataColumn("IsSuccess", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsSuccess)
            Me.columnEstimateId = New Global.System.Data.DataColumn("EstimateId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEstimateId)
            Me.columnCreateDate = New Global.System.Data.DataColumn("CreateDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreateDate)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewIC3070202EstResultRow() As IC3070202EstResultRow
            Return CType(Me.NewRow, IC3070202EstResultRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IC3070202EstResultRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IC3070202EstResultRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IC3070202EstResultRowChangedEvent) Is Nothing) Then
                RaiseEvent IC3070202EstResultRowChanged(Me, New IC3070202EstResultRowChangeEvent(CType(e.Row, IC3070202EstResultRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IC3070202EstResultRowChangingEvent) Is Nothing) Then
                RaiseEvent IC3070202EstResultRowChanging(Me, New IC3070202EstResultRowChangeEvent(CType(e.Row, IC3070202EstResultRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IC3070202EstResultRowDeletedEvent) Is Nothing) Then
                RaiseEvent IC3070202EstResultRowDeleted(Me, New IC3070202EstResultRowChangeEvent(CType(e.Row, IC3070202EstResultRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IC3070202EstResultRowDeletingEvent) Is Nothing) Then
                RaiseEvent IC3070202EstResultRowDeleting(Me, New IC3070202EstResultRowChangeEvent(CType(e.Row, IC3070202EstResultRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveIC3070202EstResultRow(ByVal row As IC3070202EstResultRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3070202DataSet = New IC3070202DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IC3070202EstResultDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class IC3070202EstimationInfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of IC3070202EstimationInfoRow)

        <SecurityPermissionAttribute(SecurityAction.Demand, _
         SerializationFormatter:=True)> _
        Public Overrides Sub GetObjectData( _
           info As SerializationInfo, context As StreamingContext)
            If Not (info Is Nothing) Then

                info.AddValue("derivedValue", True)
                MyBase.GetObjectData(info, context)
            End If

        End Sub

        Private columnESTIMATEID As Global.System.Data.DataColumn

        Private columnDLRCD As Global.System.Data.DataColumn

        Private columnSTRCD As Global.System.Data.DataColumn

        Private columnFLLWUPBOX_SEQNO As Global.System.Data.DataColumn

        Private columnCNT_STRCD As Global.System.Data.DataColumn

        Private columnCNT_STAFF As Global.System.Data.DataColumn

        Private columnCSTKIND As Global.System.Data.DataColumn

        Private columnCUSTOMERCLASS As Global.System.Data.DataColumn

        Private columnCRCUSTID As Global.System.Data.DataColumn

        Private columnCUSTID As Global.System.Data.DataColumn

        Private columnDELIDATE As Global.System.Data.DataColumn

        Private columnDISCOUNTPRICE As Global.System.Data.DataColumn

        Private columnMEMO As Global.System.Data.DataColumn

        Private columnESTPRINTDATE As Global.System.Data.DataColumn

        Private columnCONTRACTNO As Global.System.Data.DataColumn

        Private columnCONTPRINTFLG As Global.System.Data.DataColumn

        Private columnCONTRACTFLG As Global.System.Data.DataColumn

        Private columnCONTRACTDATE As Global.System.Data.DataColumn

        Private columnDELFLG As Global.System.Data.DataColumn

        Private columnTCVVERSION As Global.System.Data.DataColumn

        Private columnSERIESCD As Global.System.Data.DataColumn

        Private columnSERIESNM As Global.System.Data.DataColumn

        Private columnMODELCD As Global.System.Data.DataColumn

        Private columnMODELNM As Global.System.Data.DataColumn

        Private columnBODYTYPE As Global.System.Data.DataColumn

        Private columnDRIVESYSTEM As Global.System.Data.DataColumn

        Private columnDISPLACEMENT As Global.System.Data.DataColumn

        Private columnTRANSMISSION As Global.System.Data.DataColumn

        Private columnSUFFIXCD As Global.System.Data.DataColumn

        Private columnEXTCOLORCD As Global.System.Data.DataColumn

        Private columnEXTCOLOR As Global.System.Data.DataColumn

        Private columnEXTAMOUNT As Global.System.Data.DataColumn

        Private columnINTCOLORCD As Global.System.Data.DataColumn

        Private columnINTCOLOR As Global.System.Data.DataColumn

        Private columnINTAMOUNT As Global.System.Data.DataColumn

        Private columnMODELNUMBER As Global.System.Data.DataColumn

        Private columnBASEPRICE As Global.System.Data.DataColumn

        Private columnCREATEDATE As Global.System.Data.DataColumn

        Private columnCREATEACCOUNT As Global.System.Data.DataColumn

        Private columnUPDATEACCOUNT As Global.System.Data.DataColumn

        Private columnCREATEID As Global.System.Data.DataColumn

        Private columnUPDATEID As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "IC3070202EstimationInfo"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESTIMATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATEID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DLRCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDLRCD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property STRCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTRCD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FLLWUPBOX_SEQNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFLLWUPBOX_SEQNO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CNT_STRCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCNT_STRCD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CNT_STAFFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCNT_STAFF
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CSTKINDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCSTKIND
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CUSTOMERCLASSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTOMERCLASS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CRCUSTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCRCUSTID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CUSTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DELIDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDELIDATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DISCOUNTPRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISCOUNTPRICE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESTPRINTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTPRINTDATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONTRACTNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTRACTNO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONTPRINTFLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTPRINTFLG
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONTRACTFLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTRACTFLG
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONTRACTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTRACTDATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DELFLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDELFLG
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TCVVERSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTCVVERSION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SERIESCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIESCD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SERIESNMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIESNM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MODELCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODELCD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MODELNMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODELNM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BODYTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBODYTYPE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DRIVESYSTEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDRIVESYSTEM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DISPLACEMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISPLACEMENT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TRANSMISSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSMISSION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SUFFIXCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUFFIXCD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EXTCOLORCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTCOLORCD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EXTCOLORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTCOLOR
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EXTAMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTAMOUNT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property INTCOLORCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINTCOLORCD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property INTCOLORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINTCOLOR
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property INTAMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINTAMOUNT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MODELNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODELNUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BASEPRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASEPRICE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CREATEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CREATEACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEACCOUNT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property UPDATEACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEACCOUNT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CREATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property UPDATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As IC3070202EstimationInfoRow
            Get
                Return CType(Me.Rows(index), IC3070202EstimationInfoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstimationInfoRowChanging As IC3070202EstimationInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstimationInfoRowChanged As IC3070202EstimationInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstimationInfoRowDeleting As IC3070202EstimationInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstimationInfoRowDeleted As IC3070202EstimationInfoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddIC3070202EstimationInfoRow(ByVal row As IC3070202EstimationInfoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddIC3070202EstimationInfoRow( _
                    ByVal ESTIMATEID As Long, _
                    ByVal DLRCD As String, _
                    ByVal STRCD As String, _
                    ByVal FLLWUPBOX_SEQNO As Long, _
                    ByVal CNT_STRCD As String, _
                    ByVal CNT_STAFF As String, _
                    ByVal CSTKIND As String, _
                    ByVal CUSTOMERCLASS As String, _
                    ByVal CRCUSTID As String, _
                    ByVal CUSTID As String, _
                    ByVal DELIDATE As Date, _
                    ByVal DISCOUNTPRICE As Double, _
                    ByVal MEMO As String, _
                    ByVal ESTPRINTDATE As Date, _
                    ByVal CONTRACTNO As String, _
                    ByVal CONTPRINTFLG As String, _
                    ByVal CONTRACTFLG As String, _
                    ByVal CONTRACTDATE As Date, _
                    ByVal DELFLG As String, _
                    ByVal TCVVERSION As String, _
                    ByVal SERIESCD As String, _
                    ByVal SERIESNM As String, _
                    ByVal MODELCD As String, _
                    ByVal MODELNM As String, _
                    ByVal BODYTYPE As String, _
                    ByVal DRIVESYSTEM As String, _
                    ByVal DISPLACEMENT As String, _
                    ByVal TRANSMISSION As String, _
                    ByVal SUFFIXCD As String, _
                    ByVal EXTCOLORCD As String, _
                    ByVal EXTCOLOR As String, _
                    ByVal EXTAMOUNT As Double, _
                    ByVal INTCOLORCD As String, _
                    ByVal INTCOLOR As String, _
                    ByVal INTAMOUNT As Double, _
                    ByVal MODELNUMBER As String, _
                    ByVal BASEPRICE As Double, _
                    ByVal CREATEDATE As Date, _
                    ByVal CREATEACCOUNT As String, _
                    ByVal UPDATEACCOUNT As String, _
                    ByVal CREATEID As String, _
                    ByVal UPDATEID As String) As IC3070202EstimationInfoRow
            Dim rowIC3070202EstimationInfoRow As IC3070202EstimationInfoRow = CType(Me.NewRow, IC3070202EstimationInfoRow)
            Dim columnValuesArray() As Object = New Object() {ESTIMATEID, DLRCD, STRCD, FLLWUPBOX_SEQNO, CNT_STRCD, CNT_STAFF, CSTKIND, CUSTOMERCLASS, CRCUSTID, CUSTID, DELIDATE, DISCOUNTPRICE, MEMO, ESTPRINTDATE, CONTRACTNO, CONTPRINTFLG, CONTRACTFLG, CONTRACTDATE, DELFLG, TCVVERSION, SERIESCD, SERIESNM, MODELCD, MODELNM, BODYTYPE, DRIVESYSTEM, DISPLACEMENT, TRANSMISSION, SUFFIXCD, EXTCOLORCD, EXTCOLOR, EXTAMOUNT, INTCOLORCD, INTCOLOR, INTAMOUNT, MODELNUMBER, BASEPRICE, CREATEDATE, CREATEACCOUNT, UPDATEACCOUNT, CREATEID, UPDATEID}
            rowIC3070202EstimationInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIC3070202EstimationInfoRow)
            Return rowIC3070202EstimationInfoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IC3070202EstimationInfoDataTable = CType(MyBase.Clone, IC3070202EstimationInfoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IC3070202EstimationInfoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnESTIMATEID = MyBase.Columns("ESTIMATEID")
            Me.columnDLRCD = MyBase.Columns("DLRCD")
            Me.columnSTRCD = MyBase.Columns("STRCD")
            Me.columnFLLWUPBOX_SEQNO = MyBase.Columns("FLLWUPBOX_SEQNO")
            Me.columnCNT_STRCD = MyBase.Columns("CNT_STRCD")
            Me.columnCNT_STAFF = MyBase.Columns("CNT_STAFF")
            Me.columnCSTKIND = MyBase.Columns("CSTKIND")
            Me.columnCUSTOMERCLASS = MyBase.Columns("CUSTOMERCLASS")
            Me.columnCRCUSTID = MyBase.Columns("CRCUSTID")
            Me.columnCUSTID = MyBase.Columns("CUSTID")
            Me.columnDELIDATE = MyBase.Columns("DELIDATE")
            Me.columnDISCOUNTPRICE = MyBase.Columns("DISCOUNTPRICE")
            Me.columnMEMO = MyBase.Columns("MEMO")
            Me.columnESTPRINTDATE = MyBase.Columns("ESTPRINTDATE")
            Me.columnCONTRACTNO = MyBase.Columns("CONTRACTNO")
            Me.columnCONTPRINTFLG = MyBase.Columns("CONTPRINTFLG")
            Me.columnCONTRACTFLG = MyBase.Columns("CONTRACTFLG")
            Me.columnCONTRACTDATE = MyBase.Columns("CONTRACTDATE")
            Me.columnDELFLG = MyBase.Columns("DELFLG")
            Me.columnTCVVERSION = MyBase.Columns("TCVVERSION")
            Me.columnSERIESCD = MyBase.Columns("SERIESCD")
            Me.columnSERIESNM = MyBase.Columns("SERIESNM")
            Me.columnMODELCD = MyBase.Columns("MODELCD")
            Me.columnMODELNM = MyBase.Columns("MODELNM")
            Me.columnBODYTYPE = MyBase.Columns("BODYTYPE")
            Me.columnDRIVESYSTEM = MyBase.Columns("DRIVESYSTEM")
            Me.columnDISPLACEMENT = MyBase.Columns("DISPLACEMENT")
            Me.columnTRANSMISSION = MyBase.Columns("TRANSMISSION")
            Me.columnSUFFIXCD = MyBase.Columns("SUFFIXCD")
            Me.columnEXTCOLORCD = MyBase.Columns("EXTCOLORCD")
            Me.columnEXTCOLOR = MyBase.Columns("EXTCOLOR")
            Me.columnEXTAMOUNT = MyBase.Columns("EXTAMOUNT")
            Me.columnINTCOLORCD = MyBase.Columns("INTCOLORCD")
            Me.columnINTCOLOR = MyBase.Columns("INTCOLOR")
            Me.columnINTAMOUNT = MyBase.Columns("INTAMOUNT")
            Me.columnMODELNUMBER = MyBase.Columns("MODELNUMBER")
            Me.columnBASEPRICE = MyBase.Columns("BASEPRICE")
            Me.columnCREATEDATE = MyBase.Columns("CREATEDATE")
            Me.columnCREATEACCOUNT = MyBase.Columns("CREATEACCOUNT")
            Me.columnUPDATEACCOUNT = MyBase.Columns("UPDATEACCOUNT")
            Me.columnCREATEID = MyBase.Columns("CREATEID")
            Me.columnUPDATEID = MyBase.Columns("UPDATEID")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnESTIMATEID = New Global.System.Data.DataColumn("ESTIMATEID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATEID)
            Me.columnDLRCD = New Global.System.Data.DataColumn("DLRCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDLRCD)
            Me.columnSTRCD = New Global.System.Data.DataColumn("STRCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTRCD)
            Me.columnFLLWUPBOX_SEQNO = New Global.System.Data.DataColumn("FLLWUPBOX_SEQNO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFLLWUPBOX_SEQNO)
            Me.columnCNT_STRCD = New Global.System.Data.DataColumn("CNT_STRCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCNT_STRCD)
            Me.columnCNT_STAFF = New Global.System.Data.DataColumn("CNT_STAFF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCNT_STAFF)
            Me.columnCSTKIND = New Global.System.Data.DataColumn("CSTKIND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCSTKIND)
            Me.columnCUSTOMERCLASS = New Global.System.Data.DataColumn("CUSTOMERCLASS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTOMERCLASS)
            Me.columnCRCUSTID = New Global.System.Data.DataColumn("CRCUSTID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCRCUSTID)
            Me.columnCUSTID = New Global.System.Data.DataColumn("CUSTID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTID)
            Me.columnDELIDATE = New Global.System.Data.DataColumn("DELIDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDELIDATE)
            Me.columnDISCOUNTPRICE = New Global.System.Data.DataColumn("DISCOUNTPRICE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISCOUNTPRICE)
            Me.columnMEMO = New Global.System.Data.DataColumn("MEMO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMO)
            Me.columnESTPRINTDATE = New Global.System.Data.DataColumn("ESTPRINTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTPRINTDATE)
            Me.columnCONTRACTNO = New Global.System.Data.DataColumn("CONTRACTNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTRACTNO)
            Me.columnCONTPRINTFLG = New Global.System.Data.DataColumn("CONTPRINTFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTPRINTFLG)
            Me.columnCONTRACTFLG = New Global.System.Data.DataColumn("CONTRACTFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTRACTFLG)
            Me.columnCONTRACTDATE = New Global.System.Data.DataColumn("CONTRACTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTRACTDATE)
            Me.columnDELFLG = New Global.System.Data.DataColumn("DELFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDELFLG)
            Me.columnTCVVERSION = New Global.System.Data.DataColumn("TCVVERSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTCVVERSION)
            Me.columnSERIESCD = New Global.System.Data.DataColumn("SERIESCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIESCD)
            Me.columnSERIESNM = New Global.System.Data.DataColumn("SERIESNM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIESNM)
            Me.columnMODELCD = New Global.System.Data.DataColumn("MODELCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODELCD)
            Me.columnMODELNM = New Global.System.Data.DataColumn("MODELNM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODELNM)
            Me.columnBODYTYPE = New Global.System.Data.DataColumn("BODYTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBODYTYPE)
            Me.columnDRIVESYSTEM = New Global.System.Data.DataColumn("DRIVESYSTEM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDRIVESYSTEM)
            Me.columnDISPLACEMENT = New Global.System.Data.DataColumn("DISPLACEMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISPLACEMENT)
            Me.columnTRANSMISSION = New Global.System.Data.DataColumn("TRANSMISSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSMISSION)
            Me.columnSUFFIXCD = New Global.System.Data.DataColumn("SUFFIXCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUFFIXCD)
            Me.columnEXTCOLORCD = New Global.System.Data.DataColumn("EXTCOLORCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTCOLORCD)
            Me.columnEXTCOLOR = New Global.System.Data.DataColumn("EXTCOLOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTCOLOR)
            Me.columnEXTAMOUNT = New Global.System.Data.DataColumn("EXTAMOUNT", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTAMOUNT)
            Me.columnINTCOLORCD = New Global.System.Data.DataColumn("INTCOLORCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINTCOLORCD)
            Me.columnINTCOLOR = New Global.System.Data.DataColumn("INTCOLOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINTCOLOR)
            Me.columnINTAMOUNT = New Global.System.Data.DataColumn("INTAMOUNT", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINTAMOUNT)
            Me.columnMODELNUMBER = New Global.System.Data.DataColumn("MODELNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODELNUMBER)
            Me.columnBASEPRICE = New Global.System.Data.DataColumn("BASEPRICE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASEPRICE)
            Me.columnCREATEDATE = New Global.System.Data.DataColumn("CREATEDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDATE)
            Me.columnCREATEACCOUNT = New Global.System.Data.DataColumn("CREATEACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEACCOUNT)
            Me.columnUPDATEACCOUNT = New Global.System.Data.DataColumn("UPDATEACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEACCOUNT)
            Me.columnCREATEID = New Global.System.Data.DataColumn("CREATEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEID)
            Me.columnUPDATEID = New Global.System.Data.DataColumn("UPDATEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEID)
            Me.columnESTIMATEID.AllowDBNull = False
            Me.columnDLRCD.AllowDBNull = False
            Me.columnDLRCD.MaxLength = 5
            Me.columnSTRCD.MaxLength = 3
            Me.columnCNT_STRCD.MaxLength = 3
            Me.columnCNT_STAFF.MaxLength = 20
            Me.columnCSTKIND.MaxLength = 1
            Me.columnCUSTOMERCLASS.MaxLength = 1
            Me.columnCRCUSTID.MaxLength = 19
            Me.columnCUSTID.MaxLength = 18
            Me.columnMEMO.MaxLength = 1024
            Me.columnCONTRACTNO.MaxLength = 13
            Me.columnCONTPRINTFLG.AllowDBNull = False
            Me.columnCONTPRINTFLG.MaxLength = 1
            Me.columnCONTRACTFLG.AllowDBNull = False
            Me.columnCONTRACTFLG.MaxLength = 1
            Me.columnDELFLG.AllowDBNull = False
            Me.columnDELFLG.MaxLength = 1
            Me.columnTCVVERSION.AllowDBNull = False
            Me.columnTCVVERSION.MaxLength = 6
            Me.columnSERIESCD.AllowDBNull = False
            Me.columnSERIESCD.MaxLength = 64
            Me.columnSERIESNM.AllowDBNull = False
            Me.columnSERIESNM.MaxLength = 128
            Me.columnMODELCD.AllowDBNull = False
            Me.columnMODELCD.MaxLength = 32
            Me.columnMODELNM.AllowDBNull = False
            Me.columnMODELNM.MaxLength = 128
            Me.columnBODYTYPE.AllowDBNull = False
            Me.columnBODYTYPE.MaxLength = 64
            Me.columnDRIVESYSTEM.AllowDBNull = False
            Me.columnDRIVESYSTEM.MaxLength = 64
            Me.columnDISPLACEMENT.AllowDBNull = False
            Me.columnDISPLACEMENT.MaxLength = 64
            Me.columnTRANSMISSION.AllowDBNull = False
            Me.columnTRANSMISSION.MaxLength = 64
            Me.columnSUFFIXCD.AllowDBNull = False
            Me.columnSUFFIXCD.MaxLength = 32
            Me.columnEXTCOLORCD.AllowDBNull = False
            Me.columnEXTCOLORCD.MaxLength = 6
            Me.columnEXTCOLOR.AllowDBNull = False
            Me.columnEXTCOLOR.MaxLength = 50
            Me.columnEXTAMOUNT.AllowDBNull = False
            Me.columnINTCOLORCD.AllowDBNull = False
            Me.columnINTCOLORCD.MaxLength = 7
            Me.columnINTCOLOR.AllowDBNull = False
            Me.columnINTCOLOR.MaxLength = 50
            Me.columnINTAMOUNT.AllowDBNull = False
            Me.columnMODELNUMBER.AllowDBNull = False
            Me.columnMODELNUMBER.MaxLength = 32
            Me.columnBASEPRICE.AllowDBNull = False
            Me.columnCREATEACCOUNT.AllowDBNull = False
            Me.columnCREATEACCOUNT.MaxLength = 20
            Me.columnUPDATEACCOUNT.AllowDBNull = False
            Me.columnUPDATEACCOUNT.MaxLength = 20
            Me.columnCREATEID.AllowDBNull = False
            Me.columnCREATEID.MaxLength = 16
            Me.columnUPDATEID.AllowDBNull = False
            Me.columnUPDATEID.MaxLength = 16
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewIC3070202EstimationInfoRow() As IC3070202EstimationInfoRow
            Return CType(Me.NewRow, IC3070202EstimationInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IC3070202EstimationInfoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IC3070202EstimationInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IC3070202EstimationInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent IC3070202EstimationInfoRowChanged(Me, New IC3070202EstimationInfoRowChangeEvent(CType(e.Row, IC3070202EstimationInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IC3070202EstimationInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent IC3070202EstimationInfoRowChanging(Me, New IC3070202EstimationInfoRowChangeEvent(CType(e.Row, IC3070202EstimationInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IC3070202EstimationInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent IC3070202EstimationInfoRowDeleted(Me, New IC3070202EstimationInfoRowChangeEvent(CType(e.Row, IC3070202EstimationInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IC3070202EstimationInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent IC3070202EstimationInfoRowDeleting(Me, New IC3070202EstimationInfoRowChangeEvent(CType(e.Row, IC3070202EstimationInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveIC3070202EstimationInfoRow(ByVal row As IC3070202EstimationInfoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3070202DataSet = New IC3070202DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IC3070202EstimationInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class IC3070202EstVclOptionInfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of IC3070202EstVclOptionInfoRow)

        <SecurityPermissionAttribute(SecurityAction.Demand, _
         SerializationFormatter:=True)> _
        Public Overrides Sub GetObjectData( _
           info As SerializationInfo, context As StreamingContext)
            If Not (info Is Nothing) Then

                info.AddValue("derivedValue", True)
                MyBase.GetObjectData(info, context)
            End If

        End Sub

        Private columnESTIMATEID As Global.System.Data.DataColumn

        Private columnOPTIONPART As Global.System.Data.DataColumn

        Private columnOPTIONCODE As Global.System.Data.DataColumn

        Private columnOPTIONNAME As Global.System.Data.DataColumn

        Private columnPRICE As Global.System.Data.DataColumn

        Private columnINSTALLCOST As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "IC3070202EstVclOptionInfo"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESTIMATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATEID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OPTIONPARTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPTIONPART
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OPTIONCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPTIONCODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OPTIONNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPTIONNAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRICE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property INSTALLCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTALLCOST
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As IC3070202EstVclOptionInfoRow
            Get
                Return CType(Me.Rows(index), IC3070202EstVclOptionInfoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstVclOptionInfoRowChanging As IC3070202EstVclOptionInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstVclOptionInfoRowChanged As IC3070202EstVclOptionInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstVclOptionInfoRowDeleting As IC3070202EstVclOptionInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstVclOptionInfoRowDeleted As IC3070202EstVclOptionInfoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddIC3070202EstVclOptionInfoRow(ByVal row As IC3070202EstVclOptionInfoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddIC3070202EstVclOptionInfoRow(ByVal ESTIMATEID As Long, ByVal OPTIONPART As String, ByVal OPTIONCODE As String, ByVal OPTIONNAME As String, ByVal PRICE As Double, ByVal INSTALLCOST As Double) As IC3070202EstVclOptionInfoRow
            Dim rowIC3070202EstVclOptionInfoRow As IC3070202EstVclOptionInfoRow = CType(Me.NewRow, IC3070202EstVclOptionInfoRow)
            Dim columnValuesArray() As Object = New Object() {ESTIMATEID, OPTIONPART, OPTIONCODE, OPTIONNAME, PRICE, INSTALLCOST}
            rowIC3070202EstVclOptionInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIC3070202EstVclOptionInfoRow)
            Return rowIC3070202EstVclOptionInfoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByESTIMATEIDOPTIONPARTOPTIONCODE(ByVal ESTIMATEID As Long, ByVal OPTIONPART As String, ByVal OPTIONCODE As String) As IC3070202EstVclOptionInfoRow
            Return CType(Me.Rows.Find(New Object() {ESTIMATEID, OPTIONPART, OPTIONCODE}), IC3070202EstVclOptionInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IC3070202EstVclOptionInfoDataTable = CType(MyBase.Clone, IC3070202EstVclOptionInfoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IC3070202EstVclOptionInfoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnESTIMATEID = MyBase.Columns("ESTIMATEID")
            Me.columnOPTIONPART = MyBase.Columns("OPTIONPART")
            Me.columnOPTIONCODE = MyBase.Columns("OPTIONCODE")
            Me.columnOPTIONNAME = MyBase.Columns("OPTIONNAME")
            Me.columnPRICE = MyBase.Columns("PRICE")
            Me.columnINSTALLCOST = MyBase.Columns("INSTALLCOST")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnESTIMATEID = New Global.System.Data.DataColumn("ESTIMATEID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATEID)
            Me.columnOPTIONPART = New Global.System.Data.DataColumn("OPTIONPART", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPTIONPART)
            Me.columnOPTIONCODE = New Global.System.Data.DataColumn("OPTIONCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPTIONCODE)
            Me.columnOPTIONNAME = New Global.System.Data.DataColumn("OPTIONNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPTIONNAME)
            Me.columnPRICE = New Global.System.Data.DataColumn("PRICE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRICE)
            Me.columnINSTALLCOST = New Global.System.Data.DataColumn("INSTALLCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTALLCOST)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnESTIMATEID, Me.columnOPTIONPART, Me.columnOPTIONCODE}, True))
            Me.columnESTIMATEID.AllowDBNull = False
            Me.columnOPTIONPART.AllowDBNull = False
            Me.columnOPTIONPART.MaxLength = 1
            Me.columnOPTIONCODE.AllowDBNull = False
            Me.columnOPTIONCODE.MaxLength = 10
            Me.columnOPTIONNAME.AllowDBNull = False
            Me.columnOPTIONNAME.MaxLength = 64
            Me.columnPRICE.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewIC3070202EstVclOptionInfoRow() As IC3070202EstVclOptionInfoRow
            Return CType(Me.NewRow, IC3070202EstVclOptionInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IC3070202EstVclOptionInfoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IC3070202EstVclOptionInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IC3070202EstVclOptionInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent IC3070202EstVclOptionInfoRowChanged(Me, New IC3070202EstVclOptionInfoRowChangeEvent(CType(e.Row, IC3070202EstVclOptionInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IC3070202EstVclOptionInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent IC3070202EstVclOptionInfoRowChanging(Me, New IC3070202EstVclOptionInfoRowChangeEvent(CType(e.Row, IC3070202EstVclOptionInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IC3070202EstVclOptionInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent IC3070202EstVclOptionInfoRowDeleted(Me, New IC3070202EstVclOptionInfoRowChangeEvent(CType(e.Row, IC3070202EstVclOptionInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IC3070202EstVclOptionInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent IC3070202EstVclOptionInfoRowDeleting(Me, New IC3070202EstVclOptionInfoRowChangeEvent(CType(e.Row, IC3070202EstVclOptionInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveIC3070202EstVclOptionInfoRow(ByVal row As IC3070202EstVclOptionInfoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3070202DataSet = New IC3070202DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IC3070202EstVclOptionInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class IC3070202EstCustomerInfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of IC3070202EstCustomerInfoRow)

        <SecurityPermissionAttribute(SecurityAction.Demand, _
         SerializationFormatter:=True)> _
        Public Overrides Sub GetObjectData( _
           info As SerializationInfo, context As StreamingContext)
            If Not (info Is Nothing) Then

                info.AddValue("derivedValue", True)
                MyBase.GetObjectData(info, context)
            End If

        End Sub

        Private columnESTIMATEID As Global.System.Data.DataColumn

        Private columnCONTRACTCUSTTYPE As Global.System.Data.DataColumn

        Private columnCUSTPART As Global.System.Data.DataColumn

        Private columnNAME As Global.System.Data.DataColumn

        Private columnSOCIALID As Global.System.Data.DataColumn

        Private columnZIPCODE As Global.System.Data.DataColumn

        Private columnADDRESS As Global.System.Data.DataColumn

        Private columnTELNO As Global.System.Data.DataColumn

        Private columnMOBILE As Global.System.Data.DataColumn

        Private columnFAXNO As Global.System.Data.DataColumn

        Private columnEMAIL As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "IC3070202EstCustomerInfo"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESTIMATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATEID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONTRACTCUSTTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTRACTCUSTTYPE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CUSTPARTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTPART
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SOCIALIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOCIALID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ZIPCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZIPCODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADDRESSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDRESS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TELNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELNO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MOBILEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOBILE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FAXNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAXNO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As IC3070202EstCustomerInfoRow
            Get
                Return CType(Me.Rows(index), IC3070202EstCustomerInfoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstCustomerInfoRowChanging As IC3070202EstCustomerInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstCustomerInfoRowChanged As IC3070202EstCustomerInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstCustomerInfoRowDeleting As IC3070202EstCustomerInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstCustomerInfoRowDeleted As IC3070202EstCustomerInfoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddIC3070202EstCustomerInfoRow(ByVal row As IC3070202EstCustomerInfoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddIC3070202EstCustomerInfoRow(ByVal ESTIMATEID As Long, ByVal CONTRACTCUSTTYPE As String, ByVal CUSTPART As String, ByVal NAME As String, ByVal SOCIALID As String, ByVal ZIPCODE As String, ByVal ADDRESS As String, ByVal TELNO As String, ByVal MOBILE As String, ByVal FAXNO As String, ByVal EMAIL As String) As IC3070202EstCustomerInfoRow
            Dim rowIC3070202EstCustomerInfoRow As IC3070202EstCustomerInfoRow = CType(Me.NewRow, IC3070202EstCustomerInfoRow)
            Dim columnValuesArray() As Object = New Object() {ESTIMATEID, CONTRACTCUSTTYPE, CUSTPART, NAME, SOCIALID, ZIPCODE, ADDRESS, TELNO, MOBILE, FAXNO, EMAIL}
            rowIC3070202EstCustomerInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIC3070202EstCustomerInfoRow)
            Return rowIC3070202EstCustomerInfoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByESTIMATEIDCONTRACTCUSTTYPE(ByVal ESTIMATEID As Long, ByVal CONTRACTCUSTTYPE As String) As IC3070202EstCustomerInfoRow
            Return CType(Me.Rows.Find(New Object() {ESTIMATEID, CONTRACTCUSTTYPE}), IC3070202EstCustomerInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IC3070202EstCustomerInfoDataTable = CType(MyBase.Clone, IC3070202EstCustomerInfoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IC3070202EstCustomerInfoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnESTIMATEID = MyBase.Columns("ESTIMATEID")
            Me.columnCONTRACTCUSTTYPE = MyBase.Columns("CONTRACTCUSTTYPE")
            Me.columnCUSTPART = MyBase.Columns("CUSTPART")
            Me.columnNAME = MyBase.Columns("NAME")
            Me.columnSOCIALID = MyBase.Columns("SOCIALID")
            Me.columnZIPCODE = MyBase.Columns("ZIPCODE")
            Me.columnADDRESS = MyBase.Columns("ADDRESS")
            Me.columnTELNO = MyBase.Columns("TELNO")
            Me.columnMOBILE = MyBase.Columns("MOBILE")
            Me.columnFAXNO = MyBase.Columns("FAXNO")
            Me.columnEMAIL = MyBase.Columns("EMAIL")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnESTIMATEID = New Global.System.Data.DataColumn("ESTIMATEID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATEID)
            Me.columnCONTRACTCUSTTYPE = New Global.System.Data.DataColumn("CONTRACTCUSTTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTRACTCUSTTYPE)
            Me.columnCUSTPART = New Global.System.Data.DataColumn("CUSTPART", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTPART)
            Me.columnNAME = New Global.System.Data.DataColumn("NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAME)
            Me.columnSOCIALID = New Global.System.Data.DataColumn("SOCIALID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOCIALID)
            Me.columnZIPCODE = New Global.System.Data.DataColumn("ZIPCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZIPCODE)
            Me.columnADDRESS = New Global.System.Data.DataColumn("ADDRESS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDRESS)
            Me.columnTELNO = New Global.System.Data.DataColumn("TELNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELNO)
            Me.columnMOBILE = New Global.System.Data.DataColumn("MOBILE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOBILE)
            Me.columnFAXNO = New Global.System.Data.DataColumn("FAXNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAXNO)
            Me.columnEMAIL = New Global.System.Data.DataColumn("EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnESTIMATEID, Me.columnCONTRACTCUSTTYPE}, True))
            Me.columnESTIMATEID.AllowDBNull = False
            Me.columnCONTRACTCUSTTYPE.AllowDBNull = False
            Me.columnCONTRACTCUSTTYPE.MaxLength = 1
            Me.columnCUSTPART.MaxLength = 1
            Me.columnNAME.MaxLength = 256
            Me.columnSOCIALID.MaxLength = 32
            Me.columnZIPCODE.MaxLength = 32
            Me.columnADDRESS.MaxLength = 320
            Me.columnTELNO.MaxLength = 64
            Me.columnMOBILE.MaxLength = 128
            Me.columnFAXNO.MaxLength = 64
            Me.columnEMAIL.MaxLength = 128
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewIC3070202EstCustomerInfoRow() As IC3070202EstCustomerInfoRow
            Return CType(Me.NewRow, IC3070202EstCustomerInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IC3070202EstCustomerInfoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IC3070202EstCustomerInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IC3070202EstCustomerInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent IC3070202EstCustomerInfoRowChanged(Me, New IC3070202EstCustomerInfoRowChangeEvent(CType(e.Row, IC3070202EstCustomerInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IC3070202EstCustomerInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent IC3070202EstCustomerInfoRowChanging(Me, New IC3070202EstCustomerInfoRowChangeEvent(CType(e.Row, IC3070202EstCustomerInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IC3070202EstCustomerInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent IC3070202EstCustomerInfoRowDeleted(Me, New IC3070202EstCustomerInfoRowChangeEvent(CType(e.Row, IC3070202EstCustomerInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IC3070202EstCustomerInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent IC3070202EstCustomerInfoRowDeleting(Me, New IC3070202EstCustomerInfoRowChangeEvent(CType(e.Row, IC3070202EstCustomerInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveIC3070202EstCustomerInfoRow(ByVal row As IC3070202EstCustomerInfoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3070202DataSet = New IC3070202DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IC3070202EstCustomerInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class IC3070202EstChargeInfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of IC3070202EstChargeInfoRow)

        <SecurityPermissionAttribute(SecurityAction.Demand, _
         SerializationFormatter:=True)> _
        Public Overrides Sub GetObjectData( _
           info As SerializationInfo, context As StreamingContext)
            If Not (info Is Nothing) Then

                info.AddValue("derivedValue", True)
                MyBase.GetObjectData(info, context)
            End If

        End Sub

        Private columnESTIMATEID As Global.System.Data.DataColumn

        Private columnITEMCODE As Global.System.Data.DataColumn

        Private columnITEMNAME As Global.System.Data.DataColumn

        Private columnPRICE As Global.System.Data.DataColumn

        Private columnCHARGEDVS As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "IC3070202EstChargeInfo"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESTIMATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATEID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ITEMCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMCODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ITEMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMNAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRICE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CHARGEDVSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHARGEDVS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As IC3070202EstChargeInfoRow
            Get
                Return CType(Me.Rows(index), IC3070202EstChargeInfoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstChargeInfoRowChanging As IC3070202EstChargeInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstChargeInfoRowChanged As IC3070202EstChargeInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstChargeInfoRowDeleting As IC3070202EstChargeInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstChargeInfoRowDeleted As IC3070202EstChargeInfoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddIC3070202EstChargeInfoRow(ByVal row As IC3070202EstChargeInfoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddIC3070202EstChargeInfoRow(ByVal ESTIMATEID As Long, ByVal ITEMCODE As String, ByVal ITEMNAME As String, ByVal PRICE As Double, ByVal CHARGEDVS As String) As IC3070202EstChargeInfoRow
            Dim rowIC3070202EstChargeInfoRow As IC3070202EstChargeInfoRow = CType(Me.NewRow, IC3070202EstChargeInfoRow)
            Dim columnValuesArray() As Object = New Object() {ESTIMATEID, ITEMCODE, ITEMNAME, PRICE, CHARGEDVS}
            rowIC3070202EstChargeInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIC3070202EstChargeInfoRow)
            Return rowIC3070202EstChargeInfoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByESTIMATEIDITEMCODE(ByVal ESTIMATEID As Long, ByVal ITEMCODE As String) As IC3070202EstChargeInfoRow
            Return CType(Me.Rows.Find(New Object() {ESTIMATEID, ITEMCODE}), IC3070202EstChargeInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IC3070202EstChargeInfoDataTable = CType(MyBase.Clone, IC3070202EstChargeInfoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IC3070202EstChargeInfoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnESTIMATEID = MyBase.Columns("ESTIMATEID")
            Me.columnITEMCODE = MyBase.Columns("ITEMCODE")
            Me.columnITEMNAME = MyBase.Columns("ITEMNAME")
            Me.columnPRICE = MyBase.Columns("PRICE")
            Me.columnCHARGEDVS = MyBase.Columns("CHARGEDVS")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnESTIMATEID = New Global.System.Data.DataColumn("ESTIMATEID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATEID)
            Me.columnITEMCODE = New Global.System.Data.DataColumn("ITEMCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMCODE)
            Me.columnITEMNAME = New Global.System.Data.DataColumn("ITEMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMNAME)
            Me.columnPRICE = New Global.System.Data.DataColumn("PRICE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRICE)
            Me.columnCHARGEDVS = New Global.System.Data.DataColumn("CHARGEDVS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHARGEDVS)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnESTIMATEID, Me.columnITEMCODE}, True))
            Me.columnESTIMATEID.AllowDBNull = False
            Me.columnITEMCODE.AllowDBNull = False
            Me.columnITEMCODE.MaxLength = 10
            Me.columnITEMNAME.AllowDBNull = False
            Me.columnITEMNAME.MaxLength = 64
            Me.columnCHARGEDVS.AllowDBNull = False
            Me.columnCHARGEDVS.MaxLength = 1
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewIC3070202EstChargeInfoRow() As IC3070202EstChargeInfoRow
            Return CType(Me.NewRow, IC3070202EstChargeInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IC3070202EstChargeInfoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IC3070202EstChargeInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IC3070202EstChargeInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent IC3070202EstChargeInfoRowChanged(Me, New IC3070202EstChargeInfoRowChangeEvent(CType(e.Row, IC3070202EstChargeInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IC3070202EstChargeInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent IC3070202EstChargeInfoRowChanging(Me, New IC3070202EstChargeInfoRowChangeEvent(CType(e.Row, IC3070202EstChargeInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IC3070202EstChargeInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent IC3070202EstChargeInfoRowDeleted(Me, New IC3070202EstChargeInfoRowChangeEvent(CType(e.Row, IC3070202EstChargeInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IC3070202EstChargeInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent IC3070202EstChargeInfoRowDeleting(Me, New IC3070202EstChargeInfoRowChangeEvent(CType(e.Row, IC3070202EstChargeInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveIC3070202EstChargeInfoRow(ByVal row As IC3070202EstChargeInfoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3070202DataSet = New IC3070202DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IC3070202EstChargeInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class IC3070202EstPaymentInfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of IC3070202EstPaymentInfoRow)

        <SecurityPermissionAttribute(SecurityAction.Demand, _
         SerializationFormatter:=True)> _
        Public Overrides Sub GetObjectData( _
           info As SerializationInfo, context As StreamingContext)
            If Not (info Is Nothing) Then

                info.AddValue("derivedValue", True)
                MyBase.GetObjectData(info, context)
            End If

        End Sub

        Private columnESTIMATEID As Global.System.Data.DataColumn

        Private columnPAYMENTMETHOD As Global.System.Data.DataColumn

        Private columnFINANCECOMCODE As Global.System.Data.DataColumn

        Private columnPAYMENTPERIOD As Global.System.Data.DataColumn

        Private columnMONTHLYPAYMENT As Global.System.Data.DataColumn

        Private columnDEPOSIT As Global.System.Data.DataColumn

        Private columnBONUSPAYMENT As Global.System.Data.DataColumn

        Private columnDUEDATE As Global.System.Data.DataColumn

        Private columnDELFLG As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "IC3070202EstPaymentInfo"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESTIMATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATEID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PAYMENTMETHODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAYMENTMETHOD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FINANCECOMCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFINANCECOMCODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PAYMENTPERIODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAYMENTPERIOD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MONTHLYPAYMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMONTHLYPAYMENT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DEPOSITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPOSIT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BONUSPAYMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBONUSPAYMENT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DUEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDUEDATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DELFLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDELFLG
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As IC3070202EstPaymentInfoRow
            Get
                Return CType(Me.Rows(index), IC3070202EstPaymentInfoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstPaymentInfoRowChanging As IC3070202EstPaymentInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstPaymentInfoRowChanged As IC3070202EstPaymentInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstPaymentInfoRowDeleting As IC3070202EstPaymentInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstPaymentInfoRowDeleted As IC3070202EstPaymentInfoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddIC3070202EstPaymentInfoRow(ByVal row As IC3070202EstPaymentInfoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddIC3070202EstPaymentInfoRow(ByVal ESTIMATEID As Long, ByVal PAYMENTMETHOD As String, ByVal FINANCECOMCODE As String, ByVal PAYMENTPERIOD As Short, ByVal MONTHLYPAYMENT As Double, ByVal DEPOSIT As Double, ByVal BONUSPAYMENT As Double, ByVal DUEDATE As Short, ByVal DELFLG As String) As IC3070202EstPaymentInfoRow
            Dim rowIC3070202EstPaymentInfoRow As IC3070202EstPaymentInfoRow = CType(Me.NewRow, IC3070202EstPaymentInfoRow)
            Dim columnValuesArray() As Object = New Object() {ESTIMATEID, PAYMENTMETHOD, FINANCECOMCODE, PAYMENTPERIOD, MONTHLYPAYMENT, DEPOSIT, BONUSPAYMENT, DUEDATE, DELFLG}
            rowIC3070202EstPaymentInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIC3070202EstPaymentInfoRow)
            Return rowIC3070202EstPaymentInfoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByESTIMATEIDPAYMENTMETHOD(ByVal ESTIMATEID As Long, ByVal PAYMENTMETHOD As String) As IC3070202EstPaymentInfoRow
            Return CType(Me.Rows.Find(New Object() {ESTIMATEID, PAYMENTMETHOD}), IC3070202EstPaymentInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IC3070202EstPaymentInfoDataTable = CType(MyBase.Clone, IC3070202EstPaymentInfoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IC3070202EstPaymentInfoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnESTIMATEID = MyBase.Columns("ESTIMATEID")
            Me.columnPAYMENTMETHOD = MyBase.Columns("PAYMENTMETHOD")
            Me.columnFINANCECOMCODE = MyBase.Columns("FINANCECOMCODE")
            Me.columnPAYMENTPERIOD = MyBase.Columns("PAYMENTPERIOD")
            Me.columnMONTHLYPAYMENT = MyBase.Columns("MONTHLYPAYMENT")
            Me.columnDEPOSIT = MyBase.Columns("DEPOSIT")
            Me.columnBONUSPAYMENT = MyBase.Columns("BONUSPAYMENT")
            Me.columnDUEDATE = MyBase.Columns("DUEDATE")
            Me.columnDELFLG = MyBase.Columns("DELFLG")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnESTIMATEID = New Global.System.Data.DataColumn("ESTIMATEID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATEID)
            Me.columnPAYMENTMETHOD = New Global.System.Data.DataColumn("PAYMENTMETHOD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAYMENTMETHOD)
            Me.columnFINANCECOMCODE = New Global.System.Data.DataColumn("FINANCECOMCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFINANCECOMCODE)
            Me.columnPAYMENTPERIOD = New Global.System.Data.DataColumn("PAYMENTPERIOD", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAYMENTPERIOD)
            Me.columnMONTHLYPAYMENT = New Global.System.Data.DataColumn("MONTHLYPAYMENT", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMONTHLYPAYMENT)
            Me.columnDEPOSIT = New Global.System.Data.DataColumn("DEPOSIT", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPOSIT)
            Me.columnBONUSPAYMENT = New Global.System.Data.DataColumn("BONUSPAYMENT", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBONUSPAYMENT)
            Me.columnDUEDATE = New Global.System.Data.DataColumn("DUEDATE", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDUEDATE)
            Me.columnDELFLG = New Global.System.Data.DataColumn("DELFLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDELFLG)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnESTIMATEID, Me.columnPAYMENTMETHOD}, True))
            Me.columnESTIMATEID.AllowDBNull = False
            Me.columnPAYMENTMETHOD.AllowDBNull = False
            Me.columnPAYMENTMETHOD.MaxLength = 1
            Me.columnFINANCECOMCODE.MaxLength = 5
            Me.columnDELFLG.AllowDBNull = False
            Me.columnDELFLG.MaxLength = 1
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewIC3070202EstPaymentInfoRow() As IC3070202EstPaymentInfoRow
            Return CType(Me.NewRow, IC3070202EstPaymentInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IC3070202EstPaymentInfoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IC3070202EstPaymentInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IC3070202EstPaymentInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent IC3070202EstPaymentInfoRowChanged(Me, New IC3070202EstPaymentInfoRowChangeEvent(CType(e.Row, IC3070202EstPaymentInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IC3070202EstPaymentInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent IC3070202EstPaymentInfoRowChanging(Me, New IC3070202EstPaymentInfoRowChangeEvent(CType(e.Row, IC3070202EstPaymentInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IC3070202EstPaymentInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent IC3070202EstPaymentInfoRowDeleted(Me, New IC3070202EstPaymentInfoRowChangeEvent(CType(e.Row, IC3070202EstPaymentInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IC3070202EstPaymentInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent IC3070202EstPaymentInfoRowDeleting(Me, New IC3070202EstPaymentInfoRowChangeEvent(CType(e.Row, IC3070202EstPaymentInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveIC3070202EstPaymentInfoRow(ByVal row As IC3070202EstPaymentInfoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3070202DataSet = New IC3070202DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IC3070202EstPaymentInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class IC3070202EstTradeInCarInfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of IC3070202EstTradeInCarInfoRow)

        <SecurityPermissionAttribute(SecurityAction.Demand, _
         SerializationFormatter:=True)> _
        Public Overrides Sub GetObjectData( _
           info As SerializationInfo, context As StreamingContext)
            If Not (info Is Nothing) Then

                info.AddValue("derivedValue", True)
                MyBase.GetObjectData(info, context)
            End If

        End Sub

        Private columnESTIMATEID As Global.System.Data.DataColumn

        Private columnSEQNO As Global.System.Data.DataColumn

        Private columnASSESSMENTNO As Global.System.Data.DataColumn

        Private columnVEHICLENAME As Global.System.Data.DataColumn

        Private columnASSESSEDPRICE As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "IC3070202EstTradeInCarInfo"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESTIMATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATEID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SEQNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEQNO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ASSESSMENTNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASSESSMENTNO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VEHICLENAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVEHICLENAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ASSESSEDPRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASSESSEDPRICE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As IC3070202EstTradeInCarInfoRow
            Get
                Return CType(Me.Rows(index), IC3070202EstTradeInCarInfoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstTradeInCarInfoRowChanging As IC3070202EstTradeInCarInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstTradeInCarInfoRowChanged As IC3070202EstTradeInCarInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstTradeInCarInfoRowDeleting As IC3070202EstTradeInCarInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstTradeInCarInfoRowDeleted As IC3070202EstTradeInCarInfoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddIC3070202EstTradeInCarInfoRow(ByVal row As IC3070202EstTradeInCarInfoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddIC3070202EstTradeInCarInfoRow(ByVal ESTIMATEID As Long, ByVal SEQNO As Short, ByVal ASSESSMENTNO As Long, ByVal VEHICLENAME As String, ByVal ASSESSEDPRICE As Double) As IC3070202EstTradeInCarInfoRow
            Dim rowIC3070202EstTradeInCarInfoRow As IC3070202EstTradeInCarInfoRow = CType(Me.NewRow, IC3070202EstTradeInCarInfoRow)
            Dim columnValuesArray() As Object = New Object() {ESTIMATEID, SEQNO, ASSESSMENTNO, VEHICLENAME, ASSESSEDPRICE}
            rowIC3070202EstTradeInCarInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIC3070202EstTradeInCarInfoRow)
            Return rowIC3070202EstTradeInCarInfoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByESTIMATEIDSEQNO(ByVal ESTIMATEID As Long, ByVal SEQNO As Short) As IC3070202EstTradeInCarInfoRow
            Return CType(Me.Rows.Find(New Object() {ESTIMATEID, SEQNO}), IC3070202EstTradeInCarInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IC3070202EstTradeInCarInfoDataTable = CType(MyBase.Clone, IC3070202EstTradeInCarInfoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IC3070202EstTradeInCarInfoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnESTIMATEID = MyBase.Columns("ESTIMATEID")
            Me.columnSEQNO = MyBase.Columns("SEQNO")
            Me.columnASSESSMENTNO = MyBase.Columns("ASSESSMENTNO")
            Me.columnVEHICLENAME = MyBase.Columns("VEHICLENAME")
            Me.columnASSESSEDPRICE = MyBase.Columns("ASSESSEDPRICE")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnESTIMATEID = New Global.System.Data.DataColumn("ESTIMATEID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATEID)
            Me.columnSEQNO = New Global.System.Data.DataColumn("SEQNO", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEQNO)
            Me.columnASSESSMENTNO = New Global.System.Data.DataColumn("ASSESSMENTNO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASSESSMENTNO)
            Me.columnVEHICLENAME = New Global.System.Data.DataColumn("VEHICLENAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVEHICLENAME)
            Me.columnASSESSEDPRICE = New Global.System.Data.DataColumn("ASSESSEDPRICE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASSESSEDPRICE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnESTIMATEID, Me.columnSEQNO}, True))
            Me.columnESTIMATEID.AllowDBNull = False
            Me.columnSEQNO.AllowDBNull = False
            Me.columnVEHICLENAME.AllowDBNull = False
            Me.columnVEHICLENAME.MaxLength = 128
            Me.columnASSESSEDPRICE.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewIC3070202EstTradeInCarInfoRow() As IC3070202EstTradeInCarInfoRow
            Return CType(Me.NewRow, IC3070202EstTradeInCarInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IC3070202EstTradeInCarInfoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IC3070202EstTradeInCarInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IC3070202EstTradeInCarInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent IC3070202EstTradeInCarInfoRowChanged(Me, New IC3070202EstTradeInCarInfoRowChangeEvent(CType(e.Row, IC3070202EstTradeInCarInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IC3070202EstTradeInCarInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent IC3070202EstTradeInCarInfoRowChanging(Me, New IC3070202EstTradeInCarInfoRowChangeEvent(CType(e.Row, IC3070202EstTradeInCarInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IC3070202EstTradeInCarInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent IC3070202EstTradeInCarInfoRowDeleted(Me, New IC3070202EstTradeInCarInfoRowChangeEvent(CType(e.Row, IC3070202EstTradeInCarInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IC3070202EstTradeInCarInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent IC3070202EstTradeInCarInfoRowDeleting(Me, New IC3070202EstTradeInCarInfoRowChangeEvent(CType(e.Row, IC3070202EstTradeInCarInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveIC3070202EstTradeInCarInfoRow(ByVal row As IC3070202EstTradeInCarInfoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3070202DataSet = New IC3070202DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IC3070202EstTradeInCarInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class IC3070202EstInsuranceInfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of IC3070202EstInsuranceInfoRow)

        <SecurityPermissionAttribute(SecurityAction.Demand, _
         SerializationFormatter:=True)> _
        Public Overrides Sub GetObjectData( _
           info As SerializationInfo, context As StreamingContext)
            If Not (info Is Nothing) Then

                info.AddValue("derivedValue", True)
                MyBase.GetObjectData(info, context)
            End If

        End Sub

        Private columnESTIMATEID As Global.System.Data.DataColumn

        Private columnINSUDVS As Global.System.Data.DataColumn

        Private columnINSUCOMCD As Global.System.Data.DataColumn

        Private columnINSUKIND As Global.System.Data.DataColumn

        Private columnAMOUNT As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "IC3070202EstInsuranceInfo"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESTIMATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATEID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property INSUDVSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSUDVS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property INSUCOMCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSUCOMCD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property INSUKINDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSUKIND
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAMOUNT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As IC3070202EstInsuranceInfoRow
            Get
                Return CType(Me.Rows(index), IC3070202EstInsuranceInfoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstInsuranceInfoRowChanging As IC3070202EstInsuranceInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstInsuranceInfoRowChanged As IC3070202EstInsuranceInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstInsuranceInfoRowDeleting As IC3070202EstInsuranceInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstInsuranceInfoRowDeleted As IC3070202EstInsuranceInfoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddIC3070202EstInsuranceInfoRow(ByVal row As IC3070202EstInsuranceInfoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddIC3070202EstInsuranceInfoRow(ByVal ESTIMATEID As Long, ByVal INSUDVS As String, ByVal INSUCOMCD As String, ByVal INSUKIND As String, ByVal AMOUNT As Double) As IC3070202EstInsuranceInfoRow
            Dim rowIC3070202EstInsuranceInfoRow As IC3070202EstInsuranceInfoRow = CType(Me.NewRow, IC3070202EstInsuranceInfoRow)
            Dim columnValuesArray() As Object = New Object() {ESTIMATEID, INSUDVS, INSUCOMCD, INSUKIND, AMOUNT}
            rowIC3070202EstInsuranceInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIC3070202EstInsuranceInfoRow)
            Return rowIC3070202EstInsuranceInfoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByESTIMATEID(ByVal ESTIMATEID As Long) As IC3070202EstInsuranceInfoRow
            Return CType(Me.Rows.Find(New Object() {ESTIMATEID}), IC3070202EstInsuranceInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IC3070202EstInsuranceInfoDataTable = CType(MyBase.Clone, IC3070202EstInsuranceInfoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IC3070202EstInsuranceInfoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnESTIMATEID = MyBase.Columns("ESTIMATEID")
            Me.columnINSUDVS = MyBase.Columns("INSUDVS")
            Me.columnINSUCOMCD = MyBase.Columns("INSUCOMCD")
            Me.columnINSUKIND = MyBase.Columns("INSUKIND")
            Me.columnAMOUNT = MyBase.Columns("AMOUNT")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnESTIMATEID = New Global.System.Data.DataColumn("ESTIMATEID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATEID)
            Me.columnINSUDVS = New Global.System.Data.DataColumn("INSUDVS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSUDVS)
            Me.columnINSUCOMCD = New Global.System.Data.DataColumn("INSUCOMCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSUCOMCD)
            Me.columnINSUKIND = New Global.System.Data.DataColumn("INSUKIND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSUKIND)
            Me.columnAMOUNT = New Global.System.Data.DataColumn("AMOUNT", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAMOUNT)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnESTIMATEID}, True))
            Me.columnESTIMATEID.AllowDBNull = False
            Me.columnESTIMATEID.Unique = True
            Me.columnINSUDVS.AllowDBNull = False
            Me.columnINSUDVS.MaxLength = 1
            Me.columnINSUCOMCD.MaxLength = 5
            Me.columnINSUKIND.MaxLength = 1
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewIC3070202EstInsuranceInfoRow() As IC3070202EstInsuranceInfoRow
            Return CType(Me.NewRow, IC3070202EstInsuranceInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IC3070202EstInsuranceInfoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IC3070202EstInsuranceInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IC3070202EstInsuranceInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent IC3070202EstInsuranceInfoRowChanged(Me, New IC3070202EstInsuranceInfoRowChangeEvent(CType(e.Row, IC3070202EstInsuranceInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IC3070202EstInsuranceInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent IC3070202EstInsuranceInfoRowChanging(Me, New IC3070202EstInsuranceInfoRowChangeEvent(CType(e.Row, IC3070202EstInsuranceInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IC3070202EstInsuranceInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent IC3070202EstInsuranceInfoRowDeleted(Me, New IC3070202EstInsuranceInfoRowChangeEvent(CType(e.Row, IC3070202EstInsuranceInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IC3070202EstInsuranceInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent IC3070202EstInsuranceInfoRowDeleting(Me, New IC3070202EstInsuranceInfoRowChangeEvent(CType(e.Row, IC3070202EstInsuranceInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveIC3070202EstInsuranceInfoRow(ByVal row As IC3070202EstInsuranceInfoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3070202DataSet = New IC3070202DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IC3070202EstInsuranceInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class IC3070202EstimateIdDataTable
        Inherits Global.System.Data.TypedTableBase(Of IC3070202EstimateIdRow)

        <SecurityPermissionAttribute(SecurityAction.Demand, _
         SerializationFormatter:=True)> _
        Public Overrides Sub GetObjectData( _
           info As SerializationInfo, context As StreamingContext)
            If Not (info Is Nothing) Then

                info.AddValue("derivedValue", True)
                MyBase.GetObjectData(info, context)
            End If

        End Sub

        Private columnESTIMATEID As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "IC3070202EstimateId"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESTIMATEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATEID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As IC3070202EstimateIdRow
            Get
                Return CType(Me.Rows(index), IC3070202EstimateIdRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstimateIdRowChanging As IC3070202EstimateIdRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstimateIdRowChanged As IC3070202EstimateIdRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstimateIdRowDeleting As IC3070202EstimateIdRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202EstimateIdRowDeleted As IC3070202EstimateIdRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddIC3070202EstimateIdRow(ByVal row As IC3070202EstimateIdRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddIC3070202EstimateIdRow(ByVal ESTIMATEID As Decimal) As IC3070202EstimateIdRow
            Dim rowIC3070202EstimateIdRow As IC3070202EstimateIdRow = CType(Me.NewRow, IC3070202EstimateIdRow)
            Dim columnValuesArray() As Object = New Object() {ESTIMATEID}
            rowIC3070202EstimateIdRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIC3070202EstimateIdRow)
            Return rowIC3070202EstimateIdRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IC3070202EstimateIdDataTable = CType(MyBase.Clone, IC3070202EstimateIdDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IC3070202EstimateIdDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnESTIMATEID = MyBase.Columns("ESTIMATEID")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnESTIMATEID = New Global.System.Data.DataColumn("ESTIMATEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATEID)
            Me.columnESTIMATEID.ReadOnly = True
            Me.ExtendedProperties.Add("Generator_TablePropName", "IC3070202EstimateID")
            Me.ExtendedProperties.Add("Generator_TableVarName", "tableIC3070202EstimateID")
            Me.ExtendedProperties.Add("Generator_UserTableName", "IC3070202EstimateId")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewIC3070202EstimateIdRow() As IC3070202EstimateIdRow
            Return CType(Me.NewRow, IC3070202EstimateIdRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IC3070202EstimateIdRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IC3070202EstimateIdRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IC3070202EstimateIdRowChangedEvent) Is Nothing) Then
                RaiseEvent IC3070202EstimateIdRowChanged(Me, New IC3070202EstimateIdRowChangeEvent(CType(e.Row, IC3070202EstimateIdRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IC3070202EstimateIdRowChangingEvent) Is Nothing) Then
                RaiseEvent IC3070202EstimateIdRowChanging(Me, New IC3070202EstimateIdRowChangeEvent(CType(e.Row, IC3070202EstimateIdRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IC3070202EstimateIdRowDeletedEvent) Is Nothing) Then
                RaiseEvent IC3070202EstimateIdRowDeleted(Me, New IC3070202EstimateIdRowChangeEvent(CType(e.Row, IC3070202EstimateIdRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IC3070202EstimateIdRowDeletingEvent) Is Nothing) Then
                RaiseEvent IC3070202EstimateIdRowDeleting(Me, New IC3070202EstimateIdRowChangeEvent(CType(e.Row, IC3070202EstimateIdRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveIC3070202EstimateIdRow(ByVal row As IC3070202EstimateIdRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3070202DataSet = New IC3070202DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IC3070202EstimateIdDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class IC3070202CreateDateDataTable
        Inherits Global.System.Data.TypedTableBase(Of IC3070202CreateDateRow)

        <SecurityPermissionAttribute(SecurityAction.Demand, _
         SerializationFormatter:=True)> _
        Public Overrides Sub GetObjectData( _
           info As SerializationInfo, context As StreamingContext)
            If Not (info Is Nothing) Then

                info.AddValue("derivedValue", True)
                MyBase.GetObjectData(info, context)
            End If

        End Sub

        Private columnCreateDate As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "IC3070202CreateDate"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CreateDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreateDate
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As IC3070202CreateDateRow
            Get
                Return CType(Me.Rows(index), IC3070202CreateDateRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202CreateDateRowChanging As IC3070202CreateDateRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202CreateDateRowChanged As IC3070202CreateDateRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202CreateDateRowDeleting As IC3070202CreateDateRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IC3070202CreateDateRowDeleted As IC3070202CreateDateRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddIC3070202CreateDateRow(ByVal row As IC3070202CreateDateRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddIC3070202CreateDateRow(ByVal CreateDate As Date) As IC3070202CreateDateRow
            Dim rowIC3070202CreateDateRow As IC3070202CreateDateRow = CType(Me.NewRow, IC3070202CreateDateRow)
            Dim columnValuesArray() As Object = New Object() {CreateDate}
            rowIC3070202CreateDateRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIC3070202CreateDateRow)
            Return rowIC3070202CreateDateRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IC3070202CreateDateDataTable = CType(MyBase.Clone, IC3070202CreateDateDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IC3070202CreateDateDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnCreateDate = MyBase.Columns("CreateDate")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnCreateDate = New Global.System.Data.DataColumn("CreateDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreateDate)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewIC3070202CreateDateRow() As IC3070202CreateDateRow
            Return CType(Me.NewRow, IC3070202CreateDateRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IC3070202CreateDateRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IC3070202CreateDateRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IC3070202CreateDateRowChangedEvent) Is Nothing) Then
                RaiseEvent IC3070202CreateDateRowChanged(Me, New IC3070202CreateDateRowChangeEvent(CType(e.Row, IC3070202CreateDateRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IC3070202CreateDateRowChangingEvent) Is Nothing) Then
                RaiseEvent IC3070202CreateDateRowChanging(Me, New IC3070202CreateDateRowChangeEvent(CType(e.Row, IC3070202CreateDateRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IC3070202CreateDateRowDeletedEvent) Is Nothing) Then
                RaiseEvent IC3070202CreateDateRowDeleted(Me, New IC3070202CreateDateRowChangeEvent(CType(e.Row, IC3070202CreateDateRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IC3070202CreateDateRowDeletingEvent) Is Nothing) Then
                RaiseEvent IC3070202CreateDateRowDeleting(Me, New IC3070202CreateDateRowChangeEvent(CType(e.Row, IC3070202CreateDateRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveIC3070202CreateDateRow(ByVal row As IC3070202CreateDateRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IC3070202DataSet = New IC3070202DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IC3070202CreateDateDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IC3070202EstResultRow
        Inherits Global.System.Data.DataRow

        Private tableIC3070202EstResult As IC3070202EstResultDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIC3070202EstResult = CType(Me.Table, IC3070202EstResultDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IsSuccess() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstResult.IsSuccessColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstResult' にある列 'IsSuccess' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableIC3070202EstResult.IsSuccessColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EstimateId() As Long
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstResult.EstimateIdColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstResult' にある列 'EstimateId' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Long)
                Me(Me.tableIC3070202EstResult.EstimateIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CreateDate() As Date
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstResult.CreateDateColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstResult' にある列 'CreateDate' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableIC3070202EstResult.CreateDateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIsSuccessNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstResult.IsSuccessColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIsSuccessNull()
            Me(Me.tableIC3070202EstResult.IsSuccessColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEstimateIdNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstResult.EstimateIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEstimateIdNull()
            Me(Me.tableIC3070202EstResult.EstimateIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCreateDateNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstResult.CreateDateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCreateDateNull()
            Me(Me.tableIC3070202EstResult.CreateDateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IC3070202EstimationInfoRow
        Inherits Global.System.Data.DataRow

        Private tableIC3070202EstimationInfo As IC3070202EstimationInfoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIC3070202EstimationInfo = CType(Me.Table, IC3070202EstimationInfoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESTIMATEID() As Long
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.ESTIMATEIDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3070202EstimationInfo.ESTIMATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DLRCD() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.DLRCDColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.DLRCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property STRCD() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstimationInfo.STRCDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstimationInfo' にある列 'STRCD' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.STRCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FLLWUPBOX_SEQNO() As Long
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstimationInfo.FLLWUPBOX_SEQNOColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstimationInfo' にある列 'FLLWUPBOX_SEQNO' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Long)
                Me(Me.tableIC3070202EstimationInfo.FLLWUPBOX_SEQNOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CNT_STRCD() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstimationInfo.CNT_STRCDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstimationInfo' にある列 'CNT_STRCD' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.CNT_STRCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CNT_STAFF() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstimationInfo.CNT_STAFFColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstimationInfo' にある列 'CNT_STAFF' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.CNT_STAFFColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CSTKIND() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstimationInfo.CSTKINDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstimationInfo' にある列 'CSTKIND' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.CSTKINDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CUSTOMERCLASS() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstimationInfo.CUSTOMERCLASSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstimationInfo' にある列 'CUSTOMERCLASS' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.CUSTOMERCLASSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CRCUSTID() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstimationInfo.CRCUSTIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstimationInfo' にある列 'CRCUSTID' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.CRCUSTIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CUSTID() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstimationInfo.CUSTIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstimationInfo' にある列 'CUSTID' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.CUSTIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DELIDATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstimationInfo.DELIDATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstimationInfo' にある列 'DELIDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableIC3070202EstimationInfo.DELIDATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DISCOUNTPRICE() As Double
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstimationInfo.DISCOUNTPRICEColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstimationInfo' にある列 'DISCOUNTPRICE' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIC3070202EstimationInfo.DISCOUNTPRICEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMO() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstimationInfo.MEMOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstimationInfo' にある列 'MEMO' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.MEMOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESTPRINTDATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstimationInfo.ESTPRINTDATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstimationInfo' にある列 'ESTPRINTDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableIC3070202EstimationInfo.ESTPRINTDATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTRACTNO() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstimationInfo.CONTRACTNOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstimationInfo' にある列 'CONTRACTNO' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.CONTRACTNOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTPRINTFLG() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.CONTPRINTFLGColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.CONTPRINTFLGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTRACTFLG() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.CONTRACTFLGColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.CONTRACTFLGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTRACTDATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstimationInfo.CONTRACTDATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstimationInfo' にある列 'CONTRACTDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableIC3070202EstimationInfo.CONTRACTDATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DELFLG() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.DELFLGColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.DELFLGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TCVVERSION() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.TCVVERSIONColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.TCVVERSIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SERIESCD() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.SERIESCDColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.SERIESCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SERIESNM() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.SERIESNMColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.SERIESNMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MODELCD() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.MODELCDColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.MODELCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MODELNM() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.MODELNMColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.MODELNMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BODYTYPE() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.BODYTYPEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.BODYTYPEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DRIVESYSTEM() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.DRIVESYSTEMColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.DRIVESYSTEMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DISPLACEMENT() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.DISPLACEMENTColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.DISPLACEMENTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRANSMISSION() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.TRANSMISSIONColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.TRANSMISSIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SUFFIXCD() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.SUFFIXCDColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.SUFFIXCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EXTCOLORCD() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.EXTCOLORCDColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.EXTCOLORCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EXTCOLOR() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.EXTCOLORColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.EXTCOLORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EXTAMOUNT() As Double
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.EXTAMOUNTColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableIC3070202EstimationInfo.EXTAMOUNTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property INTCOLORCD() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.INTCOLORCDColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.INTCOLORCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property INTCOLOR() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.INTCOLORColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.INTCOLORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property INTAMOUNT() As Double
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.INTAMOUNTColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableIC3070202EstimationInfo.INTAMOUNTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MODELNUMBER() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.MODELNUMBERColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.MODELNUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BASEPRICE() As Double
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.BASEPRICEColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableIC3070202EstimationInfo.BASEPRICEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CREATEDATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstimationInfo.CREATEDATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstimationInfo' にある列 'CREATEDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableIC3070202EstimationInfo.CREATEDATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CREATEACCOUNT() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.CREATEACCOUNTColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.CREATEACCOUNTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UPDATEACCOUNT() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.UPDATEACCOUNTColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.UPDATEACCOUNTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CREATEID() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.CREATEIDColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.CREATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UPDATEID() As String
            Get
                Return CType(Me(Me.tableIC3070202EstimationInfo.UPDATEIDColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstimationInfo.UPDATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSTRCDNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstimationInfo.STRCDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSTRCDNull()
            Me(Me.tableIC3070202EstimationInfo.STRCDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFLLWUPBOX_SEQNONull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstimationInfo.FLLWUPBOX_SEQNOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFLLWUPBOX_SEQNONull()
            Me(Me.tableIC3070202EstimationInfo.FLLWUPBOX_SEQNOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCNT_STRCDNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstimationInfo.CNT_STRCDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCNT_STRCDNull()
            Me(Me.tableIC3070202EstimationInfo.CNT_STRCDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCNT_STAFFNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstimationInfo.CNT_STAFFColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCNT_STAFFNull()
            Me(Me.tableIC3070202EstimationInfo.CNT_STAFFColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCSTKINDNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstimationInfo.CSTKINDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCSTKINDNull()
            Me(Me.tableIC3070202EstimationInfo.CSTKINDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCUSTOMERCLASSNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstimationInfo.CUSTOMERCLASSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCUSTOMERCLASSNull()
            Me(Me.tableIC3070202EstimationInfo.CUSTOMERCLASSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCRCUSTIDNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstimationInfo.CRCUSTIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCRCUSTIDNull()
            Me(Me.tableIC3070202EstimationInfo.CRCUSTIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCUSTIDNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstimationInfo.CUSTIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCUSTIDNull()
            Me(Me.tableIC3070202EstimationInfo.CUSTIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDELIDATENull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstimationInfo.DELIDATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDELIDATENull()
            Me(Me.tableIC3070202EstimationInfo.DELIDATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDISCOUNTPRICENull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstimationInfo.DISCOUNTPRICEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDISCOUNTPRICENull()
            Me(Me.tableIC3070202EstimationInfo.DISCOUNTPRICEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMONull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstimationInfo.MEMOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMONull()
            Me(Me.tableIC3070202EstimationInfo.MEMOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsESTPRINTDATENull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstimationInfo.ESTPRINTDATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetESTPRINTDATENull()
            Me(Me.tableIC3070202EstimationInfo.ESTPRINTDATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONTRACTNONull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstimationInfo.CONTRACTNOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONTRACTNONull()
            Me(Me.tableIC3070202EstimationInfo.CONTRACTNOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONTRACTDATENull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstimationInfo.CONTRACTDATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONTRACTDATENull()
            Me(Me.tableIC3070202EstimationInfo.CONTRACTDATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCREATEDATENull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstimationInfo.CREATEDATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCREATEDATENull()
            Me(Me.tableIC3070202EstimationInfo.CREATEDATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IC3070202EstVclOptionInfoRow
        Inherits Global.System.Data.DataRow

        Private tableIC3070202EstVclOptionInfo As IC3070202EstVclOptionInfoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIC3070202EstVclOptionInfo = CType(Me.Table, IC3070202EstVclOptionInfoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESTIMATEID() As Long
            Get
                Return CType(Me(Me.tableIC3070202EstVclOptionInfo.ESTIMATEIDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3070202EstVclOptionInfo.ESTIMATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property OPTIONPART() As String
            Get
                Return CType(Me(Me.tableIC3070202EstVclOptionInfo.OPTIONPARTColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstVclOptionInfo.OPTIONPARTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property OPTIONCODE() As String
            Get
                Return CType(Me(Me.tableIC3070202EstVclOptionInfo.OPTIONCODEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstVclOptionInfo.OPTIONCODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property OPTIONNAME() As String
            Get
                Return CType(Me(Me.tableIC3070202EstVclOptionInfo.OPTIONNAMEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstVclOptionInfo.OPTIONNAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRICE() As Double
            Get
                Return CType(Me(Me.tableIC3070202EstVclOptionInfo.PRICEColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableIC3070202EstVclOptionInfo.PRICEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property INSTALLCOST() As Double
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstVclOptionInfo.INSTALLCOSTColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstVclOptionInfo' にある列 'INSTALLCOST' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIC3070202EstVclOptionInfo.INSTALLCOSTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsINSTALLCOSTNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstVclOptionInfo.INSTALLCOSTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetINSTALLCOSTNull()
            Me(Me.tableIC3070202EstVclOptionInfo.INSTALLCOSTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IC3070202EstCustomerInfoRow
        Inherits Global.System.Data.DataRow

        Private tableIC3070202EstCustomerInfo As IC3070202EstCustomerInfoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIC3070202EstCustomerInfo = CType(Me.Table, IC3070202EstCustomerInfoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESTIMATEID() As Long
            Get
                Return CType(Me(Me.tableIC3070202EstCustomerInfo.ESTIMATEIDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3070202EstCustomerInfo.ESTIMATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTRACTCUSTTYPE() As String
            Get
                Return CType(Me(Me.tableIC3070202EstCustomerInfo.CONTRACTCUSTTYPEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstCustomerInfo.CONTRACTCUSTTYPEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CUSTPART() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstCustomerInfo.CUSTPARTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstCustomerInfo' にある列 'CUSTPART' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstCustomerInfo.CUSTPARTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstCustomerInfo.NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstCustomerInfo' にある列 'NAME' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstCustomerInfo.NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SOCIALID() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstCustomerInfo.SOCIALIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstCustomerInfo' にある列 'SOCIALID' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstCustomerInfo.SOCIALIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ZIPCODE() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstCustomerInfo.ZIPCODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstCustomerInfo' にある列 'ZIPCODE' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstCustomerInfo.ZIPCODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADDRESS() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstCustomerInfo.ADDRESSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstCustomerInfo' にある列 'ADDRESS' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstCustomerInfo.ADDRESSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TELNO() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstCustomerInfo.TELNOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstCustomerInfo' にある列 'TELNO' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstCustomerInfo.TELNOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MOBILE() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstCustomerInfo.MOBILEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstCustomerInfo' にある列 'MOBILE' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstCustomerInfo.MOBILEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FAXNO() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstCustomerInfo.FAXNOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstCustomerInfo' にある列 'FAXNO' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstCustomerInfo.FAXNOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EMAIL() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstCustomerInfo.EMAILColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstCustomerInfo' にある列 'EMAIL' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstCustomerInfo.EMAILColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCUSTPARTNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstCustomerInfo.CUSTPARTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCUSTPARTNull()
            Me(Me.tableIC3070202EstCustomerInfo.CUSTPARTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNAMENull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstCustomerInfo.NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNAMENull()
            Me(Me.tableIC3070202EstCustomerInfo.NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSOCIALIDNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstCustomerInfo.SOCIALIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSOCIALIDNull()
            Me(Me.tableIC3070202EstCustomerInfo.SOCIALIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsZIPCODENull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstCustomerInfo.ZIPCODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetZIPCODENull()
            Me(Me.tableIC3070202EstCustomerInfo.ZIPCODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsADDRESSNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstCustomerInfo.ADDRESSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetADDRESSNull()
            Me(Me.tableIC3070202EstCustomerInfo.ADDRESSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTELNONull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstCustomerInfo.TELNOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTELNONull()
            Me(Me.tableIC3070202EstCustomerInfo.TELNOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMOBILENull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstCustomerInfo.MOBILEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMOBILENull()
            Me(Me.tableIC3070202EstCustomerInfo.MOBILEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFAXNONull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstCustomerInfo.FAXNOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFAXNONull()
            Me(Me.tableIC3070202EstCustomerInfo.FAXNOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEMAILNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstCustomerInfo.EMAILColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEMAILNull()
            Me(Me.tableIC3070202EstCustomerInfo.EMAILColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IC3070202EstChargeInfoRow
        Inherits Global.System.Data.DataRow

        Private tableIC3070202EstChargeInfo As IC3070202EstChargeInfoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIC3070202EstChargeInfo = CType(Me.Table, IC3070202EstChargeInfoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESTIMATEID() As Long
            Get
                Return CType(Me(Me.tableIC3070202EstChargeInfo.ESTIMATEIDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3070202EstChargeInfo.ESTIMATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ITEMCODE() As String
            Get
                Return CType(Me(Me.tableIC3070202EstChargeInfo.ITEMCODEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstChargeInfo.ITEMCODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ITEMNAME() As String
            Get
                Return CType(Me(Me.tableIC3070202EstChargeInfo.ITEMNAMEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstChargeInfo.ITEMNAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRICE() As Double
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstChargeInfo.PRICEColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstChargeInfo' にある列 'PRICE' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIC3070202EstChargeInfo.PRICEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CHARGEDVS() As String
            Get
                Return CType(Me(Me.tableIC3070202EstChargeInfo.CHARGEDVSColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstChargeInfo.CHARGEDVSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRICENull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstChargeInfo.PRICEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRICENull()
            Me(Me.tableIC3070202EstChargeInfo.PRICEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IC3070202EstPaymentInfoRow
        Inherits Global.System.Data.DataRow

        Private tableIC3070202EstPaymentInfo As IC3070202EstPaymentInfoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIC3070202EstPaymentInfo = CType(Me.Table, IC3070202EstPaymentInfoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESTIMATEID() As Long
            Get
                Return CType(Me(Me.tableIC3070202EstPaymentInfo.ESTIMATEIDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3070202EstPaymentInfo.ESTIMATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PAYMENTMETHOD() As String
            Get
                Return CType(Me(Me.tableIC3070202EstPaymentInfo.PAYMENTMETHODColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstPaymentInfo.PAYMENTMETHODColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FINANCECOMCODE() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstPaymentInfo.FINANCECOMCODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstPaymentInfo' にある列 'FINANCECOMCODE' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstPaymentInfo.FINANCECOMCODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PAYMENTPERIOD() As Short
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstPaymentInfo.PAYMENTPERIODColumn), Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstPaymentInfo' にある列 'PAYMENTPERIOD' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Short)
                Me(Me.tableIC3070202EstPaymentInfo.PAYMENTPERIODColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MONTHLYPAYMENT() As Double
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstPaymentInfo.MONTHLYPAYMENTColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstPaymentInfo' にある列 'MONTHLYPAYMENT' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIC3070202EstPaymentInfo.MONTHLYPAYMENTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DEPOSIT() As Double
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstPaymentInfo.DEPOSITColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstPaymentInfo' にある列 'DEPOSIT' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIC3070202EstPaymentInfo.DEPOSITColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BONUSPAYMENT() As Double
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstPaymentInfo.BONUSPAYMENTColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstPaymentInfo' にある列 'BONUSPAYMENT' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIC3070202EstPaymentInfo.BONUSPAYMENTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DUEDATE() As Short
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstPaymentInfo.DUEDATEColumn), Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstPaymentInfo' にある列 'DUEDATE' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Short)
                Me(Me.tableIC3070202EstPaymentInfo.DUEDATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DELFLG() As String
            Get
                Return CType(Me(Me.tableIC3070202EstPaymentInfo.DELFLGColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstPaymentInfo.DELFLGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFINANCECOMCODENull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstPaymentInfo.FINANCECOMCODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFINANCECOMCODENull()
            Me(Me.tableIC3070202EstPaymentInfo.FINANCECOMCODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPAYMENTPERIODNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstPaymentInfo.PAYMENTPERIODColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPAYMENTPERIODNull()
            Me(Me.tableIC3070202EstPaymentInfo.PAYMENTPERIODColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMONTHLYPAYMENTNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstPaymentInfo.MONTHLYPAYMENTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMONTHLYPAYMENTNull()
            Me(Me.tableIC3070202EstPaymentInfo.MONTHLYPAYMENTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDEPOSITNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstPaymentInfo.DEPOSITColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDEPOSITNull()
            Me(Me.tableIC3070202EstPaymentInfo.DEPOSITColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBONUSPAYMENTNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstPaymentInfo.BONUSPAYMENTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBONUSPAYMENTNull()
            Me(Me.tableIC3070202EstPaymentInfo.BONUSPAYMENTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDUEDATENull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstPaymentInfo.DUEDATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDUEDATENull()
            Me(Me.tableIC3070202EstPaymentInfo.DUEDATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IC3070202EstTradeInCarInfoRow
        Inherits Global.System.Data.DataRow

        Private tableIC3070202EstTradeInCarInfo As IC3070202EstTradeInCarInfoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIC3070202EstTradeInCarInfo = CType(Me.Table, IC3070202EstTradeInCarInfoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESTIMATEID() As Long
            Get
                Return CType(Me(Me.tableIC3070202EstTradeInCarInfo.ESTIMATEIDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3070202EstTradeInCarInfo.ESTIMATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SEQNO() As Short
            Get
                Return CType(Me(Me.tableIC3070202EstTradeInCarInfo.SEQNOColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableIC3070202EstTradeInCarInfo.SEQNOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ASSESSMENTNO() As Long
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstTradeInCarInfo.ASSESSMENTNOColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstTradeInCarInfo' にある列 'ASSESSMENTNO' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Long)
                Me(Me.tableIC3070202EstTradeInCarInfo.ASSESSMENTNOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VEHICLENAME() As String
            Get
                Return CType(Me(Me.tableIC3070202EstTradeInCarInfo.VEHICLENAMEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstTradeInCarInfo.VEHICLENAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ASSESSEDPRICE() As Double
            Get
                Return CType(Me(Me.tableIC3070202EstTradeInCarInfo.ASSESSEDPRICEColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableIC3070202EstTradeInCarInfo.ASSESSEDPRICEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsASSESSMENTNONull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstTradeInCarInfo.ASSESSMENTNOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetASSESSMENTNONull()
            Me(Me.tableIC3070202EstTradeInCarInfo.ASSESSMENTNOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IC3070202EstInsuranceInfoRow
        Inherits Global.System.Data.DataRow

        Private tableIC3070202EstInsuranceInfo As IC3070202EstInsuranceInfoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIC3070202EstInsuranceInfo = CType(Me.Table, IC3070202EstInsuranceInfoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESTIMATEID() As Long
            Get
                Return CType(Me(Me.tableIC3070202EstInsuranceInfo.ESTIMATEIDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableIC3070202EstInsuranceInfo.ESTIMATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property INSUDVS() As String
            Get
                Return CType(Me(Me.tableIC3070202EstInsuranceInfo.INSUDVSColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstInsuranceInfo.INSUDVSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property INSUCOMCD() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstInsuranceInfo.INSUCOMCDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstInsuranceInfo' にある列 'INSUCOMCD' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstInsuranceInfo.INSUCOMCDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property INSUKIND() As String
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstInsuranceInfo.INSUKINDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstInsuranceInfo' にある列 'INSUKIND' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIC3070202EstInsuranceInfo.INSUKINDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AMOUNT() As Double
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstInsuranceInfo.AMOUNTColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstInsuranceInfo' にある列 'AMOUNT' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIC3070202EstInsuranceInfo.AMOUNTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsINSUCOMCDNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstInsuranceInfo.INSUCOMCDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetINSUCOMCDNull()
            Me(Me.tableIC3070202EstInsuranceInfo.INSUCOMCDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsINSUKINDNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstInsuranceInfo.INSUKINDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetINSUKINDNull()
            Me(Me.tableIC3070202EstInsuranceInfo.INSUKINDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstInsuranceInfo.AMOUNTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAMOUNTNull()
            Me(Me.tableIC3070202EstInsuranceInfo.AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IC3070202EstimateIdRow
        Inherits Global.System.Data.DataRow

        Private tableIC3070202EstimateID As IC3070202EstimateIdDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIC3070202EstimateID = CType(Me.Table, IC3070202EstimateIdDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESTIMATEID() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableIC3070202EstimateID.ESTIMATEIDColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202EstimateId' にある列 'ESTIMATEID' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableIC3070202EstimateID.ESTIMATEIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsESTIMATEIDNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202EstimateID.ESTIMATEIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetESTIMATEIDNull()
            Me(Me.tableIC3070202EstimateID.ESTIMATEIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IC3070202CreateDateRow
        Inherits Global.System.Data.DataRow

        Private tableIC3070202CreateDate As IC3070202CreateDateDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIC3070202CreateDate = CType(Me.Table, IC3070202CreateDateDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CreateDate() As Date
            Get
                Try
                    Return CType(Me(Me.tableIC3070202CreateDate.CreateDateColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IC3070202CreateDate' にある列 'CreateDate' の値は DBNull です。", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableIC3070202CreateDate.CreateDateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCreateDateNull() As Boolean
            Return Me.IsNull(Me.tableIC3070202CreateDate.CreateDateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCreateDateNull()
            Me(Me.tableIC3070202CreateDate.CreateDateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class IC3070202EstResultRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As IC3070202EstResultRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As IC3070202EstResultRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As IC3070202EstResultRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class IC3070202EstimationInfoRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As IC3070202EstimationInfoRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As IC3070202EstimationInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As IC3070202EstimationInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class IC3070202EstVclOptionInfoRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As IC3070202EstVclOptionInfoRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As IC3070202EstVclOptionInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As IC3070202EstVclOptionInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class IC3070202EstCustomerInfoRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As IC3070202EstCustomerInfoRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As IC3070202EstCustomerInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As IC3070202EstCustomerInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class IC3070202EstChargeInfoRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As IC3070202EstChargeInfoRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As IC3070202EstChargeInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As IC3070202EstChargeInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class IC3070202EstPaymentInfoRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As IC3070202EstPaymentInfoRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As IC3070202EstPaymentInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As IC3070202EstPaymentInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class IC3070202EstTradeInCarInfoRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As IC3070202EstTradeInCarInfoRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As IC3070202EstTradeInCarInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As IC3070202EstTradeInCarInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class IC3070202EstInsuranceInfoRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As IC3070202EstInsuranceInfoRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As IC3070202EstInsuranceInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As IC3070202EstInsuranceInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class IC3070202EstimateIdRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As IC3070202EstimateIdRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As IC3070202EstimateIdRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As IC3070202EstimateIdRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class IC3070202CreateDateRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As IC3070202CreateDateRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As IC3070202CreateDateRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As IC3070202CreateDateRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
