'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:4.0.30319.42000
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("SC3180204DataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class SC3180204DataSet
    Inherits Global.System.Data.DataSet
    
    Private tableSC3180204HederInfo As SC3180204HederInfoDataTable
    
    Private tableSC3180204InspectCode As SC3180204InspectCodeDataTable
    
    Private tableSC3180204ChkLastChip As SC3180204ChkLastChipDataTable
    
    Private tableSC3180204tblcheck As SC3180204tblcheckDataTable
    
    Private tableSC3180204MainteCodeList As SC3180204MainteCodeListDataTable
    
    Private tableSC3180204ServiceLockVersion As SC3180204ServiceLockVersionDataTable
    
    Private tableSC3180204AproveStf As SC3180204AproveStfDataTable
    
    Private tableSC3180204StallUseId As SC3180204StallUseIdDataTable
    
    Private tableSC3180204NoticeProcessingInfo As SC3180204NoticeProcessingInfoDataTable
    
    Private tableSC3180204PicSaStf As SC3180204PicSaStfDataTable
    
    Private tableSC3180204RoState As SC3180204RoStateDataTable
    
    Private tableSC3180204RegistInfo As SC3180204RegistInfoDataTable
    
    Private tableSC3180204PicClient As SC3180204PicClientDataTable
    
    Private tableSC3180204Advice As SC3180204AdviceDataTable
    
    Private tableSC3180204IsAllJobStartByChip As SC3180204IsAllJobStartByChipDataTable
    
    Private tableSC3180204InspectCodeMerge As SC3180204InspectCodeMergeDataTable
    
    Private tableSC3180204AdviceJob As SC3180204AdviceJobDataTable
    
    Private tablePreviosReplacementMileage As PreviosReplacementMileageDataTable
    
    Private tableSystemSetting As SystemSettingDataTable
    
    Private tableSC3180204PreviousPartsReplace As SC3180204PreviousPartsReplaceDataTable
    
    Private tableSC3180204InspectionNeedFlg As SC3180204InspectionNeedFlgDataTable
    
    Private tableSC3180204InspectionApprovalDatetime As SC3180204InspectionApprovalDatetimeDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("SC3180204HederInfo")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204HederInfoDataTable(ds.Tables("SC3180204HederInfo")))
            End If
            If (Not (ds.Tables("SC3180204InspectCode")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204InspectCodeDataTable(ds.Tables("SC3180204InspectCode")))
            End If
            If (Not (ds.Tables("SC3180204ChkLastChip")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204ChkLastChipDataTable(ds.Tables("SC3180204ChkLastChip")))
            End If
            If (Not (ds.Tables("SC3180204tblcheck")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204tblcheckDataTable(ds.Tables("SC3180204tblcheck")))
            End If
            If (Not (ds.Tables("SC3180204MainteCodeList")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204MainteCodeListDataTable(ds.Tables("SC3180204MainteCodeList")))
            End If
            If (Not (ds.Tables("SC3180204ServiceLockVersion")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204ServiceLockVersionDataTable(ds.Tables("SC3180204ServiceLockVersion")))
            End If
            If (Not (ds.Tables("SC3180204AproveStf")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204AproveStfDataTable(ds.Tables("SC3180204AproveStf")))
            End If
            If (Not (ds.Tables("SC3180204StallUseId")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204StallUseIdDataTable(ds.Tables("SC3180204StallUseId")))
            End If
            If (Not (ds.Tables("SC3180204NoticeProcessingInfo")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204NoticeProcessingInfoDataTable(ds.Tables("SC3180204NoticeProcessingInfo")))
            End If
            If (Not (ds.Tables("SC3180204PicSaStf")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204PicSaStfDataTable(ds.Tables("SC3180204PicSaStf")))
            End If
            If (Not (ds.Tables("SC3180204RoState")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204RoStateDataTable(ds.Tables("SC3180204RoState")))
            End If
            If (Not (ds.Tables("SC3180204RegistInfo")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204RegistInfoDataTable(ds.Tables("SC3180204RegistInfo")))
            End If
            If (Not (ds.Tables("SC3180204PicClient")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204PicClientDataTable(ds.Tables("SC3180204PicClient")))
            End If
            If (Not (ds.Tables("SC3180204Advice")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204AdviceDataTable(ds.Tables("SC3180204Advice")))
            End If
            If (Not (ds.Tables("SC3180204IsAllJobStartByChip")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204IsAllJobStartByChipDataTable(ds.Tables("SC3180204IsAllJobStartByChip")))
            End If
            If (Not (ds.Tables("SC3180204InspectCodeMerge")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204InspectCodeMergeDataTable(ds.Tables("SC3180204InspectCodeMerge")))
            End If
            If (Not (ds.Tables("SC3180204AdviceJob")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204AdviceJobDataTable(ds.Tables("SC3180204AdviceJob")))
            End If
            If (Not (ds.Tables("PreviosReplacementMileage")) Is Nothing) Then
                MyBase.Tables.Add(New PreviosReplacementMileageDataTable(ds.Tables("PreviosReplacementMileage")))
            End If
            If (Not (ds.Tables("SystemSetting")) Is Nothing) Then
                MyBase.Tables.Add(New SystemSettingDataTable(ds.Tables("SystemSetting")))
            End If
            If (Not (ds.Tables("SC3180204PreviousPartsReplace")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204PreviousPartsReplaceDataTable(ds.Tables("SC3180204PreviousPartsReplace")))
            End If
            If (Not (ds.Tables("SC3180204InspectionNeedFlg")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204InspectionNeedFlgDataTable(ds.Tables("SC3180204InspectionNeedFlg")))
            End If
            If (Not (ds.Tables("SC3180204InspectionApprovalDatetime")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204InspectionApprovalDatetimeDataTable(ds.Tables("SC3180204InspectionApprovalDatetime")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3180204HederInfo() As SC3180204HederInfoDataTable
        Get
            Return Me.tableSC3180204HederInfo
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3180204InspectCode() As SC3180204InspectCodeDataTable
        Get
            Return Me.tableSC3180204InspectCode
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3180204ChkLastChip() As SC3180204ChkLastChipDataTable
        Get
            Return Me.tableSC3180204ChkLastChip
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3180204tblcheck() As SC3180204tblcheckDataTable
        Get
            Return Me.tableSC3180204tblcheck
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3180204MainteCodeList() As SC3180204MainteCodeListDataTable
        Get
            Return Me.tableSC3180204MainteCodeList
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3180204ServiceLockVersion() As SC3180204ServiceLockVersionDataTable
        Get
            Return Me.tableSC3180204ServiceLockVersion
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3180204AproveStf() As SC3180204AproveStfDataTable
        Get
            Return Me.tableSC3180204AproveStf
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3180204StallUseId() As SC3180204StallUseIdDataTable
        Get
            Return Me.tableSC3180204StallUseId
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3180204NoticeProcessingInfo() As SC3180204NoticeProcessingInfoDataTable
        Get
            Return Me.tableSC3180204NoticeProcessingInfo
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3180204PicSaStf() As SC3180204PicSaStfDataTable
        Get
            Return Me.tableSC3180204PicSaStf
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3180204RoState() As SC3180204RoStateDataTable
        Get
            Return Me.tableSC3180204RoState
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3180204RegistInfo() As SC3180204RegistInfoDataTable
        Get
            Return Me.tableSC3180204RegistInfo
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3180204PicClient() As SC3180204PicClientDataTable
        Get
            Return Me.tableSC3180204PicClient
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3180204Advice() As SC3180204AdviceDataTable
        Get
            Return Me.tableSC3180204Advice
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3180204IsAllJobStartByChip() As SC3180204IsAllJobStartByChipDataTable
        Get
            Return Me.tableSC3180204IsAllJobStartByChip
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3180204InspectCodeMerge() As SC3180204InspectCodeMergeDataTable
        Get
            Return Me.tableSC3180204InspectCodeMerge
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3180204AdviceJob() As SC3180204AdviceJobDataTable
        Get
            Return Me.tableSC3180204AdviceJob
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PreviosReplacementMileage() As PreviosReplacementMileageDataTable
        Get
            Return Me.tablePreviosReplacementMileage
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SystemSetting() As SystemSettingDataTable
        Get
            Return Me.tableSystemSetting
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3180204PreviousPartsReplace() As SC3180204PreviousPartsReplaceDataTable
        Get
            Return Me.tableSC3180204PreviousPartsReplace
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3180204InspectionNeedFlg() As SC3180204InspectionNeedFlgDataTable
        Get
            Return Me.tableSC3180204InspectionNeedFlg
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SC3180204InspectionApprovalDatetime() As SC3180204InspectionApprovalDatetimeDataTable
        Get
            Return Me.tableSC3180204InspectionApprovalDatetime
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As SC3180204DataSet = CType(MyBase.Clone,SC3180204DataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("SC3180204HederInfo")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204HederInfoDataTable(ds.Tables("SC3180204HederInfo")))
            End If
            If (Not (ds.Tables("SC3180204InspectCode")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204InspectCodeDataTable(ds.Tables("SC3180204InspectCode")))
            End If
            If (Not (ds.Tables("SC3180204ChkLastChip")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204ChkLastChipDataTable(ds.Tables("SC3180204ChkLastChip")))
            End If
            If (Not (ds.Tables("SC3180204tblcheck")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204tblcheckDataTable(ds.Tables("SC3180204tblcheck")))
            End If
            If (Not (ds.Tables("SC3180204MainteCodeList")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204MainteCodeListDataTable(ds.Tables("SC3180204MainteCodeList")))
            End If
            If (Not (ds.Tables("SC3180204ServiceLockVersion")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204ServiceLockVersionDataTable(ds.Tables("SC3180204ServiceLockVersion")))
            End If
            If (Not (ds.Tables("SC3180204AproveStf")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204AproveStfDataTable(ds.Tables("SC3180204AproveStf")))
            End If
            If (Not (ds.Tables("SC3180204StallUseId")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204StallUseIdDataTable(ds.Tables("SC3180204StallUseId")))
            End If
            If (Not (ds.Tables("SC3180204NoticeProcessingInfo")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204NoticeProcessingInfoDataTable(ds.Tables("SC3180204NoticeProcessingInfo")))
            End If
            If (Not (ds.Tables("SC3180204PicSaStf")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204PicSaStfDataTable(ds.Tables("SC3180204PicSaStf")))
            End If
            If (Not (ds.Tables("SC3180204RoState")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204RoStateDataTable(ds.Tables("SC3180204RoState")))
            End If
            If (Not (ds.Tables("SC3180204RegistInfo")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204RegistInfoDataTable(ds.Tables("SC3180204RegistInfo")))
            End If
            If (Not (ds.Tables("SC3180204PicClient")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204PicClientDataTable(ds.Tables("SC3180204PicClient")))
            End If
            If (Not (ds.Tables("SC3180204Advice")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204AdviceDataTable(ds.Tables("SC3180204Advice")))
            End If
            If (Not (ds.Tables("SC3180204IsAllJobStartByChip")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204IsAllJobStartByChipDataTable(ds.Tables("SC3180204IsAllJobStartByChip")))
            End If
            If (Not (ds.Tables("SC3180204InspectCodeMerge")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204InspectCodeMergeDataTable(ds.Tables("SC3180204InspectCodeMerge")))
            End If
            If (Not (ds.Tables("SC3180204AdviceJob")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204AdviceJobDataTable(ds.Tables("SC3180204AdviceJob")))
            End If
            If (Not (ds.Tables("PreviosReplacementMileage")) Is Nothing) Then
                MyBase.Tables.Add(New PreviosReplacementMileageDataTable(ds.Tables("PreviosReplacementMileage")))
            End If
            If (Not (ds.Tables("SystemSetting")) Is Nothing) Then
                MyBase.Tables.Add(New SystemSettingDataTable(ds.Tables("SystemSetting")))
            End If
            If (Not (ds.Tables("SC3180204PreviousPartsReplace")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204PreviousPartsReplaceDataTable(ds.Tables("SC3180204PreviousPartsReplace")))
            End If
            If (Not (ds.Tables("SC3180204InspectionNeedFlg")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204InspectionNeedFlgDataTable(ds.Tables("SC3180204InspectionNeedFlg")))
            End If
            If (Not (ds.Tables("SC3180204InspectionApprovalDatetime")) Is Nothing) Then
                MyBase.Tables.Add(New SC3180204InspectionApprovalDatetimeDataTable(ds.Tables("SC3180204InspectionApprovalDatetime")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableSC3180204HederInfo = CType(MyBase.Tables("SC3180204HederInfo"),SC3180204HederInfoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3180204HederInfo) Is Nothing) Then
                Me.tableSC3180204HederInfo.InitVars
            End If
        End If
        Me.tableSC3180204InspectCode = CType(MyBase.Tables("SC3180204InspectCode"),SC3180204InspectCodeDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3180204InspectCode) Is Nothing) Then
                Me.tableSC3180204InspectCode.InitVars
            End If
        End If
        Me.tableSC3180204ChkLastChip = CType(MyBase.Tables("SC3180204ChkLastChip"),SC3180204ChkLastChipDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3180204ChkLastChip) Is Nothing) Then
                Me.tableSC3180204ChkLastChip.InitVars
            End If
        End If
        Me.tableSC3180204tblcheck = CType(MyBase.Tables("SC3180204tblcheck"),SC3180204tblcheckDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3180204tblcheck) Is Nothing) Then
                Me.tableSC3180204tblcheck.InitVars
            End If
        End If
        Me.tableSC3180204MainteCodeList = CType(MyBase.Tables("SC3180204MainteCodeList"),SC3180204MainteCodeListDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3180204MainteCodeList) Is Nothing) Then
                Me.tableSC3180204MainteCodeList.InitVars
            End If
        End If
        Me.tableSC3180204ServiceLockVersion = CType(MyBase.Tables("SC3180204ServiceLockVersion"),SC3180204ServiceLockVersionDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3180204ServiceLockVersion) Is Nothing) Then
                Me.tableSC3180204ServiceLockVersion.InitVars
            End If
        End If
        Me.tableSC3180204AproveStf = CType(MyBase.Tables("SC3180204AproveStf"),SC3180204AproveStfDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3180204AproveStf) Is Nothing) Then
                Me.tableSC3180204AproveStf.InitVars
            End If
        End If
        Me.tableSC3180204StallUseId = CType(MyBase.Tables("SC3180204StallUseId"),SC3180204StallUseIdDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3180204StallUseId) Is Nothing) Then
                Me.tableSC3180204StallUseId.InitVars
            End If
        End If
        Me.tableSC3180204NoticeProcessingInfo = CType(MyBase.Tables("SC3180204NoticeProcessingInfo"),SC3180204NoticeProcessingInfoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3180204NoticeProcessingInfo) Is Nothing) Then
                Me.tableSC3180204NoticeProcessingInfo.InitVars
            End If
        End If
        Me.tableSC3180204PicSaStf = CType(MyBase.Tables("SC3180204PicSaStf"),SC3180204PicSaStfDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3180204PicSaStf) Is Nothing) Then
                Me.tableSC3180204PicSaStf.InitVars
            End If
        End If
        Me.tableSC3180204RoState = CType(MyBase.Tables("SC3180204RoState"),SC3180204RoStateDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3180204RoState) Is Nothing) Then
                Me.tableSC3180204RoState.InitVars
            End If
        End If
        Me.tableSC3180204RegistInfo = CType(MyBase.Tables("SC3180204RegistInfo"),SC3180204RegistInfoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3180204RegistInfo) Is Nothing) Then
                Me.tableSC3180204RegistInfo.InitVars
            End If
        End If
        Me.tableSC3180204PicClient = CType(MyBase.Tables("SC3180204PicClient"),SC3180204PicClientDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3180204PicClient) Is Nothing) Then
                Me.tableSC3180204PicClient.InitVars
            End If
        End If
        Me.tableSC3180204Advice = CType(MyBase.Tables("SC3180204Advice"),SC3180204AdviceDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3180204Advice) Is Nothing) Then
                Me.tableSC3180204Advice.InitVars
            End If
        End If
        Me.tableSC3180204IsAllJobStartByChip = CType(MyBase.Tables("SC3180204IsAllJobStartByChip"),SC3180204IsAllJobStartByChipDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3180204IsAllJobStartByChip) Is Nothing) Then
                Me.tableSC3180204IsAllJobStartByChip.InitVars
            End If
        End If
        Me.tableSC3180204InspectCodeMerge = CType(MyBase.Tables("SC3180204InspectCodeMerge"),SC3180204InspectCodeMergeDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3180204InspectCodeMerge) Is Nothing) Then
                Me.tableSC3180204InspectCodeMerge.InitVars
            End If
        End If
        Me.tableSC3180204AdviceJob = CType(MyBase.Tables("SC3180204AdviceJob"),SC3180204AdviceJobDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3180204AdviceJob) Is Nothing) Then
                Me.tableSC3180204AdviceJob.InitVars
            End If
        End If
        Me.tablePreviosReplacementMileage = CType(MyBase.Tables("PreviosReplacementMileage"),PreviosReplacementMileageDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePreviosReplacementMileage) Is Nothing) Then
                Me.tablePreviosReplacementMileage.InitVars
            End If
        End If
        Me.tableSystemSetting = CType(MyBase.Tables("SystemSetting"),SystemSettingDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSystemSetting) Is Nothing) Then
                Me.tableSystemSetting.InitVars
            End If
        End If
        Me.tableSC3180204PreviousPartsReplace = CType(MyBase.Tables("SC3180204PreviousPartsReplace"),SC3180204PreviousPartsReplaceDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3180204PreviousPartsReplace) Is Nothing) Then
                Me.tableSC3180204PreviousPartsReplace.InitVars
            End If
        End If
        Me.tableSC3180204InspectionNeedFlg = CType(MyBase.Tables("SC3180204InspectionNeedFlg"),SC3180204InspectionNeedFlgDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3180204InspectionNeedFlg) Is Nothing) Then
                Me.tableSC3180204InspectionNeedFlg.InitVars
            End If
        End If
        Me.tableSC3180204InspectionApprovalDatetime = CType(MyBase.Tables("SC3180204InspectionApprovalDatetime"),SC3180204InspectionApprovalDatetimeDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSC3180204InspectionApprovalDatetime) Is Nothing) Then
                Me.tableSC3180204InspectionApprovalDatetime.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "SC3180204DataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSet1.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableSC3180204HederInfo = New SC3180204HederInfoDataTable()
        MyBase.Tables.Add(Me.tableSC3180204HederInfo)
        Me.tableSC3180204InspectCode = New SC3180204InspectCodeDataTable()
        MyBase.Tables.Add(Me.tableSC3180204InspectCode)
        Me.tableSC3180204ChkLastChip = New SC3180204ChkLastChipDataTable()
        MyBase.Tables.Add(Me.tableSC3180204ChkLastChip)
        Me.tableSC3180204tblcheck = New SC3180204tblcheckDataTable()
        MyBase.Tables.Add(Me.tableSC3180204tblcheck)
        Me.tableSC3180204MainteCodeList = New SC3180204MainteCodeListDataTable()
        MyBase.Tables.Add(Me.tableSC3180204MainteCodeList)
        Me.tableSC3180204ServiceLockVersion = New SC3180204ServiceLockVersionDataTable()
        MyBase.Tables.Add(Me.tableSC3180204ServiceLockVersion)
        Me.tableSC3180204AproveStf = New SC3180204AproveStfDataTable()
        MyBase.Tables.Add(Me.tableSC3180204AproveStf)
        Me.tableSC3180204StallUseId = New SC3180204StallUseIdDataTable()
        MyBase.Tables.Add(Me.tableSC3180204StallUseId)
        Me.tableSC3180204NoticeProcessingInfo = New SC3180204NoticeProcessingInfoDataTable()
        MyBase.Tables.Add(Me.tableSC3180204NoticeProcessingInfo)
        Me.tableSC3180204PicSaStf = New SC3180204PicSaStfDataTable()
        MyBase.Tables.Add(Me.tableSC3180204PicSaStf)
        Me.tableSC3180204RoState = New SC3180204RoStateDataTable()
        MyBase.Tables.Add(Me.tableSC3180204RoState)
        Me.tableSC3180204RegistInfo = New SC3180204RegistInfoDataTable()
        MyBase.Tables.Add(Me.tableSC3180204RegistInfo)
        Me.tableSC3180204PicClient = New SC3180204PicClientDataTable()
        MyBase.Tables.Add(Me.tableSC3180204PicClient)
        Me.tableSC3180204Advice = New SC3180204AdviceDataTable()
        MyBase.Tables.Add(Me.tableSC3180204Advice)
        Me.tableSC3180204IsAllJobStartByChip = New SC3180204IsAllJobStartByChipDataTable()
        MyBase.Tables.Add(Me.tableSC3180204IsAllJobStartByChip)
        Me.tableSC3180204InspectCodeMerge = New SC3180204InspectCodeMergeDataTable()
        MyBase.Tables.Add(Me.tableSC3180204InspectCodeMerge)
        Me.tableSC3180204AdviceJob = New SC3180204AdviceJobDataTable()
        MyBase.Tables.Add(Me.tableSC3180204AdviceJob)
        Me.tablePreviosReplacementMileage = New PreviosReplacementMileageDataTable()
        MyBase.Tables.Add(Me.tablePreviosReplacementMileage)
        Me.tableSystemSetting = New SystemSettingDataTable()
        MyBase.Tables.Add(Me.tableSystemSetting)
        Me.tableSC3180204PreviousPartsReplace = New SC3180204PreviousPartsReplaceDataTable()
        MyBase.Tables.Add(Me.tableSC3180204PreviousPartsReplace)
        Me.tableSC3180204InspectionNeedFlg = New SC3180204InspectionNeedFlgDataTable()
        MyBase.Tables.Add(Me.tableSC3180204InspectionNeedFlg)
        Me.tableSC3180204InspectionApprovalDatetime = New SC3180204InspectionApprovalDatetimeDataTable()
        MyBase.Tables.Add(Me.tableSC3180204InspectionApprovalDatetime)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3180204HederInfo() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3180204InspectCode() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3180204ChkLastChip() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3180204tblcheck() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3180204MainteCodeList() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3180204ServiceLockVersion() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3180204AproveStf() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3180204StallUseId() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3180204NoticeProcessingInfo() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3180204PicSaStf() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3180204RoState() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3180204RegistInfo() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3180204PicClient() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3180204Advice() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3180204IsAllJobStartByChip() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3180204InspectCodeMerge() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3180204AdviceJob() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePreviosReplacementMileage() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSystemSetting() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3180204PreviousPartsReplace() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3180204InspectionNeedFlg() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSC3180204InspectionApprovalDatetime() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As SC3180204DataSet = New SC3180204DataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3180204HederInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3180204HederInfoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3180204InspectCodeRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3180204InspectCodeRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3180204ChkLastChipRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3180204ChkLastChipRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3180204tblcheckRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3180204tblcheckRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3180204MainteCodeListRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3180204MainteCodeListRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3180204ServiceLockVersionRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3180204ServiceLockVersionRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3180204AproveStfRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3180204AproveStfRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3180204StallUseIdRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3180204StallUseIdRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3180204NoticeProcessingInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3180204NoticeProcessingInfoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3180204PicSaStfRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3180204PicSaStfRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3180204RoStateRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3180204RoStateRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3180204RegistInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3180204RegistInfoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3180204PicClientRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3180204PicClientRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3180204AdviceRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3180204AdviceRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3180204IsAllJobStartByChipRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3180204IsAllJobStartByChipRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3180204InspectCodeMergeRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3180204InspectCodeMergeRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3180204AdviceJobRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3180204AdviceJobRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PreviosReplacementMileageRowChangeEventHandler(ByVal sender As Object, ByVal e As PreviosReplacementMileageRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SystemSettingRowChangeEventHandler(ByVal sender As Object, ByVal e As SystemSettingRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3180204PreviousPartsReplaceRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3180204PreviousPartsReplaceRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3180204InspectionNeedFlgRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3180204InspectionNeedFlgRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SC3180204InspectionApprovalDatetimeRowChangeEventHandler(ByVal sender As Object, ByVal e As SC3180204InspectionApprovalDatetimeRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3180204HederInfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3180204HederInfoRow)
        
        Private columnREG_NUM As Global.System.Data.DataColumn
        
        Private columnACCEPTANCE_TYPE As Global.System.Data.DataColumn
        
        Private columnMODEL_CD As Global.System.Data.DataColumn
        
        Private columnMARK As Global.System.Data.DataColumn
        
        Private columnSVC_CLASS_NAME As Global.System.Data.DataColumn
        
        Private columnSCHE_DELI_DATETIME As Global.System.Data.DataColumn
        
        Private columnVISITNAME As Global.System.Data.DataColumn
        
        Private columnRSLT_SVCIN_DATETIME As Global.System.Data.DataColumn
        
        Private columnUSERNAME As Global.System.Data.DataColumn
        
        Private columnVISITTELNO As Global.System.Data.DataColumn
        
        Private columnRSLT_DELI_DATETIME As Global.System.Data.DataColumn
        
        Private columnCONTACT_PERSON_NAME As Global.System.Data.DataColumn
        
        Private columnIMP_VCL_FLG As Global.System.Data.DataColumn
        
        Private columnCONTACT_PHONE As Global.System.Data.DataColumn
        
        Private columnSRV_ROW_LOCK_VERSION As Global.System.Data.DataColumn
        
        Private columnRO_ROW_LOCK_VERSION As Global.System.Data.DataColumn
        
        Private columnSVCIN_ID As Global.System.Data.DataColumn
        
        Private columnMODEL_NAME As Global.System.Data.DataColumn
        
        Private columnACCOUNT As Global.System.Data.DataColumn
        
        Private columnOPERATIONCODE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3180204HederInfo"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REG_NUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREG_NUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACCEPTANCE_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCEPTANCE_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODEL_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MARKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMARK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SVC_CLASS_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSVC_CLASS_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SCHE_DELI_DATETIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCHE_DELI_DATETIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VISITNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVISITNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RSLT_SVCIN_DATETIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRSLT_SVCIN_DATETIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property USERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VISITTELNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVISITTELNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RSLT_DELI_DATETIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRSLT_DELI_DATETIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTACT_PERSON_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACT_PERSON_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMP_VCL_FLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_VCL_FLG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTACT_PHONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACT_PHONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SRV_ROW_LOCK_VERSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRV_ROW_LOCK_VERSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RO_ROW_LOCK_VERSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRO_ROW_LOCK_VERSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SVCIN_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSVCIN_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODEL_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OPERATIONCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPERATIONCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3180204HederInfoRow
            Get
                Return CType(Me.Rows(index),SC3180204HederInfoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204HederInfoRowChanging As SC3180204HederInfoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204HederInfoRowChanged As SC3180204HederInfoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204HederInfoRowDeleting As SC3180204HederInfoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204HederInfoRowDeleted As SC3180204HederInfoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3180204HederInfoRow(ByVal row As SC3180204HederInfoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3180204HederInfoRow( _
                    ByVal REG_NUM As String,  _
                    ByVal ACCEPTANCE_TYPE As String,  _
                    ByVal MODEL_CD As String,  _
                    ByVal MARK As String,  _
                    ByVal SVC_CLASS_NAME As String,  _
                    ByVal SCHE_DELI_DATETIME As String,  _
                    ByVal VISITNAME As String,  _
                    ByVal RSLT_SVCIN_DATETIME As String,  _
                    ByVal USERNAME As String,  _
                    ByVal VISITTELNO As String,  _
                    ByVal RSLT_DELI_DATETIME As String,  _
                    ByVal CONTACT_PERSON_NAME As String,  _
                    ByVal IMP_VCL_FLG As String,  _
                    ByVal CONTACT_PHONE As String,  _
                    ByVal SRV_ROW_LOCK_VERSION As String,  _
                    ByVal RO_ROW_LOCK_VERSION As String,  _
                    ByVal SVCIN_ID As String,  _
                    ByVal MODEL_NAME As String,  _
                    ByVal ACCOUNT As String,  _
                    ByVal OPERATIONCODE As String) As SC3180204HederInfoRow
            Dim rowSC3180204HederInfoRow As SC3180204HederInfoRow = CType(Me.NewRow,SC3180204HederInfoRow)
            Dim columnValuesArray() As Object = New Object() {REG_NUM, ACCEPTANCE_TYPE, MODEL_CD, MARK, SVC_CLASS_NAME, SCHE_DELI_DATETIME, VISITNAME, RSLT_SVCIN_DATETIME, USERNAME, VISITTELNO, RSLT_DELI_DATETIME, CONTACT_PERSON_NAME, IMP_VCL_FLG, CONTACT_PHONE, SRV_ROW_LOCK_VERSION, RO_ROW_LOCK_VERSION, SVCIN_ID, MODEL_NAME, ACCOUNT, OPERATIONCODE}
            rowSC3180204HederInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3180204HederInfoRow)
            Return rowSC3180204HederInfoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3180204HederInfoDataTable = CType(MyBase.Clone,SC3180204HederInfoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3180204HederInfoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnREG_NUM = MyBase.Columns("REG_NUM")
            Me.columnACCEPTANCE_TYPE = MyBase.Columns("ACCEPTANCE_TYPE")
            Me.columnMODEL_CD = MyBase.Columns("MODEL_CD")
            Me.columnMARK = MyBase.Columns("MARK")
            Me.columnSVC_CLASS_NAME = MyBase.Columns("SVC_CLASS_NAME")
            Me.columnSCHE_DELI_DATETIME = MyBase.Columns("SCHE_DELI_DATETIME")
            Me.columnVISITNAME = MyBase.Columns("VISITNAME")
            Me.columnRSLT_SVCIN_DATETIME = MyBase.Columns("RSLT_SVCIN_DATETIME")
            Me.columnUSERNAME = MyBase.Columns("USERNAME")
            Me.columnVISITTELNO = MyBase.Columns("VISITTELNO")
            Me.columnRSLT_DELI_DATETIME = MyBase.Columns("RSLT_DELI_DATETIME")
            Me.columnCONTACT_PERSON_NAME = MyBase.Columns("CONTACT_PERSON_NAME")
            Me.columnIMP_VCL_FLG = MyBase.Columns("IMP_VCL_FLG")
            Me.columnCONTACT_PHONE = MyBase.Columns("CONTACT_PHONE")
            Me.columnSRV_ROW_LOCK_VERSION = MyBase.Columns("SRV_ROW_LOCK_VERSION")
            Me.columnRO_ROW_LOCK_VERSION = MyBase.Columns("RO_ROW_LOCK_VERSION")
            Me.columnSVCIN_ID = MyBase.Columns("SVCIN_ID")
            Me.columnMODEL_NAME = MyBase.Columns("MODEL_NAME")
            Me.columnACCOUNT = MyBase.Columns("ACCOUNT")
            Me.columnOPERATIONCODE = MyBase.Columns("OPERATIONCODE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnREG_NUM = New Global.System.Data.DataColumn("REG_NUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREG_NUM)
            Me.columnACCEPTANCE_TYPE = New Global.System.Data.DataColumn("ACCEPTANCE_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCEPTANCE_TYPE)
            Me.columnMODEL_CD = New Global.System.Data.DataColumn("MODEL_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL_CD)
            Me.columnMARK = New Global.System.Data.DataColumn("MARK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMARK)
            Me.columnSVC_CLASS_NAME = New Global.System.Data.DataColumn("SVC_CLASS_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSVC_CLASS_NAME)
            Me.columnSCHE_DELI_DATETIME = New Global.System.Data.DataColumn("SCHE_DELI_DATETIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCHE_DELI_DATETIME)
            Me.columnVISITNAME = New Global.System.Data.DataColumn("VISITNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVISITNAME)
            Me.columnRSLT_SVCIN_DATETIME = New Global.System.Data.DataColumn("RSLT_SVCIN_DATETIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRSLT_SVCIN_DATETIME)
            Me.columnUSERNAME = New Global.System.Data.DataColumn("USERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSERNAME)
            Me.columnVISITTELNO = New Global.System.Data.DataColumn("VISITTELNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVISITTELNO)
            Me.columnRSLT_DELI_DATETIME = New Global.System.Data.DataColumn("RSLT_DELI_DATETIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRSLT_DELI_DATETIME)
            Me.columnCONTACT_PERSON_NAME = New Global.System.Data.DataColumn("CONTACT_PERSON_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACT_PERSON_NAME)
            Me.columnIMP_VCL_FLG = New Global.System.Data.DataColumn("IMP_VCL_FLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_VCL_FLG)
            Me.columnCONTACT_PHONE = New Global.System.Data.DataColumn("CONTACT_PHONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACT_PHONE)
            Me.columnSRV_ROW_LOCK_VERSION = New Global.System.Data.DataColumn("SRV_ROW_LOCK_VERSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRV_ROW_LOCK_VERSION)
            Me.columnRO_ROW_LOCK_VERSION = New Global.System.Data.DataColumn("RO_ROW_LOCK_VERSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRO_ROW_LOCK_VERSION)
            Me.columnSVCIN_ID = New Global.System.Data.DataColumn("SVCIN_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSVCIN_ID)
            Me.columnMODEL_NAME = New Global.System.Data.DataColumn("MODEL_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL_NAME)
            Me.columnACCOUNT = New Global.System.Data.DataColumn("ACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT)
            Me.columnOPERATIONCODE = New Global.System.Data.DataColumn("OPERATIONCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPERATIONCODE)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3180204HederInfoRow() As SC3180204HederInfoRow
            Return CType(Me.NewRow,SC3180204HederInfoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3180204HederInfoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3180204HederInfoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3180204HederInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3180204HederInfoRowChanged(Me, New SC3180204HederInfoRowChangeEvent(CType(e.Row,SC3180204HederInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3180204HederInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3180204HederInfoRowChanging(Me, New SC3180204HederInfoRowChangeEvent(CType(e.Row,SC3180204HederInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3180204HederInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3180204HederInfoRowDeleted(Me, New SC3180204HederInfoRowChangeEvent(CType(e.Row,SC3180204HederInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3180204HederInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3180204HederInfoRowDeleting(Me, New SC3180204HederInfoRowChangeEvent(CType(e.Row,SC3180204HederInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3180204HederInfoRow(ByVal row As SC3180204HederInfoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3180204DataSet = New SC3180204DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3180204HederInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3180204InspectCodeDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3180204InspectCodeRow)
        
        Private columnDLR_CD As Global.System.Data.DataColumn
        
        Private columnBRN_CD As Global.System.Data.DataColumn
        
        Private columnSVCIN_ID As Global.System.Data.DataColumn
        
        Private columnJOB_DTL_ID As Global.System.Data.DataColumn
        
        Private columnINSPECTION_NEED_FLG As Global.System.Data.DataColumn
        
        Private columnSTALL_USE_ID As Global.System.Data.DataColumn
        
        Private columnSTALL_USE_STATUS As Global.System.Data.DataColumn
        
        Private columnJOB_INSTRUCT_ID As Global.System.Data.DataColumn
        
        Private columnJOB_INSTRUCT_SEQ As Global.System.Data.DataColumn
        
        Private columnRO_NUM As Global.System.Data.DataColumn
        
        Private columnRO_SEQ As Global.System.Data.DataColumn
        
        Private columnJOB_CD As Global.System.Data.DataColumn
        
        Private columnJOB_NAME As Global.System.Data.DataColumn
        
        Private columnSVC_CD As Global.System.Data.DataColumn
        
        Private columnMODEL_CD As Global.System.Data.DataColumn
        
        Private columnGRADE_CD As Global.System.Data.DataColumn
        
        Private columnINSPEC_ITEM_CD As Global.System.Data.DataColumn
        
        Private columnINSPEC_ITEM_NAME As Global.System.Data.DataColumn
        
        Private columnSUB_INSPEC_ITEM_NAME As Global.System.Data.DataColumn
        
        Private columnDISP_INSPEC_ITEM_NO_PROBLEM As Global.System.Data.DataColumn
        
        Private columnDISP_INSPEC_ITEM_NEED_INSPEC As Global.System.Data.DataColumn
        
        Private columnDISP_INSPEC_ITEM_NEED_REPLACE As Global.System.Data.DataColumn
        
        Private columnDISP_INSPEC_ITEM_NEED_FIX As Global.System.Data.DataColumn
        
        Private columnDISP_INSPEC_ITEM_NEED_CLEAN As Global.System.Data.DataColumn
        
        Private columnDISP_INSPEC_ITEM_NEED_SWAP As Global.System.Data.DataColumn
        
        Private columnDISP_TEXT_PERM As Global.System.Data.DataColumn
        
        Private columnPART_CD As Global.System.Data.DataColumn
        
        Private columnPART_NAME As Global.System.Data.DataColumn
        
        Private columnAPPROVAL_STATUS As Global.System.Data.DataColumn
        
        Private columnJOB_INSTRUCT_ID1 As Global.System.Data.DataColumn
        
        Private columnJOB_INSTRUCT_SEQ1 As Global.System.Data.DataColumn
        
        Private columnINSPEC_ITEM_CD1 As Global.System.Data.DataColumn
        
        Private columnINSPEC_RSLT_CD As Global.System.Data.DataColumn
        
        Private columnOPERATION_RSLT_ALREADY_REPLACE As Global.System.Data.DataColumn
        
        Private columnOPERATION_RSLT_ALREADY_FIX As Global.System.Data.DataColumn
        
        Private columnOPERATION_RSLT_ALREADY_CLEAN As Global.System.Data.DataColumn
        
        Private columnOPERATION_RSLT_ALREADY_SWAP As Global.System.Data.DataColumn
        
        Private columnRSLT_VAL_BEFORE As Global.System.Data.DataColumn
        
        Private columnRSLT_VAL_AFTER As Global.System.Data.DataColumn
        
        Private columnTRN_ROW_LOCK_VERSION As Global.System.Data.DataColumn
        
        Private columnINSPECTION_STATUS As Global.System.Data.DataColumn
        
        Private columnRO_STATUS As Global.System.Data.DataColumn
        
        Private columnDISP_OPE_ITEM_ALREADY_REPLACE As Global.System.Data.DataColumn
        
        Private columnDISP_OPE_ITEM_ALREADY_FIX As Global.System.Data.DataColumn
        
        Private columnDISP_OPE_ITEM_ALREADY_CLEAN As Global.System.Data.DataColumn
        
        Private columnDISP_OPE_ITEM_ALREADY_SWAP As Global.System.Data.DataColumn
        
        Private columnDISP_INSPEC_ITEM_NO_ACTION As Global.System.Data.DataColumn
        
        Private columnEDIT_FLAG As Global.System.Data.DataColumn
        
        Private columnEXCLUSION_ROW_LOCK_VERSION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3180204InspectCode"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DLR_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDLR_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BRN_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRN_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SVCIN_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSVCIN_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JOB_DTL_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJOB_DTL_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPECTION_NEED_FLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPECTION_NEED_FLG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STALL_USE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTALL_USE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STALL_USE_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTALL_USE_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JOB_INSTRUCT_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJOB_INSTRUCT_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JOB_INSTRUCT_SEQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJOB_INSTRUCT_SEQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RO_NUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRO_NUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RO_SEQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRO_SEQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JOB_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJOB_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JOB_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJOB_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SVC_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSVC_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODEL_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GRADE_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRADE_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPEC_ITEM_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPEC_ITEM_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPEC_ITEM_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPEC_ITEM_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUB_INSPEC_ITEM_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUB_INSPEC_ITEM_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISP_INSPEC_ITEM_NO_PROBLEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISP_INSPEC_ITEM_NO_PROBLEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISP_INSPEC_ITEM_NEED_INSPECColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISP_INSPEC_ITEM_NEED_INSPEC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISP_INSPEC_ITEM_NEED_REPLACEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISP_INSPEC_ITEM_NEED_REPLACE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISP_INSPEC_ITEM_NEED_FIXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISP_INSPEC_ITEM_NEED_FIX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISP_INSPEC_ITEM_NEED_CLEANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISP_INSPEC_ITEM_NEED_CLEAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISP_INSPEC_ITEM_NEED_SWAPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISP_INSPEC_ITEM_NEED_SWAP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISP_TEXT_PERMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISP_TEXT_PERM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PART_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPART_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PART_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPART_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APPROVAL_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPPROVAL_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JOB_INSTRUCT_ID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnJOB_INSTRUCT_ID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JOB_INSTRUCT_SEQ1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnJOB_INSTRUCT_SEQ1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPEC_ITEM_CD1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPEC_ITEM_CD1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPEC_RSLT_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPEC_RSLT_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OPERATION_RSLT_ALREADY_REPLACEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPERATION_RSLT_ALREADY_REPLACE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OPERATION_RSLT_ALREADY_FIXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPERATION_RSLT_ALREADY_FIX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OPERATION_RSLT_ALREADY_CLEANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPERATION_RSLT_ALREADY_CLEAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OPERATION_RSLT_ALREADY_SWAPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPERATION_RSLT_ALREADY_SWAP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RSLT_VAL_BEFOREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRSLT_VAL_BEFORE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RSLT_VAL_AFTERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRSLT_VAL_AFTER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRN_ROW_LOCK_VERSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRN_ROW_LOCK_VERSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPECTION_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPECTION_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RO_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRO_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISP_OPE_ITEM_ALREADY_REPLACEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISP_OPE_ITEM_ALREADY_REPLACE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISP_OPE_ITEM_ALREADY_FIXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISP_OPE_ITEM_ALREADY_FIX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISP_OPE_ITEM_ALREADY_CLEANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISP_OPE_ITEM_ALREADY_CLEAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISP_OPE_ITEM_ALREADY_SWAPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISP_OPE_ITEM_ALREADY_SWAP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISP_INSPEC_ITEM_NO_ACTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISP_INSPEC_ITEM_NO_ACTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EDIT_FLAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEDIT_FLAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXCLUSION_ROW_LOCK_VERSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXCLUSION_ROW_LOCK_VERSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3180204InspectCodeRow
            Get
                Return CType(Me.Rows(index),SC3180204InspectCodeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204InspectCodeRowChanging As SC3180204InspectCodeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204InspectCodeRowChanged As SC3180204InspectCodeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204InspectCodeRowDeleting As SC3180204InspectCodeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204InspectCodeRowDeleted As SC3180204InspectCodeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3180204InspectCodeRow(ByVal row As SC3180204InspectCodeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3180204InspectCodeRow( _
                    ByVal DLR_CD As String,  _
                    ByVal BRN_CD As String,  _
                    ByVal SVCIN_ID As String,  _
                    ByVal JOB_DTL_ID As String,  _
                    ByVal INSPECTION_NEED_FLG As String,  _
                    ByVal STALL_USE_ID As String,  _
                    ByVal STALL_USE_STATUS As String,  _
                    ByVal JOB_INSTRUCT_ID As String,  _
                    ByVal JOB_INSTRUCT_SEQ As String,  _
                    ByVal RO_NUM As String,  _
                    ByVal RO_SEQ As String,  _
                    ByVal JOB_CD As String,  _
                    ByVal JOB_NAME As String,  _
                    ByVal SVC_CD As String,  _
                    ByVal MODEL_CD As String,  _
                    ByVal GRADE_CD As String,  _
                    ByVal INSPEC_ITEM_CD As String,  _
                    ByVal INSPEC_ITEM_NAME As String,  _
                    ByVal SUB_INSPEC_ITEM_NAME As String,  _
                    ByVal DISP_INSPEC_ITEM_NO_PROBLEM As String,  _
                    ByVal DISP_INSPEC_ITEM_NEED_INSPEC As String,  _
                    ByVal DISP_INSPEC_ITEM_NEED_REPLACE As String,  _
                    ByVal DISP_INSPEC_ITEM_NEED_FIX As String,  _
                    ByVal DISP_INSPEC_ITEM_NEED_CLEAN As String,  _
                    ByVal DISP_INSPEC_ITEM_NEED_SWAP As String,  _
                    ByVal DISP_TEXT_PERM As String,  _
                    ByVal PART_CD As String,  _
                    ByVal PART_NAME As String,  _
                    ByVal APPROVAL_STATUS As String,  _
                    ByVal JOB_INSTRUCT_ID1 As String,  _
                    ByVal JOB_INSTRUCT_SEQ1 As String,  _
                    ByVal INSPEC_ITEM_CD1 As String,  _
                    ByVal INSPEC_RSLT_CD As String,  _
                    ByVal OPERATION_RSLT_ALREADY_REPLACE As String,  _
                    ByVal OPERATION_RSLT_ALREADY_FIX As String,  _
                    ByVal OPERATION_RSLT_ALREADY_CLEAN As String,  _
                    ByVal OPERATION_RSLT_ALREADY_SWAP As String,  _
                    ByVal RSLT_VAL_BEFORE As String,  _
                    ByVal RSLT_VAL_AFTER As String,  _
                    ByVal TRN_ROW_LOCK_VERSION As String,  _
                    ByVal INSPECTION_STATUS As String,  _
                    ByVal RO_STATUS As String,  _
                    ByVal DISP_OPE_ITEM_ALREADY_REPLACE As String,  _
                    ByVal DISP_OPE_ITEM_ALREADY_FIX As String,  _
                    ByVal DISP_OPE_ITEM_ALREADY_CLEAN As String,  _
                    ByVal DISP_OPE_ITEM_ALREADY_SWAP As String,  _
                    ByVal DISP_INSPEC_ITEM_NO_ACTION As String,  _
                    ByVal EDIT_FLAG As String,  _
                    ByVal EXCLUSION_ROW_LOCK_VERSION As String) As SC3180204InspectCodeRow
            Dim rowSC3180204InspectCodeRow As SC3180204InspectCodeRow = CType(Me.NewRow,SC3180204InspectCodeRow)
            Dim columnValuesArray() As Object = New Object() {DLR_CD, BRN_CD, SVCIN_ID, JOB_DTL_ID, INSPECTION_NEED_FLG, STALL_USE_ID, STALL_USE_STATUS, JOB_INSTRUCT_ID, JOB_INSTRUCT_SEQ, RO_NUM, RO_SEQ, JOB_CD, JOB_NAME, SVC_CD, MODEL_CD, GRADE_CD, INSPEC_ITEM_CD, INSPEC_ITEM_NAME, SUB_INSPEC_ITEM_NAME, DISP_INSPEC_ITEM_NO_PROBLEM, DISP_INSPEC_ITEM_NEED_INSPEC, DISP_INSPEC_ITEM_NEED_REPLACE, DISP_INSPEC_ITEM_NEED_FIX, DISP_INSPEC_ITEM_NEED_CLEAN, DISP_INSPEC_ITEM_NEED_SWAP, DISP_TEXT_PERM, PART_CD, PART_NAME, APPROVAL_STATUS, JOB_INSTRUCT_ID1, JOB_INSTRUCT_SEQ1, INSPEC_ITEM_CD1, INSPEC_RSLT_CD, OPERATION_RSLT_ALREADY_REPLACE, OPERATION_RSLT_ALREADY_FIX, OPERATION_RSLT_ALREADY_CLEAN, OPERATION_RSLT_ALREADY_SWAP, RSLT_VAL_BEFORE, RSLT_VAL_AFTER, TRN_ROW_LOCK_VERSION, INSPECTION_STATUS, RO_STATUS, DISP_OPE_ITEM_ALREADY_REPLACE, DISP_OPE_ITEM_ALREADY_FIX, DISP_OPE_ITEM_ALREADY_CLEAN, DISP_OPE_ITEM_ALREADY_SWAP, DISP_INSPEC_ITEM_NO_ACTION, EDIT_FLAG, EXCLUSION_ROW_LOCK_VERSION}
            rowSC3180204InspectCodeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3180204InspectCodeRow)
            Return rowSC3180204InspectCodeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3180204InspectCodeDataTable = CType(MyBase.Clone,SC3180204InspectCodeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3180204InspectCodeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDLR_CD = MyBase.Columns("DLR_CD")
            Me.columnBRN_CD = MyBase.Columns("BRN_CD")
            Me.columnSVCIN_ID = MyBase.Columns("SVCIN_ID")
            Me.columnJOB_DTL_ID = MyBase.Columns("JOB_DTL_ID")
            Me.columnINSPECTION_NEED_FLG = MyBase.Columns("INSPECTION_NEED_FLG")
            Me.columnSTALL_USE_ID = MyBase.Columns("STALL_USE_ID")
            Me.columnSTALL_USE_STATUS = MyBase.Columns("STALL_USE_STATUS")
            Me.columnJOB_INSTRUCT_ID = MyBase.Columns("JOB_INSTRUCT_ID")
            Me.columnJOB_INSTRUCT_SEQ = MyBase.Columns("JOB_INSTRUCT_SEQ")
            Me.columnRO_NUM = MyBase.Columns("RO_NUM")
            Me.columnRO_SEQ = MyBase.Columns("RO_SEQ")
            Me.columnJOB_CD = MyBase.Columns("JOB_CD")
            Me.columnJOB_NAME = MyBase.Columns("JOB_NAME")
            Me.columnSVC_CD = MyBase.Columns("SVC_CD")
            Me.columnMODEL_CD = MyBase.Columns("MODEL_CD")
            Me.columnGRADE_CD = MyBase.Columns("GRADE_CD")
            Me.columnINSPEC_ITEM_CD = MyBase.Columns("INSPEC_ITEM_CD")
            Me.columnINSPEC_ITEM_NAME = MyBase.Columns("INSPEC_ITEM_NAME")
            Me.columnSUB_INSPEC_ITEM_NAME = MyBase.Columns("SUB_INSPEC_ITEM_NAME")
            Me.columnDISP_INSPEC_ITEM_NO_PROBLEM = MyBase.Columns("DISP_INSPEC_ITEM_NO_PROBLEM")
            Me.columnDISP_INSPEC_ITEM_NEED_INSPEC = MyBase.Columns("DISP_INSPEC_ITEM_NEED_INSPEC")
            Me.columnDISP_INSPEC_ITEM_NEED_REPLACE = MyBase.Columns("DISP_INSPEC_ITEM_NEED_REPLACE")
            Me.columnDISP_INSPEC_ITEM_NEED_FIX = MyBase.Columns("DISP_INSPEC_ITEM_NEED_FIX")
            Me.columnDISP_INSPEC_ITEM_NEED_CLEAN = MyBase.Columns("DISP_INSPEC_ITEM_NEED_CLEAN")
            Me.columnDISP_INSPEC_ITEM_NEED_SWAP = MyBase.Columns("DISP_INSPEC_ITEM_NEED_SWAP")
            Me.columnDISP_TEXT_PERM = MyBase.Columns("DISP_TEXT_PERM")
            Me.columnPART_CD = MyBase.Columns("PART_CD")
            Me.columnPART_NAME = MyBase.Columns("PART_NAME")
            Me.columnAPPROVAL_STATUS = MyBase.Columns("APPROVAL_STATUS")
            Me.columnJOB_INSTRUCT_ID1 = MyBase.Columns("JOB_INSTRUCT_ID1")
            Me.columnJOB_INSTRUCT_SEQ1 = MyBase.Columns("JOB_INSTRUCT_SEQ1")
            Me.columnINSPEC_ITEM_CD1 = MyBase.Columns("INSPEC_ITEM_CD1")
            Me.columnINSPEC_RSLT_CD = MyBase.Columns("INSPEC_RSLT_CD")
            Me.columnOPERATION_RSLT_ALREADY_REPLACE = MyBase.Columns("OPERATION_RSLT_ALREADY_REPLACE")
            Me.columnOPERATION_RSLT_ALREADY_FIX = MyBase.Columns("OPERATION_RSLT_ALREADY_FIX")
            Me.columnOPERATION_RSLT_ALREADY_CLEAN = MyBase.Columns("OPERATION_RSLT_ALREADY_CLEAN")
            Me.columnOPERATION_RSLT_ALREADY_SWAP = MyBase.Columns("OPERATION_RSLT_ALREADY_SWAP")
            Me.columnRSLT_VAL_BEFORE = MyBase.Columns("RSLT_VAL_BEFORE")
            Me.columnRSLT_VAL_AFTER = MyBase.Columns("RSLT_VAL_AFTER")
            Me.columnTRN_ROW_LOCK_VERSION = MyBase.Columns("TRN_ROW_LOCK_VERSION")
            Me.columnINSPECTION_STATUS = MyBase.Columns("INSPECTION_STATUS")
            Me.columnRO_STATUS = MyBase.Columns("RO_STATUS")
            Me.columnDISP_OPE_ITEM_ALREADY_REPLACE = MyBase.Columns("DISP_OPE_ITEM_ALREADY_REPLACE")
            Me.columnDISP_OPE_ITEM_ALREADY_FIX = MyBase.Columns("DISP_OPE_ITEM_ALREADY_FIX")
            Me.columnDISP_OPE_ITEM_ALREADY_CLEAN = MyBase.Columns("DISP_OPE_ITEM_ALREADY_CLEAN")
            Me.columnDISP_OPE_ITEM_ALREADY_SWAP = MyBase.Columns("DISP_OPE_ITEM_ALREADY_SWAP")
            Me.columnDISP_INSPEC_ITEM_NO_ACTION = MyBase.Columns("DISP_INSPEC_ITEM_NO_ACTION")
            Me.columnEDIT_FLAG = MyBase.Columns("EDIT_FLAG")
            Me.columnEXCLUSION_ROW_LOCK_VERSION = MyBase.Columns("EXCLUSION_ROW_LOCK_VERSION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDLR_CD = New Global.System.Data.DataColumn("DLR_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDLR_CD)
            Me.columnBRN_CD = New Global.System.Data.DataColumn("BRN_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRN_CD)
            Me.columnSVCIN_ID = New Global.System.Data.DataColumn("SVCIN_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSVCIN_ID)
            Me.columnJOB_DTL_ID = New Global.System.Data.DataColumn("JOB_DTL_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJOB_DTL_ID)
            Me.columnINSPECTION_NEED_FLG = New Global.System.Data.DataColumn("INSPECTION_NEED_FLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPECTION_NEED_FLG)
            Me.columnSTALL_USE_ID = New Global.System.Data.DataColumn("STALL_USE_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTALL_USE_ID)
            Me.columnSTALL_USE_STATUS = New Global.System.Data.DataColumn("STALL_USE_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTALL_USE_STATUS)
            Me.columnJOB_INSTRUCT_ID = New Global.System.Data.DataColumn("JOB_INSTRUCT_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJOB_INSTRUCT_ID)
            Me.columnJOB_INSTRUCT_SEQ = New Global.System.Data.DataColumn("JOB_INSTRUCT_SEQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJOB_INSTRUCT_SEQ)
            Me.columnRO_NUM = New Global.System.Data.DataColumn("RO_NUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRO_NUM)
            Me.columnRO_SEQ = New Global.System.Data.DataColumn("RO_SEQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRO_SEQ)
            Me.columnJOB_CD = New Global.System.Data.DataColumn("JOB_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJOB_CD)
            Me.columnJOB_NAME = New Global.System.Data.DataColumn("JOB_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJOB_NAME)
            Me.columnSVC_CD = New Global.System.Data.DataColumn("SVC_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSVC_CD)
            Me.columnMODEL_CD = New Global.System.Data.DataColumn("MODEL_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL_CD)
            Me.columnGRADE_CD = New Global.System.Data.DataColumn("GRADE_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRADE_CD)
            Me.columnINSPEC_ITEM_CD = New Global.System.Data.DataColumn("INSPEC_ITEM_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPEC_ITEM_CD)
            Me.columnINSPEC_ITEM_NAME = New Global.System.Data.DataColumn("INSPEC_ITEM_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPEC_ITEM_NAME)
            Me.columnSUB_INSPEC_ITEM_NAME = New Global.System.Data.DataColumn("SUB_INSPEC_ITEM_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUB_INSPEC_ITEM_NAME)
            Me.columnDISP_INSPEC_ITEM_NO_PROBLEM = New Global.System.Data.DataColumn("DISP_INSPEC_ITEM_NO_PROBLEM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISP_INSPEC_ITEM_NO_PROBLEM)
            Me.columnDISP_INSPEC_ITEM_NEED_INSPEC = New Global.System.Data.DataColumn("DISP_INSPEC_ITEM_NEED_INSPEC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISP_INSPEC_ITEM_NEED_INSPEC)
            Me.columnDISP_INSPEC_ITEM_NEED_REPLACE = New Global.System.Data.DataColumn("DISP_INSPEC_ITEM_NEED_REPLACE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISP_INSPEC_ITEM_NEED_REPLACE)
            Me.columnDISP_INSPEC_ITEM_NEED_FIX = New Global.System.Data.DataColumn("DISP_INSPEC_ITEM_NEED_FIX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISP_INSPEC_ITEM_NEED_FIX)
            Me.columnDISP_INSPEC_ITEM_NEED_CLEAN = New Global.System.Data.DataColumn("DISP_INSPEC_ITEM_NEED_CLEAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISP_INSPEC_ITEM_NEED_CLEAN)
            Me.columnDISP_INSPEC_ITEM_NEED_SWAP = New Global.System.Data.DataColumn("DISP_INSPEC_ITEM_NEED_SWAP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISP_INSPEC_ITEM_NEED_SWAP)
            Me.columnDISP_TEXT_PERM = New Global.System.Data.DataColumn("DISP_TEXT_PERM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISP_TEXT_PERM)
            Me.columnPART_CD = New Global.System.Data.DataColumn("PART_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPART_CD)
            Me.columnPART_NAME = New Global.System.Data.DataColumn("PART_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPART_NAME)
            Me.columnAPPROVAL_STATUS = New Global.System.Data.DataColumn("APPROVAL_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPPROVAL_STATUS)
            Me.columnJOB_INSTRUCT_ID1 = New Global.System.Data.DataColumn("JOB_INSTRUCT_ID1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJOB_INSTRUCT_ID1)
            Me.columnJOB_INSTRUCT_SEQ1 = New Global.System.Data.DataColumn("JOB_INSTRUCT_SEQ1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJOB_INSTRUCT_SEQ1)
            Me.columnINSPEC_ITEM_CD1 = New Global.System.Data.DataColumn("INSPEC_ITEM_CD1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPEC_ITEM_CD1)
            Me.columnINSPEC_RSLT_CD = New Global.System.Data.DataColumn("INSPEC_RSLT_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPEC_RSLT_CD)
            Me.columnOPERATION_RSLT_ALREADY_REPLACE = New Global.System.Data.DataColumn("OPERATION_RSLT_ALREADY_REPLACE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPERATION_RSLT_ALREADY_REPLACE)
            Me.columnOPERATION_RSLT_ALREADY_FIX = New Global.System.Data.DataColumn("OPERATION_RSLT_ALREADY_FIX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPERATION_RSLT_ALREADY_FIX)
            Me.columnOPERATION_RSLT_ALREADY_CLEAN = New Global.System.Data.DataColumn("OPERATION_RSLT_ALREADY_CLEAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPERATION_RSLT_ALREADY_CLEAN)
            Me.columnOPERATION_RSLT_ALREADY_SWAP = New Global.System.Data.DataColumn("OPERATION_RSLT_ALREADY_SWAP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPERATION_RSLT_ALREADY_SWAP)
            Me.columnRSLT_VAL_BEFORE = New Global.System.Data.DataColumn("RSLT_VAL_BEFORE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRSLT_VAL_BEFORE)
            Me.columnRSLT_VAL_AFTER = New Global.System.Data.DataColumn("RSLT_VAL_AFTER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRSLT_VAL_AFTER)
            Me.columnTRN_ROW_LOCK_VERSION = New Global.System.Data.DataColumn("TRN_ROW_LOCK_VERSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRN_ROW_LOCK_VERSION)
            Me.columnINSPECTION_STATUS = New Global.System.Data.DataColumn("INSPECTION_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPECTION_STATUS)
            Me.columnRO_STATUS = New Global.System.Data.DataColumn("RO_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRO_STATUS)
            Me.columnDISP_OPE_ITEM_ALREADY_REPLACE = New Global.System.Data.DataColumn("DISP_OPE_ITEM_ALREADY_REPLACE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISP_OPE_ITEM_ALREADY_REPLACE)
            Me.columnDISP_OPE_ITEM_ALREADY_FIX = New Global.System.Data.DataColumn("DISP_OPE_ITEM_ALREADY_FIX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISP_OPE_ITEM_ALREADY_FIX)
            Me.columnDISP_OPE_ITEM_ALREADY_CLEAN = New Global.System.Data.DataColumn("DISP_OPE_ITEM_ALREADY_CLEAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISP_OPE_ITEM_ALREADY_CLEAN)
            Me.columnDISP_OPE_ITEM_ALREADY_SWAP = New Global.System.Data.DataColumn("DISP_OPE_ITEM_ALREADY_SWAP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISP_OPE_ITEM_ALREADY_SWAP)
            Me.columnDISP_INSPEC_ITEM_NO_ACTION = New Global.System.Data.DataColumn("DISP_INSPEC_ITEM_NO_ACTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISP_INSPEC_ITEM_NO_ACTION)
            Me.columnEDIT_FLAG = New Global.System.Data.DataColumn("EDIT_FLAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEDIT_FLAG)
            Me.columnEXCLUSION_ROW_LOCK_VERSION = New Global.System.Data.DataColumn("EXCLUSION_ROW_LOCK_VERSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXCLUSION_ROW_LOCK_VERSION)
            Me.columnMODEL_CD.Caption = "DataColumn1"
            Me.columnGRADE_CD.Caption = "DataColumn2"
            Me.columnINSPEC_ITEM_CD.Caption = "DataColumn3"
            Me.columnINSPEC_ITEM_NAME.Caption = "DataColumn1"
            Me.columnSUB_INSPEC_ITEM_NAME.Caption = "DataColumn2"
            Me.columnDISP_INSPEC_ITEM_NO_PROBLEM.Caption = "DataColumn3"
            Me.columnDISP_INSPEC_ITEM_NEED_INSPEC.Caption = "DataColumn1"
            Me.columnDISP_INSPEC_ITEM_NEED_REPLACE.Caption = "DataColumn2"
            Me.columnDISP_INSPEC_ITEM_NEED_FIX.Caption = "DataColumn3"
            Me.columnJOB_INSTRUCT_ID1.Caption = "JOB_INSTRUCT_ID"
            Me.columnJOB_INSTRUCT_SEQ1.Caption = "JOB_INSTRUCT_SEQ"
            Me.columnINSPEC_ITEM_CD1.Caption = "INSPEC_ITEM_CD"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3180204InspectCodeRow() As SC3180204InspectCodeRow
            Return CType(Me.NewRow,SC3180204InspectCodeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3180204InspectCodeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3180204InspectCodeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3180204InspectCodeRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3180204InspectCodeRowChanged(Me, New SC3180204InspectCodeRowChangeEvent(CType(e.Row,SC3180204InspectCodeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3180204InspectCodeRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3180204InspectCodeRowChanging(Me, New SC3180204InspectCodeRowChangeEvent(CType(e.Row,SC3180204InspectCodeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3180204InspectCodeRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3180204InspectCodeRowDeleted(Me, New SC3180204InspectCodeRowChangeEvent(CType(e.Row,SC3180204InspectCodeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3180204InspectCodeRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3180204InspectCodeRowDeleting(Me, New SC3180204InspectCodeRowChangeEvent(CType(e.Row,SC3180204InspectCodeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3180204InspectCodeRow(ByVal row As SC3180204InspectCodeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3180204DataSet = New SC3180204DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3180204InspectCodeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3180204ChkLastChipDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3180204ChkLastChipRow)
        
        Private columncount As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3180204ChkLastChip"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property countColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3180204ChkLastChipRow
            Get
                Return CType(Me.Rows(index),SC3180204ChkLastChipRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204ChkLastChipRowChanging As SC3180204ChkLastChipRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204ChkLastChipRowChanged As SC3180204ChkLastChipRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204ChkLastChipRowDeleting As SC3180204ChkLastChipRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204ChkLastChipRowDeleted As SC3180204ChkLastChipRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3180204ChkLastChipRow(ByVal row As SC3180204ChkLastChipRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3180204ChkLastChipRow(ByVal count As String) As SC3180204ChkLastChipRow
            Dim rowSC3180204ChkLastChipRow As SC3180204ChkLastChipRow = CType(Me.NewRow,SC3180204ChkLastChipRow)
            Dim columnValuesArray() As Object = New Object() {count}
            rowSC3180204ChkLastChipRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3180204ChkLastChipRow)
            Return rowSC3180204ChkLastChipRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3180204ChkLastChipDataTable = CType(MyBase.Clone,SC3180204ChkLastChipDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3180204ChkLastChipDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columncount = MyBase.Columns("COUNT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columncount = New Global.System.Data.DataColumn("COUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columncount.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "count")
            Me.columncount.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "countColumn")
            Me.columncount.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columncount")
            Me.columncount.ExtendedProperties.Add("Generator_UserColumnName", "COUNT")
            MyBase.Columns.Add(Me.columncount)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3180204ChkLastChipRow() As SC3180204ChkLastChipRow
            Return CType(Me.NewRow,SC3180204ChkLastChipRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3180204ChkLastChipRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3180204ChkLastChipRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3180204ChkLastChipRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3180204ChkLastChipRowChanged(Me, New SC3180204ChkLastChipRowChangeEvent(CType(e.Row,SC3180204ChkLastChipRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3180204ChkLastChipRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3180204ChkLastChipRowChanging(Me, New SC3180204ChkLastChipRowChangeEvent(CType(e.Row,SC3180204ChkLastChipRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3180204ChkLastChipRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3180204ChkLastChipRowDeleted(Me, New SC3180204ChkLastChipRowChangeEvent(CType(e.Row,SC3180204ChkLastChipRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3180204ChkLastChipRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3180204ChkLastChipRowDeleting(Me, New SC3180204ChkLastChipRowChangeEvent(CType(e.Row,SC3180204ChkLastChipRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3180204ChkLastChipRow(ByVal row As SC3180204ChkLastChipRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3180204DataSet = New SC3180204DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3180204ChkLastChipDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3180204tblcheckDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3180204tblcheckRow)
        
        Private columnCOUNT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3180204tblcheck"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3180204tblcheckRow
            Get
                Return CType(Me.Rows(index),SC3180204tblcheckRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204tblcheckRowChanging As SC3180204tblcheckRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204tblcheckRowChanged As SC3180204tblcheckRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204tblcheckRowDeleting As SC3180204tblcheckRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204tblcheckRowDeleted As SC3180204tblcheckRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3180204tblcheckRow(ByVal row As SC3180204tblcheckRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3180204tblcheckRow(ByVal COUNT As String) As SC3180204tblcheckRow
            Dim rowSC3180204tblcheckRow As SC3180204tblcheckRow = CType(Me.NewRow,SC3180204tblcheckRow)
            Dim columnValuesArray() As Object = New Object() {COUNT}
            rowSC3180204tblcheckRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3180204tblcheckRow)
            Return rowSC3180204tblcheckRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3180204tblcheckDataTable = CType(MyBase.Clone,SC3180204tblcheckDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3180204tblcheckDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCOUNT = MyBase.Columns("COUNT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCOUNT = New Global.System.Data.DataColumn("COUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOUNT)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3180204tblcheckRow() As SC3180204tblcheckRow
            Return CType(Me.NewRow,SC3180204tblcheckRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3180204tblcheckRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3180204tblcheckRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3180204tblcheckRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3180204tblcheckRowChanged(Me, New SC3180204tblcheckRowChangeEvent(CType(e.Row,SC3180204tblcheckRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3180204tblcheckRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3180204tblcheckRowChanging(Me, New SC3180204tblcheckRowChangeEvent(CType(e.Row,SC3180204tblcheckRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3180204tblcheckRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3180204tblcheckRowDeleted(Me, New SC3180204tblcheckRowChangeEvent(CType(e.Row,SC3180204tblcheckRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3180204tblcheckRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3180204tblcheckRowDeleting(Me, New SC3180204tblcheckRowChangeEvent(CType(e.Row,SC3180204tblcheckRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3180204tblcheckRow(ByVal row As SC3180204tblcheckRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3180204DataSet = New SC3180204DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3180204tblcheckDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3180204MainteCodeListDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3180204MainteCodeListRow)
        
        Private columnDLR_CD As Global.System.Data.DataColumn
        
        Private columnBRN_CD As Global.System.Data.DataColumn
        
        Private columnSVCIN_ID As Global.System.Data.DataColumn
        
        Private columnJOB_DTL_ID As Global.System.Data.DataColumn
        
        Private columnJOB_DTL_SEQ As Global.System.Data.DataColumn
        
        Private columnRO_NUM As Global.System.Data.DataColumn
        
        Private columnJOB_CD As Global.System.Data.DataColumn
        
        Private columnJOB_NAME As Global.System.Data.DataColumn
        
        Private columnJOB_STF_GROUP_NAME As Global.System.Data.DataColumn
        
        Private columnOPERATION_TYPE_NAME As Global.System.Data.DataColumn
        
        Private columnINSPEC_RSLT_CD As Global.System.Data.DataColumn
        
        Private columnSTALL_USE_ID As Global.System.Data.DataColumn
        
        Private columnSTALL_USE_STATUS As Global.System.Data.DataColumn
        
        Private columnINSPECTION_NEED_FLG As Global.System.Data.DataColumn
        
        Private columnAPPROVAL_STATUS As Global.System.Data.DataColumn
        
        Private columnINSPECTION_STATUS As Global.System.Data.DataColumn
        
        Private columnTRN_ROW_LOCK_VERSION As Global.System.Data.DataColumn
        
        Private columnRO_STATUS As Global.System.Data.DataColumn
        
        Private columnJOB_INSTRUCT_ID As Global.System.Data.DataColumn
        
        Private columnEDIT_FLAG As Global.System.Data.DataColumn
        
        Private columnEXCLUSION_ROW_LOCK_VERSION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3180204MainteCodeList"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DLR_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDLR_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BRN_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRN_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SVCIN_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSVCIN_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JOB_DTL_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJOB_DTL_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JOB_DTL_SEQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJOB_DTL_SEQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RO_NUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRO_NUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JOB_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJOB_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JOB_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJOB_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JOB_STF_GROUP_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJOB_STF_GROUP_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OPERATION_TYPE_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPERATION_TYPE_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPEC_RSLT_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPEC_RSLT_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STALL_USE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTALL_USE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STALL_USE_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTALL_USE_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPECTION_NEED_FLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPECTION_NEED_FLG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APPROVAL_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPPROVAL_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPECTION_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPECTION_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRN_ROW_LOCK_VERSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRN_ROW_LOCK_VERSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RO_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRO_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JOB_INSTRUCT_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJOB_INSTRUCT_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EDIT_FLAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEDIT_FLAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXCLUSION_ROW_LOCK_VERSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXCLUSION_ROW_LOCK_VERSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3180204MainteCodeListRow
            Get
                Return CType(Me.Rows(index),SC3180204MainteCodeListRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204MainteCodeListRowChanging As SC3180204MainteCodeListRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204MainteCodeListRowChanged As SC3180204MainteCodeListRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204MainteCodeListRowDeleting As SC3180204MainteCodeListRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204MainteCodeListRowDeleted As SC3180204MainteCodeListRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3180204MainteCodeListRow(ByVal row As SC3180204MainteCodeListRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3180204MainteCodeListRow( _
                    ByVal DLR_CD As String,  _
                    ByVal BRN_CD As String,  _
                    ByVal SVCIN_ID As String,  _
                    ByVal JOB_DTL_ID As String,  _
                    ByVal JOB_DTL_SEQ As String,  _
                    ByVal RO_NUM As String,  _
                    ByVal JOB_CD As String,  _
                    ByVal JOB_NAME As String,  _
                    ByVal JOB_STF_GROUP_NAME As String,  _
                    ByVal OPERATION_TYPE_NAME As String,  _
                    ByVal INSPEC_RSLT_CD As String,  _
                    ByVal STALL_USE_ID As String,  _
                    ByVal STALL_USE_STATUS As String,  _
                    ByVal INSPECTION_NEED_FLG As String,  _
                    ByVal APPROVAL_STATUS As String,  _
                    ByVal INSPECTION_STATUS As String,  _
                    ByVal TRN_ROW_LOCK_VERSION As String,  _
                    ByVal RO_STATUS As String,  _
                    ByVal JOB_INSTRUCT_ID As String,  _
                    ByVal EDIT_FLAG As String,  _
                    ByVal EXCLUSION_ROW_LOCK_VERSION As String) As SC3180204MainteCodeListRow
            Dim rowSC3180204MainteCodeListRow As SC3180204MainteCodeListRow = CType(Me.NewRow,SC3180204MainteCodeListRow)
            Dim columnValuesArray() As Object = New Object() {DLR_CD, BRN_CD, SVCIN_ID, JOB_DTL_ID, JOB_DTL_SEQ, RO_NUM, JOB_CD, JOB_NAME, JOB_STF_GROUP_NAME, OPERATION_TYPE_NAME, INSPEC_RSLT_CD, STALL_USE_ID, STALL_USE_STATUS, INSPECTION_NEED_FLG, APPROVAL_STATUS, INSPECTION_STATUS, TRN_ROW_LOCK_VERSION, RO_STATUS, JOB_INSTRUCT_ID, EDIT_FLAG, EXCLUSION_ROW_LOCK_VERSION}
            rowSC3180204MainteCodeListRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3180204MainteCodeListRow)
            Return rowSC3180204MainteCodeListRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3180204MainteCodeListDataTable = CType(MyBase.Clone,SC3180204MainteCodeListDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3180204MainteCodeListDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDLR_CD = MyBase.Columns("DLR_CD")
            Me.columnBRN_CD = MyBase.Columns("BRN_CD")
            Me.columnSVCIN_ID = MyBase.Columns("SVCIN_ID")
            Me.columnJOB_DTL_ID = MyBase.Columns("JOB_DTL_ID")
            Me.columnJOB_DTL_SEQ = MyBase.Columns("JOB_DTL_SEQ")
            Me.columnRO_NUM = MyBase.Columns("RO_NUM")
            Me.columnJOB_CD = MyBase.Columns("JOB_CD")
            Me.columnJOB_NAME = MyBase.Columns("JOB_NAME")
            Me.columnJOB_STF_GROUP_NAME = MyBase.Columns("JOB_STF_GROUP_NAME")
            Me.columnOPERATION_TYPE_NAME = MyBase.Columns("OPERATION_TYPE_NAME")
            Me.columnINSPEC_RSLT_CD = MyBase.Columns("INSPEC_RSLT_CD")
            Me.columnSTALL_USE_ID = MyBase.Columns("STALL_USE_ID")
            Me.columnSTALL_USE_STATUS = MyBase.Columns("STALL_USE_STATUS")
            Me.columnINSPECTION_NEED_FLG = MyBase.Columns("INSPECTION_NEED_FLG")
            Me.columnAPPROVAL_STATUS = MyBase.Columns("APPROVAL_STATUS")
            Me.columnINSPECTION_STATUS = MyBase.Columns("INSPECTION_STATUS")
            Me.columnTRN_ROW_LOCK_VERSION = MyBase.Columns("TRN_ROW_LOCK_VERSION")
            Me.columnRO_STATUS = MyBase.Columns("RO_STATUS")
            Me.columnJOB_INSTRUCT_ID = MyBase.Columns("JOB_INSTRUCT_ID")
            Me.columnEDIT_FLAG = MyBase.Columns("EDIT_FLAG")
            Me.columnEXCLUSION_ROW_LOCK_VERSION = MyBase.Columns("EXCLUSION_ROW_LOCK_VERSION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDLR_CD = New Global.System.Data.DataColumn("DLR_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDLR_CD)
            Me.columnBRN_CD = New Global.System.Data.DataColumn("BRN_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRN_CD)
            Me.columnSVCIN_ID = New Global.System.Data.DataColumn("SVCIN_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSVCIN_ID)
            Me.columnJOB_DTL_ID = New Global.System.Data.DataColumn("JOB_DTL_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJOB_DTL_ID)
            Me.columnJOB_DTL_SEQ = New Global.System.Data.DataColumn("JOB_DTL_SEQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJOB_DTL_SEQ)
            Me.columnRO_NUM = New Global.System.Data.DataColumn("RO_NUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRO_NUM)
            Me.columnJOB_CD = New Global.System.Data.DataColumn("JOB_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJOB_CD)
            Me.columnJOB_NAME = New Global.System.Data.DataColumn("JOB_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJOB_NAME)
            Me.columnJOB_STF_GROUP_NAME = New Global.System.Data.DataColumn("JOB_STF_GROUP_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJOB_STF_GROUP_NAME)
            Me.columnOPERATION_TYPE_NAME = New Global.System.Data.DataColumn("OPERATION_TYPE_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPERATION_TYPE_NAME)
            Me.columnINSPEC_RSLT_CD = New Global.System.Data.DataColumn("INSPEC_RSLT_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPEC_RSLT_CD)
            Me.columnSTALL_USE_ID = New Global.System.Data.DataColumn("STALL_USE_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTALL_USE_ID)
            Me.columnSTALL_USE_STATUS = New Global.System.Data.DataColumn("STALL_USE_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTALL_USE_STATUS)
            Me.columnINSPECTION_NEED_FLG = New Global.System.Data.DataColumn("INSPECTION_NEED_FLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPECTION_NEED_FLG)
            Me.columnAPPROVAL_STATUS = New Global.System.Data.DataColumn("APPROVAL_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPPROVAL_STATUS)
            Me.columnINSPECTION_STATUS = New Global.System.Data.DataColumn("INSPECTION_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPECTION_STATUS)
            Me.columnTRN_ROW_LOCK_VERSION = New Global.System.Data.DataColumn("TRN_ROW_LOCK_VERSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRN_ROW_LOCK_VERSION)
            Me.columnRO_STATUS = New Global.System.Data.DataColumn("RO_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRO_STATUS)
            Me.columnJOB_INSTRUCT_ID = New Global.System.Data.DataColumn("JOB_INSTRUCT_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJOB_INSTRUCT_ID)
            Me.columnEDIT_FLAG = New Global.System.Data.DataColumn("EDIT_FLAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEDIT_FLAG)
            Me.columnEXCLUSION_ROW_LOCK_VERSION = New Global.System.Data.DataColumn("EXCLUSION_ROW_LOCK_VERSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXCLUSION_ROW_LOCK_VERSION)
            Me.columnJOB_DTL_ID.Caption = "RO_NUM"
            Me.columnTRN_ROW_LOCK_VERSION.DefaultValue = CType("0",String)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3180204MainteCodeListRow() As SC3180204MainteCodeListRow
            Return CType(Me.NewRow,SC3180204MainteCodeListRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3180204MainteCodeListRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3180204MainteCodeListRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3180204MainteCodeListRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3180204MainteCodeListRowChanged(Me, New SC3180204MainteCodeListRowChangeEvent(CType(e.Row,SC3180204MainteCodeListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3180204MainteCodeListRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3180204MainteCodeListRowChanging(Me, New SC3180204MainteCodeListRowChangeEvent(CType(e.Row,SC3180204MainteCodeListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3180204MainteCodeListRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3180204MainteCodeListRowDeleted(Me, New SC3180204MainteCodeListRowChangeEvent(CType(e.Row,SC3180204MainteCodeListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3180204MainteCodeListRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3180204MainteCodeListRowDeleting(Me, New SC3180204MainteCodeListRowChangeEvent(CType(e.Row,SC3180204MainteCodeListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3180204MainteCodeListRow(ByVal row As SC3180204MainteCodeListRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3180204DataSet = New SC3180204DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3180204MainteCodeListDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3180204ServiceLockVersionDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3180204ServiceLockVersionRow)
        
        Private columnROW_LOCK_VERSION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3180204ServiceLockVersion"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ROW_LOCK_VERSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROW_LOCK_VERSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3180204ServiceLockVersionRow
            Get
                Return CType(Me.Rows(index),SC3180204ServiceLockVersionRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204ServiceLockVersionRowChanging As SC3180204ServiceLockVersionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204ServiceLockVersionRowChanged As SC3180204ServiceLockVersionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204ServiceLockVersionRowDeleting As SC3180204ServiceLockVersionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204ServiceLockVersionRowDeleted As SC3180204ServiceLockVersionRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3180204ServiceLockVersionRow(ByVal row As SC3180204ServiceLockVersionRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3180204ServiceLockVersionRow(ByVal ROW_LOCK_VERSION As String) As SC3180204ServiceLockVersionRow
            Dim rowSC3180204ServiceLockVersionRow As SC3180204ServiceLockVersionRow = CType(Me.NewRow,SC3180204ServiceLockVersionRow)
            Dim columnValuesArray() As Object = New Object() {ROW_LOCK_VERSION}
            rowSC3180204ServiceLockVersionRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3180204ServiceLockVersionRow)
            Return rowSC3180204ServiceLockVersionRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3180204ServiceLockVersionDataTable = CType(MyBase.Clone,SC3180204ServiceLockVersionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3180204ServiceLockVersionDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnROW_LOCK_VERSION = MyBase.Columns("ROW_LOCK_VERSION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnROW_LOCK_VERSION = New Global.System.Data.DataColumn("ROW_LOCK_VERSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROW_LOCK_VERSION)
            Me.columnROW_LOCK_VERSION.Caption = "COUNT"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3180204ServiceLockVersionRow() As SC3180204ServiceLockVersionRow
            Return CType(Me.NewRow,SC3180204ServiceLockVersionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3180204ServiceLockVersionRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3180204ServiceLockVersionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3180204ServiceLockVersionRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3180204ServiceLockVersionRowChanged(Me, New SC3180204ServiceLockVersionRowChangeEvent(CType(e.Row,SC3180204ServiceLockVersionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3180204ServiceLockVersionRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3180204ServiceLockVersionRowChanging(Me, New SC3180204ServiceLockVersionRowChangeEvent(CType(e.Row,SC3180204ServiceLockVersionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3180204ServiceLockVersionRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3180204ServiceLockVersionRowDeleted(Me, New SC3180204ServiceLockVersionRowChangeEvent(CType(e.Row,SC3180204ServiceLockVersionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3180204ServiceLockVersionRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3180204ServiceLockVersionRowDeleting(Me, New SC3180204ServiceLockVersionRowChangeEvent(CType(e.Row,SC3180204ServiceLockVersionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3180204ServiceLockVersionRow(ByVal row As SC3180204ServiceLockVersionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3180204DataSet = New SC3180204DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3180204ServiceLockVersionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3180204AproveStfDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3180204AproveStfRow)
        
        Private columnACCOUNT As Global.System.Data.DataColumn
        
        Private columnUSERNAME As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3180204AproveStf"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property USERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3180204AproveStfRow
            Get
                Return CType(Me.Rows(index),SC3180204AproveStfRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204AproveStfRowChanging As SC3180204AproveStfRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204AproveStfRowChanged As SC3180204AproveStfRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204AproveStfRowDeleting As SC3180204AproveStfRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204AproveStfRowDeleted As SC3180204AproveStfRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3180204AproveStfRow(ByVal row As SC3180204AproveStfRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3180204AproveStfRow(ByVal ACCOUNT As String, ByVal USERNAME As String) As SC3180204AproveStfRow
            Dim rowSC3180204AproveStfRow As SC3180204AproveStfRow = CType(Me.NewRow,SC3180204AproveStfRow)
            Dim columnValuesArray() As Object = New Object() {ACCOUNT, USERNAME}
            rowSC3180204AproveStfRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3180204AproveStfRow)
            Return rowSC3180204AproveStfRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3180204AproveStfDataTable = CType(MyBase.Clone,SC3180204AproveStfDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3180204AproveStfDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnACCOUNT = MyBase.Columns("ACCOUNT")
            Me.columnUSERNAME = MyBase.Columns("USERNAME")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnACCOUNT = New Global.System.Data.DataColumn("ACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT)
            Me.columnUSERNAME = New Global.System.Data.DataColumn("USERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSERNAME)
            Me.columnACCOUNT.Caption = "COUNT"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3180204AproveStfRow() As SC3180204AproveStfRow
            Return CType(Me.NewRow,SC3180204AproveStfRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3180204AproveStfRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3180204AproveStfRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3180204AproveStfRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3180204AproveStfRowChanged(Me, New SC3180204AproveStfRowChangeEvent(CType(e.Row,SC3180204AproveStfRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3180204AproveStfRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3180204AproveStfRowChanging(Me, New SC3180204AproveStfRowChangeEvent(CType(e.Row,SC3180204AproveStfRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3180204AproveStfRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3180204AproveStfRowDeleted(Me, New SC3180204AproveStfRowChangeEvent(CType(e.Row,SC3180204AproveStfRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3180204AproveStfRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3180204AproveStfRowDeleting(Me, New SC3180204AproveStfRowChangeEvent(CType(e.Row,SC3180204AproveStfRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3180204AproveStfRow(ByVal row As SC3180204AproveStfRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3180204DataSet = New SC3180204DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3180204AproveStfDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3180204StallUseIdDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3180204StallUseIdRow)
        
        Private columnSTALL_USE_ID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3180204StallUseId"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STALL_USE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTALL_USE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3180204StallUseIdRow
            Get
                Return CType(Me.Rows(index),SC3180204StallUseIdRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204StallUseIdRowChanging As SC3180204StallUseIdRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204StallUseIdRowChanged As SC3180204StallUseIdRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204StallUseIdRowDeleting As SC3180204StallUseIdRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204StallUseIdRowDeleted As SC3180204StallUseIdRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3180204StallUseIdRow(ByVal row As SC3180204StallUseIdRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3180204StallUseIdRow(ByVal STALL_USE_ID As String) As SC3180204StallUseIdRow
            Dim rowSC3180204StallUseIdRow As SC3180204StallUseIdRow = CType(Me.NewRow,SC3180204StallUseIdRow)
            Dim columnValuesArray() As Object = New Object() {STALL_USE_ID}
            rowSC3180204StallUseIdRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3180204StallUseIdRow)
            Return rowSC3180204StallUseIdRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3180204StallUseIdDataTable = CType(MyBase.Clone,SC3180204StallUseIdDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3180204StallUseIdDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSTALL_USE_ID = MyBase.Columns("STALL_USE_ID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSTALL_USE_ID = New Global.System.Data.DataColumn("STALL_USE_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTALL_USE_ID)
            Me.columnSTALL_USE_ID.Caption = "APRROVAL_STATUS"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3180204StallUseIdRow() As SC3180204StallUseIdRow
            Return CType(Me.NewRow,SC3180204StallUseIdRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3180204StallUseIdRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3180204StallUseIdRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3180204StallUseIdRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3180204StallUseIdRowChanged(Me, New SC3180204StallUseIdRowChangeEvent(CType(e.Row,SC3180204StallUseIdRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3180204StallUseIdRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3180204StallUseIdRowChanging(Me, New SC3180204StallUseIdRowChangeEvent(CType(e.Row,SC3180204StallUseIdRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3180204StallUseIdRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3180204StallUseIdRowDeleted(Me, New SC3180204StallUseIdRowChangeEvent(CType(e.Row,SC3180204StallUseIdRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3180204StallUseIdRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3180204StallUseIdRowDeleting(Me, New SC3180204StallUseIdRowChangeEvent(CType(e.Row,SC3180204StallUseIdRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3180204StallUseIdRow(ByVal row As SC3180204StallUseIdRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3180204DataSet = New SC3180204DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3180204StallUseIdDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3180204NoticeProcessingInfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3180204NoticeProcessingInfoRow)
        
        Private columnRO_NUM As Global.System.Data.DataColumn
        
        Private columnREG_NO As Global.System.Data.DataColumn
        
        Private columnCST_NAME As Global.System.Data.DataColumn
        
        Private columnNAMETITLE_NAME As Global.System.Data.DataColumn
        
        Private columnPOSITION_TYPE As Global.System.Data.DataColumn
        
        Private columnMERCHANDISENAME As Global.System.Data.DataColumn
        
        Private columnPRESENTTIME As Global.System.Data.DataColumn
        
        Private columnDMS_CST_CD As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3180204NoticeProcessingInfo"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RO_NUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRO_NUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REG_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREG_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMETITLE_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMETITLE_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSITION_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSITION_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MERCHANDISENAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMERCHANDISENAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRESENTTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRESENTTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DMS_CST_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDMS_CST_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3180204NoticeProcessingInfoRow
            Get
                Return CType(Me.Rows(index),SC3180204NoticeProcessingInfoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204NoticeProcessingInfoRowChanging As SC3180204NoticeProcessingInfoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204NoticeProcessingInfoRowChanged As SC3180204NoticeProcessingInfoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204NoticeProcessingInfoRowDeleting As SC3180204NoticeProcessingInfoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204NoticeProcessingInfoRowDeleted As SC3180204NoticeProcessingInfoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3180204NoticeProcessingInfoRow(ByVal row As SC3180204NoticeProcessingInfoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3180204NoticeProcessingInfoRow(ByVal RO_NUM As String, ByVal REG_NO As String, ByVal CST_NAME As String, ByVal NAMETITLE_NAME As String, ByVal POSITION_TYPE As String, ByVal MERCHANDISENAME As String, ByVal PRESENTTIME As String, ByVal DMS_CST_CD As String) As SC3180204NoticeProcessingInfoRow
            Dim rowSC3180204NoticeProcessingInfoRow As SC3180204NoticeProcessingInfoRow = CType(Me.NewRow,SC3180204NoticeProcessingInfoRow)
            Dim columnValuesArray() As Object = New Object() {RO_NUM, REG_NO, CST_NAME, NAMETITLE_NAME, POSITION_TYPE, MERCHANDISENAME, PRESENTTIME, DMS_CST_CD}
            rowSC3180204NoticeProcessingInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3180204NoticeProcessingInfoRow)
            Return rowSC3180204NoticeProcessingInfoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3180204NoticeProcessingInfoDataTable = CType(MyBase.Clone,SC3180204NoticeProcessingInfoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3180204NoticeProcessingInfoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRO_NUM = MyBase.Columns("RO_NUM")
            Me.columnREG_NO = MyBase.Columns("REG_NO")
            Me.columnCST_NAME = MyBase.Columns("CST_NAME")
            Me.columnNAMETITLE_NAME = MyBase.Columns("NAMETITLE_NAME")
            Me.columnPOSITION_TYPE = MyBase.Columns("POSITION_TYPE")
            Me.columnMERCHANDISENAME = MyBase.Columns("MERCHANDISENAME")
            Me.columnPRESENTTIME = MyBase.Columns("PRESENTTIME")
            Me.columnDMS_CST_CD = MyBase.Columns("DMS_CST_CD")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRO_NUM = New Global.System.Data.DataColumn("RO_NUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRO_NUM)
            Me.columnREG_NO = New Global.System.Data.DataColumn("REG_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREG_NO)
            Me.columnCST_NAME = New Global.System.Data.DataColumn("CST_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_NAME)
            Me.columnNAMETITLE_NAME = New Global.System.Data.DataColumn("NAMETITLE_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMETITLE_NAME)
            Me.columnPOSITION_TYPE = New Global.System.Data.DataColumn("POSITION_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSITION_TYPE)
            Me.columnMERCHANDISENAME = New Global.System.Data.DataColumn("MERCHANDISENAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMERCHANDISENAME)
            Me.columnPRESENTTIME = New Global.System.Data.DataColumn("PRESENTTIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRESENTTIME)
            Me.columnDMS_CST_CD = New Global.System.Data.DataColumn("DMS_CST_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDMS_CST_CD)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3180204NoticeProcessingInfoRow() As SC3180204NoticeProcessingInfoRow
            Return CType(Me.NewRow,SC3180204NoticeProcessingInfoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3180204NoticeProcessingInfoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3180204NoticeProcessingInfoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3180204NoticeProcessingInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3180204NoticeProcessingInfoRowChanged(Me, New SC3180204NoticeProcessingInfoRowChangeEvent(CType(e.Row,SC3180204NoticeProcessingInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3180204NoticeProcessingInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3180204NoticeProcessingInfoRowChanging(Me, New SC3180204NoticeProcessingInfoRowChangeEvent(CType(e.Row,SC3180204NoticeProcessingInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3180204NoticeProcessingInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3180204NoticeProcessingInfoRowDeleted(Me, New SC3180204NoticeProcessingInfoRowChangeEvent(CType(e.Row,SC3180204NoticeProcessingInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3180204NoticeProcessingInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3180204NoticeProcessingInfoRowDeleting(Me, New SC3180204NoticeProcessingInfoRowChangeEvent(CType(e.Row,SC3180204NoticeProcessingInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3180204NoticeProcessingInfoRow(ByVal row As SC3180204NoticeProcessingInfoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3180204DataSet = New SC3180204DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3180204NoticeProcessingInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3180204PicSaStfDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3180204PicSaStfRow)
        
        Private columnPIC_SA_STF_CD As Global.System.Data.DataColumn
        
        Private columnUSERNAME As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3180204PicSaStf"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PIC_SA_STF_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPIC_SA_STF_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property USERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3180204PicSaStfRow
            Get
                Return CType(Me.Rows(index),SC3180204PicSaStfRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204PicSaStfRowChanging As SC3180204PicSaStfRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204PicSaStfRowChanged As SC3180204PicSaStfRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204PicSaStfRowDeleting As SC3180204PicSaStfRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204PicSaStfRowDeleted As SC3180204PicSaStfRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3180204PicSaStfRow(ByVal row As SC3180204PicSaStfRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3180204PicSaStfRow(ByVal PIC_SA_STF_CD As String, ByVal USERNAME As String) As SC3180204PicSaStfRow
            Dim rowSC3180204PicSaStfRow As SC3180204PicSaStfRow = CType(Me.NewRow,SC3180204PicSaStfRow)
            Dim columnValuesArray() As Object = New Object() {PIC_SA_STF_CD, USERNAME}
            rowSC3180204PicSaStfRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3180204PicSaStfRow)
            Return rowSC3180204PicSaStfRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3180204PicSaStfDataTable = CType(MyBase.Clone,SC3180204PicSaStfDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3180204PicSaStfDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPIC_SA_STF_CD = MyBase.Columns("PIC_SA_STF_CD")
            Me.columnUSERNAME = MyBase.Columns("USERNAME")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPIC_SA_STF_CD = New Global.System.Data.DataColumn("PIC_SA_STF_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPIC_SA_STF_CD)
            Me.columnUSERNAME = New Global.System.Data.DataColumn("USERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSERNAME)
            Me.columnPIC_SA_STF_CD.Caption = "COUNT"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3180204PicSaStfRow() As SC3180204PicSaStfRow
            Return CType(Me.NewRow,SC3180204PicSaStfRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3180204PicSaStfRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3180204PicSaStfRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3180204PicSaStfRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3180204PicSaStfRowChanged(Me, New SC3180204PicSaStfRowChangeEvent(CType(e.Row,SC3180204PicSaStfRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3180204PicSaStfRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3180204PicSaStfRowChanging(Me, New SC3180204PicSaStfRowChangeEvent(CType(e.Row,SC3180204PicSaStfRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3180204PicSaStfRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3180204PicSaStfRowDeleted(Me, New SC3180204PicSaStfRowChangeEvent(CType(e.Row,SC3180204PicSaStfRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3180204PicSaStfRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3180204PicSaStfRowDeleting(Me, New SC3180204PicSaStfRowChangeEvent(CType(e.Row,SC3180204PicSaStfRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3180204PicSaStfRow(ByVal row As SC3180204PicSaStfRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3180204DataSet = New SC3180204DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3180204PicSaStfDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3180204RoStateDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3180204RoStateRow)
        
        Private columnRO_STATUS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3180204RoState"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RO_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRO_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3180204RoStateRow
            Get
                Return CType(Me.Rows(index),SC3180204RoStateRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204RoStateRowChanging As SC3180204RoStateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204RoStateRowChanged As SC3180204RoStateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204RoStateRowDeleting As SC3180204RoStateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204RoStateRowDeleted As SC3180204RoStateRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3180204RoStateRow(ByVal row As SC3180204RoStateRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3180204RoStateRow(ByVal RO_STATUS As String) As SC3180204RoStateRow
            Dim rowSC3180204RoStateRow As SC3180204RoStateRow = CType(Me.NewRow,SC3180204RoStateRow)
            Dim columnValuesArray() As Object = New Object() {RO_STATUS}
            rowSC3180204RoStateRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3180204RoStateRow)
            Return rowSC3180204RoStateRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3180204RoStateDataTable = CType(MyBase.Clone,SC3180204RoStateDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3180204RoStateDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRO_STATUS = MyBase.Columns("RO_STATUS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRO_STATUS = New Global.System.Data.DataColumn("RO_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRO_STATUS)
            Me.columnRO_STATUS.MaxLength = 5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3180204RoStateRow() As SC3180204RoStateRow
            Return CType(Me.NewRow,SC3180204RoStateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3180204RoStateRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3180204RoStateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3180204RoStateRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3180204RoStateRowChanged(Me, New SC3180204RoStateRowChangeEvent(CType(e.Row,SC3180204RoStateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3180204RoStateRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3180204RoStateRowChanging(Me, New SC3180204RoStateRowChangeEvent(CType(e.Row,SC3180204RoStateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3180204RoStateRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3180204RoStateRowDeleted(Me, New SC3180204RoStateRowChangeEvent(CType(e.Row,SC3180204RoStateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3180204RoStateRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3180204RoStateRowDeleting(Me, New SC3180204RoStateRowChangeEvent(CType(e.Row,SC3180204RoStateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3180204RoStateRow(ByVal row As SC3180204RoStateRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3180204DataSet = New SC3180204DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3180204RoStateDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3180204RegistInfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3180204RegistInfoRow)
        
        Private columnJobDtlID As Global.System.Data.DataColumn
        
        Private columnAprovalStatus As Global.System.Data.DataColumn
        
        Private columnRowLockVer As Global.System.Data.DataColumn
        
        Private columnJobInstructID As Global.System.Data.DataColumn
        
        Private columnJobInstructSeq As Global.System.Data.DataColumn
        
        Private columnItemCD As Global.System.Data.DataColumn
        
        Private columnItemsCheck As Global.System.Data.DataColumn
        
        Private columnItemsSelect_Replaced As Global.System.Data.DataColumn
        
        Private columnItemsSelect_Fixed As Global.System.Data.DataColumn
        
        Private columnItemsSelect_Cleaned As Global.System.Data.DataColumn
        
        Private columnItemsSelect_Swapped As Global.System.Data.DataColumn
        
        Private columnItemsTextBefore As Global.System.Data.DataColumn
        
        Private columnItemsTextAfter As Global.System.Data.DataColumn
        
        Private columnSVC_CD As Global.System.Data.DataColumn
        
        Private columnEDIT_FLAG As Global.System.Data.DataColumn
        
        Private columnEXCLUSION_ROW_LOCK_VERSION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3180204RegistInfo"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JobDtlIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJobDtlID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AprovalStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAprovalStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RowLockVerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRowLockVer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JobInstructIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJobInstructID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JobInstructSeqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJobInstructSeq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemCD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemsCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemsCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemsSelect_ReplacedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemsSelect_Replaced
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemsSelect_FixedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemsSelect_Fixed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemsSelect_CleanedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemsSelect_Cleaned
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemsSelect_SwappedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemsSelect_Swapped
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemsTextBeforeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemsTextBefore
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemsTextAfterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemsTextAfter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SVC_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSVC_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EDIT_FLAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEDIT_FLAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXCLUSION_ROW_LOCK_VERSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXCLUSION_ROW_LOCK_VERSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3180204RegistInfoRow
            Get
                Return CType(Me.Rows(index),SC3180204RegistInfoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204RegistInfoRowChanging As SC3180204RegistInfoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204RegistInfoRowChanged As SC3180204RegistInfoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204RegistInfoRowDeleting As SC3180204RegistInfoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204RegistInfoRowDeleted As SC3180204RegistInfoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3180204RegistInfoRow(ByVal row As SC3180204RegistInfoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3180204RegistInfoRow( _
                    ByVal JobDtlID As Decimal,  _
                    ByVal AprovalStatus As Integer,  _
                    ByVal RowLockVer As Integer,  _
                    ByVal JobInstructID As String,  _
                    ByVal JobInstructSeq As Integer,  _
                    ByVal ItemCD As String,  _
                    ByVal ItemsCheck As Integer,  _
                    ByVal ItemsSelect_Replaced As Integer,  _
                    ByVal ItemsSelect_Fixed As Integer,  _
                    ByVal ItemsSelect_Cleaned As Integer,  _
                    ByVal ItemsSelect_Swapped As Integer,  _
                    ByVal ItemsTextBefore As Decimal,  _
                    ByVal ItemsTextAfter As Decimal,  _
                    ByVal SVC_CD As String,  _
                    ByVal EDIT_FLAG As String,  _
                    ByVal EXCLUSION_ROW_LOCK_VERSION As String) As SC3180204RegistInfoRow
            Dim rowSC3180204RegistInfoRow As SC3180204RegistInfoRow = CType(Me.NewRow,SC3180204RegistInfoRow)
            Dim columnValuesArray() As Object = New Object() {JobDtlID, AprovalStatus, RowLockVer, JobInstructID, JobInstructSeq, ItemCD, ItemsCheck, ItemsSelect_Replaced, ItemsSelect_Fixed, ItemsSelect_Cleaned, ItemsSelect_Swapped, ItemsTextBefore, ItemsTextAfter, SVC_CD, EDIT_FLAG, EXCLUSION_ROW_LOCK_VERSION}
            rowSC3180204RegistInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3180204RegistInfoRow)
            Return rowSC3180204RegistInfoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3180204RegistInfoDataTable = CType(MyBase.Clone,SC3180204RegistInfoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3180204RegistInfoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnJobDtlID = MyBase.Columns("JobDtlID")
            Me.columnAprovalStatus = MyBase.Columns("AprovalStatus")
            Me.columnRowLockVer = MyBase.Columns("RowLockVer")
            Me.columnJobInstructID = MyBase.Columns("JobInstructID")
            Me.columnJobInstructSeq = MyBase.Columns("JobInstructSeq")
            Me.columnItemCD = MyBase.Columns("ItemCD")
            Me.columnItemsCheck = MyBase.Columns("ItemsCheck")
            Me.columnItemsSelect_Replaced = MyBase.Columns("ItemsSelect_Replaced")
            Me.columnItemsSelect_Fixed = MyBase.Columns("ItemsSelect_Fixed")
            Me.columnItemsSelect_Cleaned = MyBase.Columns("ItemsSelect_Cleaned")
            Me.columnItemsSelect_Swapped = MyBase.Columns("ItemsSelect_Swapped")
            Me.columnItemsTextBefore = MyBase.Columns("ItemsTextBefore")
            Me.columnItemsTextAfter = MyBase.Columns("ItemsTextAfter")
            Me.columnSVC_CD = MyBase.Columns("SVC_CD")
            Me.columnEDIT_FLAG = MyBase.Columns("EDIT_FLAG")
            Me.columnEXCLUSION_ROW_LOCK_VERSION = MyBase.Columns("EXCLUSION_ROW_LOCK_VERSION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnJobDtlID = New Global.System.Data.DataColumn("JobDtlID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJobDtlID)
            Me.columnAprovalStatus = New Global.System.Data.DataColumn("AprovalStatus", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAprovalStatus)
            Me.columnRowLockVer = New Global.System.Data.DataColumn("RowLockVer", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRowLockVer)
            Me.columnJobInstructID = New Global.System.Data.DataColumn("JobInstructID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJobInstructID)
            Me.columnJobInstructSeq = New Global.System.Data.DataColumn("JobInstructSeq", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJobInstructSeq)
            Me.columnItemCD = New Global.System.Data.DataColumn("ItemCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemCD)
            Me.columnItemsCheck = New Global.System.Data.DataColumn("ItemsCheck", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemsCheck)
            Me.columnItemsSelect_Replaced = New Global.System.Data.DataColumn("ItemsSelect_Replaced", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemsSelect_Replaced)
            Me.columnItemsSelect_Fixed = New Global.System.Data.DataColumn("ItemsSelect_Fixed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemsSelect_Fixed)
            Me.columnItemsSelect_Cleaned = New Global.System.Data.DataColumn("ItemsSelect_Cleaned", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemsSelect_Cleaned)
            Me.columnItemsSelect_Swapped = New Global.System.Data.DataColumn("ItemsSelect_Swapped", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemsSelect_Swapped)
            Me.columnItemsTextBefore = New Global.System.Data.DataColumn("ItemsTextBefore", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemsTextBefore)
            Me.columnItemsTextAfter = New Global.System.Data.DataColumn("ItemsTextAfter", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemsTextAfter)
            Me.columnSVC_CD = New Global.System.Data.DataColumn("SVC_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSVC_CD)
            Me.columnEDIT_FLAG = New Global.System.Data.DataColumn("EDIT_FLAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEDIT_FLAG)
            Me.columnEXCLUSION_ROW_LOCK_VERSION = New Global.System.Data.DataColumn("EXCLUSION_ROW_LOCK_VERSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXCLUSION_ROW_LOCK_VERSION)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3180204RegistInfoRow() As SC3180204RegistInfoRow
            Return CType(Me.NewRow,SC3180204RegistInfoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3180204RegistInfoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3180204RegistInfoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3180204RegistInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3180204RegistInfoRowChanged(Me, New SC3180204RegistInfoRowChangeEvent(CType(e.Row,SC3180204RegistInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3180204RegistInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3180204RegistInfoRowChanging(Me, New SC3180204RegistInfoRowChangeEvent(CType(e.Row,SC3180204RegistInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3180204RegistInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3180204RegistInfoRowDeleted(Me, New SC3180204RegistInfoRowChangeEvent(CType(e.Row,SC3180204RegistInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3180204RegistInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3180204RegistInfoRowDeleting(Me, New SC3180204RegistInfoRowChangeEvent(CType(e.Row,SC3180204RegistInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3180204RegistInfoRow(ByVal row As SC3180204RegistInfoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3180204DataSet = New SC3180204DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3180204RegistInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3180204PicClientDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3180204PicClientRow)
        
        Private columnACCOUNT As Global.System.Data.DataColumn
        
        Private columnUSERNAME As Global.System.Data.DataColumn
        
        Private columnOPERATIONCODE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3180204PicClient"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property USERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OPERATIONCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPERATIONCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3180204PicClientRow
            Get
                Return CType(Me.Rows(index),SC3180204PicClientRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204PicClientRowChanging As SC3180204PicClientRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204PicClientRowChanged As SC3180204PicClientRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204PicClientRowDeleting As SC3180204PicClientRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204PicClientRowDeleted As SC3180204PicClientRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3180204PicClientRow(ByVal row As SC3180204PicClientRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3180204PicClientRow(ByVal ACCOUNT As String, ByVal USERNAME As String, ByVal OPERATIONCODE As String) As SC3180204PicClientRow
            Dim rowSC3180204PicClientRow As SC3180204PicClientRow = CType(Me.NewRow,SC3180204PicClientRow)
            Dim columnValuesArray() As Object = New Object() {ACCOUNT, USERNAME, OPERATIONCODE}
            rowSC3180204PicClientRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3180204PicClientRow)
            Return rowSC3180204PicClientRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3180204PicClientDataTable = CType(MyBase.Clone,SC3180204PicClientDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3180204PicClientDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnACCOUNT = MyBase.Columns("ACCOUNT")
            Me.columnUSERNAME = MyBase.Columns("USERNAME")
            Me.columnOPERATIONCODE = MyBase.Columns("OPERATIONCODE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnACCOUNT = New Global.System.Data.DataColumn("ACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT)
            Me.columnUSERNAME = New Global.System.Data.DataColumn("USERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSERNAME)
            Me.columnOPERATIONCODE = New Global.System.Data.DataColumn("OPERATIONCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPERATIONCODE)
            Me.columnACCOUNT.Caption = "COUNT"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3180204PicClientRow() As SC3180204PicClientRow
            Return CType(Me.NewRow,SC3180204PicClientRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3180204PicClientRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3180204PicClientRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3180204PicClientRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3180204PicClientRowChanged(Me, New SC3180204PicClientRowChangeEvent(CType(e.Row,SC3180204PicClientRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3180204PicClientRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3180204PicClientRowChanging(Me, New SC3180204PicClientRowChangeEvent(CType(e.Row,SC3180204PicClientRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3180204PicClientRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3180204PicClientRowDeleted(Me, New SC3180204PicClientRowChangeEvent(CType(e.Row,SC3180204PicClientRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3180204PicClientRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3180204PicClientRowDeleting(Me, New SC3180204PicClientRowChangeEvent(CType(e.Row,SC3180204PicClientRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3180204PicClientRow(ByVal row As SC3180204PicClientRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3180204DataSet = New SC3180204DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3180204PicClientDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3180204AdviceDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3180204AdviceRow)
        
        Private columnADVICE_CONTENT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3180204Advice"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADVICE_CONTENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADVICE_CONTENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3180204AdviceRow
            Get
                Return CType(Me.Rows(index),SC3180204AdviceRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204AdviceRowChanging As SC3180204AdviceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204AdviceRowChanged As SC3180204AdviceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204AdviceRowDeleting As SC3180204AdviceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204AdviceRowDeleted As SC3180204AdviceRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3180204AdviceRow(ByVal row As SC3180204AdviceRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3180204AdviceRow(ByVal ADVICE_CONTENT As String) As SC3180204AdviceRow
            Dim rowSC3180204AdviceRow As SC3180204AdviceRow = CType(Me.NewRow,SC3180204AdviceRow)
            Dim columnValuesArray() As Object = New Object() {ADVICE_CONTENT}
            rowSC3180204AdviceRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3180204AdviceRow)
            Return rowSC3180204AdviceRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3180204AdviceDataTable = CType(MyBase.Clone,SC3180204AdviceDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3180204AdviceDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnADVICE_CONTENT = MyBase.Columns("ADVICE_CONTENT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnADVICE_CONTENT = New Global.System.Data.DataColumn("ADVICE_CONTENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADVICE_CONTENT)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3180204AdviceRow() As SC3180204AdviceRow
            Return CType(Me.NewRow,SC3180204AdviceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3180204AdviceRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3180204AdviceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3180204AdviceRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3180204AdviceRowChanged(Me, New SC3180204AdviceRowChangeEvent(CType(e.Row,SC3180204AdviceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3180204AdviceRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3180204AdviceRowChanging(Me, New SC3180204AdviceRowChangeEvent(CType(e.Row,SC3180204AdviceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3180204AdviceRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3180204AdviceRowDeleted(Me, New SC3180204AdviceRowChangeEvent(CType(e.Row,SC3180204AdviceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3180204AdviceRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3180204AdviceRowDeleting(Me, New SC3180204AdviceRowChangeEvent(CType(e.Row,SC3180204AdviceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3180204AdviceRow(ByVal row As SC3180204AdviceRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3180204DataSet = New SC3180204DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3180204AdviceDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3180204IsAllJobStartByChipDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3180204IsAllJobStartByChipRow)
        
        Private columnCNT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3180204IsAllJobStartByChip"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3180204IsAllJobStartByChipRow
            Get
                Return CType(Me.Rows(index),SC3180204IsAllJobStartByChipRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204IsAllJobStartByChipRowChanging As SC3180204IsAllJobStartByChipRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204IsAllJobStartByChipRowChanged As SC3180204IsAllJobStartByChipRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204IsAllJobStartByChipRowDeleting As SC3180204IsAllJobStartByChipRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204IsAllJobStartByChipRowDeleted As SC3180204IsAllJobStartByChipRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3180204IsAllJobStartByChipRow(ByVal row As SC3180204IsAllJobStartByChipRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3180204IsAllJobStartByChipRow(ByVal CNT As Integer) As SC3180204IsAllJobStartByChipRow
            Dim rowSC3180204IsAllJobStartByChipRow As SC3180204IsAllJobStartByChipRow = CType(Me.NewRow,SC3180204IsAllJobStartByChipRow)
            Dim columnValuesArray() As Object = New Object() {CNT}
            rowSC3180204IsAllJobStartByChipRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3180204IsAllJobStartByChipRow)
            Return rowSC3180204IsAllJobStartByChipRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3180204IsAllJobStartByChipDataTable = CType(MyBase.Clone,SC3180204IsAllJobStartByChipDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3180204IsAllJobStartByChipDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCNT = MyBase.Columns("CNT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCNT = New Global.System.Data.DataColumn("CNT", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCNT)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3180204IsAllJobStartByChipRow() As SC3180204IsAllJobStartByChipRow
            Return CType(Me.NewRow,SC3180204IsAllJobStartByChipRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3180204IsAllJobStartByChipRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3180204IsAllJobStartByChipRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3180204IsAllJobStartByChipRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3180204IsAllJobStartByChipRowChanged(Me, New SC3180204IsAllJobStartByChipRowChangeEvent(CType(e.Row,SC3180204IsAllJobStartByChipRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3180204IsAllJobStartByChipRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3180204IsAllJobStartByChipRowChanging(Me, New SC3180204IsAllJobStartByChipRowChangeEvent(CType(e.Row,SC3180204IsAllJobStartByChipRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3180204IsAllJobStartByChipRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3180204IsAllJobStartByChipRowDeleted(Me, New SC3180204IsAllJobStartByChipRowChangeEvent(CType(e.Row,SC3180204IsAllJobStartByChipRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3180204IsAllJobStartByChipRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3180204IsAllJobStartByChipRowDeleting(Me, New SC3180204IsAllJobStartByChipRowChangeEvent(CType(e.Row,SC3180204IsAllJobStartByChipRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3180204IsAllJobStartByChipRow(ByVal row As SC3180204IsAllJobStartByChipRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3180204DataSet = New SC3180204DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3180204IsAllJobStartByChipDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3180204InspectCodeMergeDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3180204InspectCodeMergeRow)
        
        Private columnJOB_DTL_ID As Global.System.Data.DataColumn
        
        Private columnRO_STATUS As Global.System.Data.DataColumn
        
        Private columnINSPECTION_STATUS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3180204InspectCodeMerge"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JOB_DTL_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJOB_DTL_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RO_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRO_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPECTION_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPECTION_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3180204InspectCodeMergeRow
            Get
                Return CType(Me.Rows(index),SC3180204InspectCodeMergeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204InspectCodeMergeRowChanging As SC3180204InspectCodeMergeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204InspectCodeMergeRowChanged As SC3180204InspectCodeMergeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204InspectCodeMergeRowDeleting As SC3180204InspectCodeMergeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204InspectCodeMergeRowDeleted As SC3180204InspectCodeMergeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3180204InspectCodeMergeRow(ByVal row As SC3180204InspectCodeMergeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3180204InspectCodeMergeRow(ByVal JOB_DTL_ID As String, ByVal RO_STATUS As String, ByVal INSPECTION_STATUS As String) As SC3180204InspectCodeMergeRow
            Dim rowSC3180204InspectCodeMergeRow As SC3180204InspectCodeMergeRow = CType(Me.NewRow,SC3180204InspectCodeMergeRow)
            Dim columnValuesArray() As Object = New Object() {JOB_DTL_ID, RO_STATUS, INSPECTION_STATUS}
            rowSC3180204InspectCodeMergeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3180204InspectCodeMergeRow)
            Return rowSC3180204InspectCodeMergeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3180204InspectCodeMergeDataTable = CType(MyBase.Clone,SC3180204InspectCodeMergeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3180204InspectCodeMergeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnJOB_DTL_ID = MyBase.Columns("JOB_DTL_ID")
            Me.columnRO_STATUS = MyBase.Columns("RO_STATUS")
            Me.columnINSPECTION_STATUS = MyBase.Columns("INSPECTION_STATUS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnJOB_DTL_ID = New Global.System.Data.DataColumn("JOB_DTL_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJOB_DTL_ID)
            Me.columnRO_STATUS = New Global.System.Data.DataColumn("RO_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRO_STATUS)
            Me.columnINSPECTION_STATUS = New Global.System.Data.DataColumn("INSPECTION_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPECTION_STATUS)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3180204InspectCodeMergeRow() As SC3180204InspectCodeMergeRow
            Return CType(Me.NewRow,SC3180204InspectCodeMergeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3180204InspectCodeMergeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3180204InspectCodeMergeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3180204InspectCodeMergeRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3180204InspectCodeMergeRowChanged(Me, New SC3180204InspectCodeMergeRowChangeEvent(CType(e.Row,SC3180204InspectCodeMergeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3180204InspectCodeMergeRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3180204InspectCodeMergeRowChanging(Me, New SC3180204InspectCodeMergeRowChangeEvent(CType(e.Row,SC3180204InspectCodeMergeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3180204InspectCodeMergeRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3180204InspectCodeMergeRowDeleted(Me, New SC3180204InspectCodeMergeRowChangeEvent(CType(e.Row,SC3180204InspectCodeMergeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3180204InspectCodeMergeRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3180204InspectCodeMergeRowDeleting(Me, New SC3180204InspectCodeMergeRowChangeEvent(CType(e.Row,SC3180204InspectCodeMergeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3180204InspectCodeMergeRow(ByVal row As SC3180204InspectCodeMergeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3180204DataSet = New SC3180204DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3180204InspectCodeMergeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3180204AdviceJobDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3180204AdviceJobRow)
        
        Private columnJOB_DTL_ID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3180204AdviceJob"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JOB_DTL_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJOB_DTL_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3180204AdviceJobRow
            Get
                Return CType(Me.Rows(index),SC3180204AdviceJobRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204AdviceJobRowChanging As SC3180204AdviceJobRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204AdviceJobRowChanged As SC3180204AdviceJobRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204AdviceJobRowDeleting As SC3180204AdviceJobRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204AdviceJobRowDeleted As SC3180204AdviceJobRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3180204AdviceJobRow(ByVal row As SC3180204AdviceJobRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3180204AdviceJobRow(ByVal JOB_DTL_ID As String) As SC3180204AdviceJobRow
            Dim rowSC3180204AdviceJobRow As SC3180204AdviceJobRow = CType(Me.NewRow,SC3180204AdviceJobRow)
            Dim columnValuesArray() As Object = New Object() {JOB_DTL_ID}
            rowSC3180204AdviceJobRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3180204AdviceJobRow)
            Return rowSC3180204AdviceJobRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3180204AdviceJobDataTable = CType(MyBase.Clone,SC3180204AdviceJobDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3180204AdviceJobDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnJOB_DTL_ID = MyBase.Columns("JOB_DTL_ID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnJOB_DTL_ID = New Global.System.Data.DataColumn("JOB_DTL_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJOB_DTL_ID)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3180204AdviceJobRow() As SC3180204AdviceJobRow
            Return CType(Me.NewRow,SC3180204AdviceJobRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3180204AdviceJobRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3180204AdviceJobRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3180204AdviceJobRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3180204AdviceJobRowChanged(Me, New SC3180204AdviceJobRowChangeEvent(CType(e.Row,SC3180204AdviceJobRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3180204AdviceJobRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3180204AdviceJobRowChanging(Me, New SC3180204AdviceJobRowChangeEvent(CType(e.Row,SC3180204AdviceJobRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3180204AdviceJobRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3180204AdviceJobRowDeleted(Me, New SC3180204AdviceJobRowChangeEvent(CType(e.Row,SC3180204AdviceJobRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3180204AdviceJobRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3180204AdviceJobRowDeleting(Me, New SC3180204AdviceJobRowChangeEvent(CType(e.Row,SC3180204AdviceJobRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3180204AdviceJobRow(ByVal row As SC3180204AdviceJobRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3180204DataSet = New SC3180204DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3180204AdviceJobDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PreviosReplacementMileageDataTable
        Inherits Global.System.Data.TypedTableBase(Of PreviosReplacementMileageRow)
        
        Private columnREG_MILE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PreviosReplacementMileage"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REG_MILEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREG_MILE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PreviosReplacementMileageRow
            Get
                Return CType(Me.Rows(index),PreviosReplacementMileageRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PreviosReplacementMileageRowChanging As PreviosReplacementMileageRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PreviosReplacementMileageRowChanged As PreviosReplacementMileageRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PreviosReplacementMileageRowDeleting As PreviosReplacementMileageRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PreviosReplacementMileageRowDeleted As PreviosReplacementMileageRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPreviosReplacementMileageRow(ByVal row As PreviosReplacementMileageRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPreviosReplacementMileageRow(ByVal REG_MILE As String) As PreviosReplacementMileageRow
            Dim rowPreviosReplacementMileageRow As PreviosReplacementMileageRow = CType(Me.NewRow,PreviosReplacementMileageRow)
            Dim columnValuesArray() As Object = New Object() {REG_MILE}
            rowPreviosReplacementMileageRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPreviosReplacementMileageRow)
            Return rowPreviosReplacementMileageRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PreviosReplacementMileageDataTable = CType(MyBase.Clone,PreviosReplacementMileageDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PreviosReplacementMileageDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnREG_MILE = MyBase.Columns("REG_MILE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnREG_MILE = New Global.System.Data.DataColumn("REG_MILE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREG_MILE)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPreviosReplacementMileageRow() As PreviosReplacementMileageRow
            Return CType(Me.NewRow,PreviosReplacementMileageRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PreviosReplacementMileageRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PreviosReplacementMileageRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PreviosReplacementMileageRowChangedEvent) Is Nothing) Then
                RaiseEvent PreviosReplacementMileageRowChanged(Me, New PreviosReplacementMileageRowChangeEvent(CType(e.Row,PreviosReplacementMileageRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PreviosReplacementMileageRowChangingEvent) Is Nothing) Then
                RaiseEvent PreviosReplacementMileageRowChanging(Me, New PreviosReplacementMileageRowChangeEvent(CType(e.Row,PreviosReplacementMileageRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PreviosReplacementMileageRowDeletedEvent) Is Nothing) Then
                RaiseEvent PreviosReplacementMileageRowDeleted(Me, New PreviosReplacementMileageRowChangeEvent(CType(e.Row,PreviosReplacementMileageRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PreviosReplacementMileageRowDeletingEvent) Is Nothing) Then
                RaiseEvent PreviosReplacementMileageRowDeleting(Me, New PreviosReplacementMileageRowChangeEvent(CType(e.Row,PreviosReplacementMileageRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePreviosReplacementMileageRow(ByVal row As PreviosReplacementMileageRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3180204DataSet = New SC3180204DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PreviosReplacementMileageDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SystemSettingDataTable
        Inherits Global.System.Data.TypedTableBase(Of SystemSettingRow)
        
        Private columnSETTING_VAL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SystemSetting"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SETTING_VALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSETTING_VAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SystemSettingRow
            Get
                Return CType(Me.Rows(index),SystemSettingRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SystemSettingRowChanging As SystemSettingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SystemSettingRowChanged As SystemSettingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SystemSettingRowDeleting As SystemSettingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SystemSettingRowDeleted As SystemSettingRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSystemSettingRow(ByVal row As SystemSettingRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSystemSettingRow(ByVal SETTING_VAL As String) As SystemSettingRow
            Dim rowSystemSettingRow As SystemSettingRow = CType(Me.NewRow,SystemSettingRow)
            Dim columnValuesArray() As Object = New Object() {SETTING_VAL}
            rowSystemSettingRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSystemSettingRow)
            Return rowSystemSettingRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SystemSettingDataTable = CType(MyBase.Clone,SystemSettingDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SystemSettingDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSETTING_VAL = MyBase.Columns("SETTING_VAL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSETTING_VAL = New Global.System.Data.DataColumn("SETTING_VAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSETTING_VAL)
            Me.columnSETTING_VAL.Caption = "SETTING_VALUE"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSystemSettingRow() As SystemSettingRow
            Return CType(Me.NewRow,SystemSettingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SystemSettingRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SystemSettingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SystemSettingRowChangedEvent) Is Nothing) Then
                RaiseEvent SystemSettingRowChanged(Me, New SystemSettingRowChangeEvent(CType(e.Row,SystemSettingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SystemSettingRowChangingEvent) Is Nothing) Then
                RaiseEvent SystemSettingRowChanging(Me, New SystemSettingRowChangeEvent(CType(e.Row,SystemSettingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SystemSettingRowDeletedEvent) Is Nothing) Then
                RaiseEvent SystemSettingRowDeleted(Me, New SystemSettingRowChangeEvent(CType(e.Row,SystemSettingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SystemSettingRowDeletingEvent) Is Nothing) Then
                RaiseEvent SystemSettingRowDeleting(Me, New SystemSettingRowChangeEvent(CType(e.Row,SystemSettingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSystemSettingRow(ByVal row As SystemSettingRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3180204DataSet = New SC3180204DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SystemSettingDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3180204PreviousPartsReplaceDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3180204PreviousPartsReplaceRow)
        
        Private columnINSPEC_ITEM_CD As Global.System.Data.DataColumn
        
        Private columnRO_NUM As Global.System.Data.DataColumn
        
        Private columnREPLACE_MILE As Global.System.Data.DataColumn
        
        Private columnREPLACE_DATE As Global.System.Data.DataColumn
        
        Private columnPREVIOUS_REPLACE_MILE As Global.System.Data.DataColumn
        
        Private columnPREVIOUS_REPLACE_DATE As Global.System.Data.DataColumn
        
        Private columnROW_LOCK_VERSION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3180204PreviousPartsReplace"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPEC_ITEM_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPEC_ITEM_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RO_NUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRO_NUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REPLACE_MILEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPLACE_MILE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REPLACE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPLACE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PREVIOUS_REPLACE_MILEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPREVIOUS_REPLACE_MILE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PREVIOUS_REPLACE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPREVIOUS_REPLACE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ROW_LOCK_VERSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROW_LOCK_VERSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3180204PreviousPartsReplaceRow
            Get
                Return CType(Me.Rows(index),SC3180204PreviousPartsReplaceRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204PreviousPartsReplaceRowChanging As SC3180204PreviousPartsReplaceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204PreviousPartsReplaceRowChanged As SC3180204PreviousPartsReplaceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204PreviousPartsReplaceRowDeleting As SC3180204PreviousPartsReplaceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204PreviousPartsReplaceRowDeleted As SC3180204PreviousPartsReplaceRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3180204PreviousPartsReplaceRow(ByVal row As SC3180204PreviousPartsReplaceRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3180204PreviousPartsReplaceRow(ByVal INSPEC_ITEM_CD As String, ByVal RO_NUM As String, ByVal REPLACE_MILE As String, ByVal REPLACE_DATE As String, ByVal PREVIOUS_REPLACE_MILE As String, ByVal PREVIOUS_REPLACE_DATE As String, ByVal ROW_LOCK_VERSION As String) As SC3180204PreviousPartsReplaceRow
            Dim rowSC3180204PreviousPartsReplaceRow As SC3180204PreviousPartsReplaceRow = CType(Me.NewRow,SC3180204PreviousPartsReplaceRow)
            Dim columnValuesArray() As Object = New Object() {INSPEC_ITEM_CD, RO_NUM, REPLACE_MILE, REPLACE_DATE, PREVIOUS_REPLACE_MILE, PREVIOUS_REPLACE_DATE, ROW_LOCK_VERSION}
            rowSC3180204PreviousPartsReplaceRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3180204PreviousPartsReplaceRow)
            Return rowSC3180204PreviousPartsReplaceRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3180204PreviousPartsReplaceDataTable = CType(MyBase.Clone,SC3180204PreviousPartsReplaceDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3180204PreviousPartsReplaceDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnINSPEC_ITEM_CD = MyBase.Columns("INSPEC_ITEM_CD")
            Me.columnRO_NUM = MyBase.Columns("RO_NUM")
            Me.columnREPLACE_MILE = MyBase.Columns("REPLACE_MILE")
            Me.columnREPLACE_DATE = MyBase.Columns("REPLACE_DATE")
            Me.columnPREVIOUS_REPLACE_MILE = MyBase.Columns("PREVIOUS_REPLACE_MILE")
            Me.columnPREVIOUS_REPLACE_DATE = MyBase.Columns("PREVIOUS_REPLACE_DATE")
            Me.columnROW_LOCK_VERSION = MyBase.Columns("ROW_LOCK_VERSION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnINSPEC_ITEM_CD = New Global.System.Data.DataColumn("INSPEC_ITEM_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPEC_ITEM_CD)
            Me.columnRO_NUM = New Global.System.Data.DataColumn("RO_NUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRO_NUM)
            Me.columnREPLACE_MILE = New Global.System.Data.DataColumn("REPLACE_MILE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPLACE_MILE)
            Me.columnREPLACE_DATE = New Global.System.Data.DataColumn("REPLACE_DATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPLACE_DATE)
            Me.columnPREVIOUS_REPLACE_MILE = New Global.System.Data.DataColumn("PREVIOUS_REPLACE_MILE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPREVIOUS_REPLACE_MILE)
            Me.columnPREVIOUS_REPLACE_DATE = New Global.System.Data.DataColumn("PREVIOUS_REPLACE_DATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPREVIOUS_REPLACE_DATE)
            Me.columnROW_LOCK_VERSION = New Global.System.Data.DataColumn("ROW_LOCK_VERSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROW_LOCK_VERSION)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3180204PreviousPartsReplaceRow() As SC3180204PreviousPartsReplaceRow
            Return CType(Me.NewRow,SC3180204PreviousPartsReplaceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3180204PreviousPartsReplaceRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3180204PreviousPartsReplaceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3180204PreviousPartsReplaceRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3180204PreviousPartsReplaceRowChanged(Me, New SC3180204PreviousPartsReplaceRowChangeEvent(CType(e.Row,SC3180204PreviousPartsReplaceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3180204PreviousPartsReplaceRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3180204PreviousPartsReplaceRowChanging(Me, New SC3180204PreviousPartsReplaceRowChangeEvent(CType(e.Row,SC3180204PreviousPartsReplaceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3180204PreviousPartsReplaceRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3180204PreviousPartsReplaceRowDeleted(Me, New SC3180204PreviousPartsReplaceRowChangeEvent(CType(e.Row,SC3180204PreviousPartsReplaceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3180204PreviousPartsReplaceRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3180204PreviousPartsReplaceRowDeleting(Me, New SC3180204PreviousPartsReplaceRowChangeEvent(CType(e.Row,SC3180204PreviousPartsReplaceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3180204PreviousPartsReplaceRow(ByVal row As SC3180204PreviousPartsReplaceRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3180204DataSet = New SC3180204DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3180204PreviousPartsReplaceDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3180204InspectionNeedFlgDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3180204InspectionNeedFlgRow)
        
        Private columnINSPECTION_NEED_FLG As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3180204InspectionNeedFlg"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPECTION_NEED_FLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPECTION_NEED_FLG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3180204InspectionNeedFlgRow
            Get
                Return CType(Me.Rows(index),SC3180204InspectionNeedFlgRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204InspectionNeedFlgRowChanging As SC3180204InspectionNeedFlgRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204InspectionNeedFlgRowChanged As SC3180204InspectionNeedFlgRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204InspectionNeedFlgRowDeleting As SC3180204InspectionNeedFlgRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204InspectionNeedFlgRowDeleted As SC3180204InspectionNeedFlgRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3180204InspectionNeedFlgRow(ByVal row As SC3180204InspectionNeedFlgRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3180204InspectionNeedFlgRow(ByVal INSPECTION_NEED_FLG As String) As SC3180204InspectionNeedFlgRow
            Dim rowSC3180204InspectionNeedFlgRow As SC3180204InspectionNeedFlgRow = CType(Me.NewRow,SC3180204InspectionNeedFlgRow)
            Dim columnValuesArray() As Object = New Object() {INSPECTION_NEED_FLG}
            rowSC3180204InspectionNeedFlgRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3180204InspectionNeedFlgRow)
            Return rowSC3180204InspectionNeedFlgRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3180204InspectionNeedFlgDataTable = CType(MyBase.Clone,SC3180204InspectionNeedFlgDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3180204InspectionNeedFlgDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnINSPECTION_NEED_FLG = MyBase.Columns("INSPECTION_NEED_FLG")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnINSPECTION_NEED_FLG = New Global.System.Data.DataColumn("INSPECTION_NEED_FLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPECTION_NEED_FLG)
            Me.columnINSPECTION_NEED_FLG.Caption = "JOB_DTL_ID"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3180204InspectionNeedFlgRow() As SC3180204InspectionNeedFlgRow
            Return CType(Me.NewRow,SC3180204InspectionNeedFlgRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3180204InspectionNeedFlgRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3180204InspectionNeedFlgRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3180204InspectionNeedFlgRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3180204InspectionNeedFlgRowChanged(Me, New SC3180204InspectionNeedFlgRowChangeEvent(CType(e.Row,SC3180204InspectionNeedFlgRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3180204InspectionNeedFlgRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3180204InspectionNeedFlgRowChanging(Me, New SC3180204InspectionNeedFlgRowChangeEvent(CType(e.Row,SC3180204InspectionNeedFlgRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3180204InspectionNeedFlgRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3180204InspectionNeedFlgRowDeleted(Me, New SC3180204InspectionNeedFlgRowChangeEvent(CType(e.Row,SC3180204InspectionNeedFlgRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3180204InspectionNeedFlgRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3180204InspectionNeedFlgRowDeleting(Me, New SC3180204InspectionNeedFlgRowChangeEvent(CType(e.Row,SC3180204InspectionNeedFlgRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3180204InspectionNeedFlgRow(ByVal row As SC3180204InspectionNeedFlgRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3180204DataSet = New SC3180204DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3180204InspectionNeedFlgDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SC3180204InspectionApprovalDatetimeDataTable
        Inherits Global.System.Data.TypedTableBase(Of SC3180204InspectionApprovalDatetimeRow)
        
        Private columnINSPECTION_APPROVAL_DATETIME As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SC3180204InspectionApprovalDatetime"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPECTION_APPROVAL_DATETIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPECTION_APPROVAL_DATETIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SC3180204InspectionApprovalDatetimeRow
            Get
                Return CType(Me.Rows(index),SC3180204InspectionApprovalDatetimeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204InspectionApprovalDatetimeRowChanging As SC3180204InspectionApprovalDatetimeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204InspectionApprovalDatetimeRowChanged As SC3180204InspectionApprovalDatetimeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204InspectionApprovalDatetimeRowDeleting As SC3180204InspectionApprovalDatetimeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SC3180204InspectionApprovalDatetimeRowDeleted As SC3180204InspectionApprovalDatetimeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSC3180204InspectionApprovalDatetimeRow(ByVal row As SC3180204InspectionApprovalDatetimeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSC3180204InspectionApprovalDatetimeRow(ByVal INSPECTION_APPROVAL_DATETIME As String) As SC3180204InspectionApprovalDatetimeRow
            Dim rowSC3180204InspectionApprovalDatetimeRow As SC3180204InspectionApprovalDatetimeRow = CType(Me.NewRow,SC3180204InspectionApprovalDatetimeRow)
            Dim columnValuesArray() As Object = New Object() {INSPECTION_APPROVAL_DATETIME}
            rowSC3180204InspectionApprovalDatetimeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSC3180204InspectionApprovalDatetimeRow)
            Return rowSC3180204InspectionApprovalDatetimeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SC3180204InspectionApprovalDatetimeDataTable = CType(MyBase.Clone,SC3180204InspectionApprovalDatetimeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SC3180204InspectionApprovalDatetimeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnINSPECTION_APPROVAL_DATETIME = MyBase.Columns("INSPECTION_APPROVAL_DATETIME")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnINSPECTION_APPROVAL_DATETIME = New Global.System.Data.DataColumn("INSPECTION_APPROVAL_DATETIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPECTION_APPROVAL_DATETIME)
            Me.columnINSPECTION_APPROVAL_DATETIME.Caption = "JOB_DTL_ID"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSC3180204InspectionApprovalDatetimeRow() As SC3180204InspectionApprovalDatetimeRow
            Return CType(Me.NewRow,SC3180204InspectionApprovalDatetimeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SC3180204InspectionApprovalDatetimeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SC3180204InspectionApprovalDatetimeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SC3180204InspectionApprovalDatetimeRowChangedEvent) Is Nothing) Then
                RaiseEvent SC3180204InspectionApprovalDatetimeRowChanged(Me, New SC3180204InspectionApprovalDatetimeRowChangeEvent(CType(e.Row,SC3180204InspectionApprovalDatetimeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SC3180204InspectionApprovalDatetimeRowChangingEvent) Is Nothing) Then
                RaiseEvent SC3180204InspectionApprovalDatetimeRowChanging(Me, New SC3180204InspectionApprovalDatetimeRowChangeEvent(CType(e.Row,SC3180204InspectionApprovalDatetimeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SC3180204InspectionApprovalDatetimeRowDeletedEvent) Is Nothing) Then
                RaiseEvent SC3180204InspectionApprovalDatetimeRowDeleted(Me, New SC3180204InspectionApprovalDatetimeRowChangeEvent(CType(e.Row,SC3180204InspectionApprovalDatetimeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SC3180204InspectionApprovalDatetimeRowDeletingEvent) Is Nothing) Then
                RaiseEvent SC3180204InspectionApprovalDatetimeRowDeleting(Me, New SC3180204InspectionApprovalDatetimeRowChangeEvent(CType(e.Row,SC3180204InspectionApprovalDatetimeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSC3180204InspectionApprovalDatetimeRow(ByVal row As SC3180204InspectionApprovalDatetimeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SC3180204DataSet = New SC3180204DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SC3180204InspectionApprovalDatetimeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3180204HederInfoRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3180204HederInfo As SC3180204HederInfoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3180204HederInfo = CType(Me.Table,SC3180204HederInfoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REG_NUM() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204HederInfo.REG_NUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204HederInfo' にある列 'REG_NUM' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204HederInfo.REG_NUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACCEPTANCE_TYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204HederInfo.ACCEPTANCE_TYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204HederInfo' にある列 'ACCEPTANCE_TYPE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204HederInfo.ACCEPTANCE_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODEL_CD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204HederInfo.MODEL_CDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204HederInfo' にある列 'MODEL_CD' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204HederInfo.MODEL_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MARK() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204HederInfo.MARKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204HederInfo' にある列 'MARK' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204HederInfo.MARKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SVC_CLASS_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204HederInfo.SVC_CLASS_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204HederInfo' にある列 'SVC_CLASS_NAME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204HederInfo.SVC_CLASS_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SCHE_DELI_DATETIME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204HederInfo.SCHE_DELI_DATETIMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204HederInfo' にある列 'SCHE_DELI_DATETIME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204HederInfo.SCHE_DELI_DATETIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VISITNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204HederInfo.VISITNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204HederInfo' にある列 'VISITNAME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204HederInfo.VISITNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RSLT_SVCIN_DATETIME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204HederInfo.RSLT_SVCIN_DATETIMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204HederInfo' にある列 'RSLT_SVCIN_DATETIME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204HederInfo.RSLT_SVCIN_DATETIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USERNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204HederInfo.USERNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204HederInfo' にある列 'USERNAME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204HederInfo.USERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VISITTELNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204HederInfo.VISITTELNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204HederInfo' にある列 'VISITTELNO' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204HederInfo.VISITTELNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RSLT_DELI_DATETIME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204HederInfo.RSLT_DELI_DATETIMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204HederInfo' にある列 'RSLT_DELI_DATETIME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204HederInfo.RSLT_DELI_DATETIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTACT_PERSON_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204HederInfo.CONTACT_PERSON_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204HederInfo' にある列 'CONTACT_PERSON_NAME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204HederInfo.CONTACT_PERSON_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMP_VCL_FLG() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204HederInfo.IMP_VCL_FLGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204HederInfo' にある列 'IMP_VCL_FLG' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204HederInfo.IMP_VCL_FLGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTACT_PHONE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204HederInfo.CONTACT_PHONEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204HederInfo' にある列 'CONTACT_PHONE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204HederInfo.CONTACT_PHONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SRV_ROW_LOCK_VERSION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204HederInfo.SRV_ROW_LOCK_VERSIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204HederInfo' にある列 'SRV_ROW_LOCK_VERSION' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204HederInfo.SRV_ROW_LOCK_VERSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RO_ROW_LOCK_VERSION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204HederInfo.RO_ROW_LOCK_VERSIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204HederInfo' にある列 'RO_ROW_LOCK_VERSION' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204HederInfo.RO_ROW_LOCK_VERSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SVCIN_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204HederInfo.SVCIN_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204HederInfo' にある列 'SVCIN_ID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204HederInfo.SVCIN_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODEL_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204HederInfo.MODEL_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204HederInfo' にある列 'MODEL_NAME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204HederInfo.MODEL_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACCOUNT() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204HederInfo.ACCOUNTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204HederInfo' にある列 'ACCOUNT' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204HederInfo.ACCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OPERATIONCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204HederInfo.OPERATIONCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204HederInfo' にある列 'OPERATIONCODE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204HederInfo.OPERATIONCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREG_NUMNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204HederInfo.REG_NUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREG_NUMNull()
            Me(Me.tableSC3180204HederInfo.REG_NUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACCEPTANCE_TYPENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204HederInfo.ACCEPTANCE_TYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACCEPTANCE_TYPENull()
            Me(Me.tableSC3180204HederInfo.ACCEPTANCE_TYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMODEL_CDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204HederInfo.MODEL_CDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMODEL_CDNull()
            Me(Me.tableSC3180204HederInfo.MODEL_CDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMARKNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204HederInfo.MARKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMARKNull()
            Me(Me.tableSC3180204HederInfo.MARKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSVC_CLASS_NAMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204HederInfo.SVC_CLASS_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSVC_CLASS_NAMENull()
            Me(Me.tableSC3180204HederInfo.SVC_CLASS_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSCHE_DELI_DATETIMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204HederInfo.SCHE_DELI_DATETIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSCHE_DELI_DATETIMENull()
            Me(Me.tableSC3180204HederInfo.SCHE_DELI_DATETIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVISITNAMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204HederInfo.VISITNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVISITNAMENull()
            Me(Me.tableSC3180204HederInfo.VISITNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRSLT_SVCIN_DATETIMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204HederInfo.RSLT_SVCIN_DATETIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRSLT_SVCIN_DATETIMENull()
            Me(Me.tableSC3180204HederInfo.RSLT_SVCIN_DATETIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUSERNAMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204HederInfo.USERNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUSERNAMENull()
            Me(Me.tableSC3180204HederInfo.USERNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVISITTELNONull() As Boolean
            Return Me.IsNull(Me.tableSC3180204HederInfo.VISITTELNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVISITTELNONull()
            Me(Me.tableSC3180204HederInfo.VISITTELNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRSLT_DELI_DATETIMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204HederInfo.RSLT_DELI_DATETIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRSLT_DELI_DATETIMENull()
            Me(Me.tableSC3180204HederInfo.RSLT_DELI_DATETIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONTACT_PERSON_NAMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204HederInfo.CONTACT_PERSON_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONTACT_PERSON_NAMENull()
            Me(Me.tableSC3180204HederInfo.CONTACT_PERSON_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMP_VCL_FLGNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204HederInfo.IMP_VCL_FLGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMP_VCL_FLGNull()
            Me(Me.tableSC3180204HederInfo.IMP_VCL_FLGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONTACT_PHONENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204HederInfo.CONTACT_PHONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONTACT_PHONENull()
            Me(Me.tableSC3180204HederInfo.CONTACT_PHONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSRV_ROW_LOCK_VERSIONNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204HederInfo.SRV_ROW_LOCK_VERSIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSRV_ROW_LOCK_VERSIONNull()
            Me(Me.tableSC3180204HederInfo.SRV_ROW_LOCK_VERSIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRO_ROW_LOCK_VERSIONNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204HederInfo.RO_ROW_LOCK_VERSIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRO_ROW_LOCK_VERSIONNull()
            Me(Me.tableSC3180204HederInfo.RO_ROW_LOCK_VERSIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSVCIN_IDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204HederInfo.SVCIN_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSVCIN_IDNull()
            Me(Me.tableSC3180204HederInfo.SVCIN_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMODEL_NAMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204HederInfo.MODEL_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMODEL_NAMENull()
            Me(Me.tableSC3180204HederInfo.MODEL_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204HederInfo.ACCOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACCOUNTNull()
            Me(Me.tableSC3180204HederInfo.ACCOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOPERATIONCODENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204HederInfo.OPERATIONCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOPERATIONCODENull()
            Me(Me.tableSC3180204HederInfo.OPERATIONCODEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3180204InspectCodeRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3180204InspectCode As SC3180204InspectCodeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3180204InspectCode = CType(Me.Table,SC3180204InspectCodeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DLR_CD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.DLR_CDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'DLR_CD' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.DLR_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BRN_CD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.BRN_CDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'BRN_CD' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.BRN_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SVCIN_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.SVCIN_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'SVCIN_ID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.SVCIN_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JOB_DTL_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.JOB_DTL_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'JOB_DTL_ID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.JOB_DTL_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPECTION_NEED_FLG() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.INSPECTION_NEED_FLGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'INSPECTION_NEED_FLG' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.INSPECTION_NEED_FLGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STALL_USE_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.STALL_USE_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'STALL_USE_ID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.STALL_USE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STALL_USE_STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.STALL_USE_STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'STALL_USE_STATUS' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.STALL_USE_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JOB_INSTRUCT_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.JOB_INSTRUCT_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'JOB_INSTRUCT_ID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.JOB_INSTRUCT_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JOB_INSTRUCT_SEQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.JOB_INSTRUCT_SEQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'JOB_INSTRUCT_SEQ' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.JOB_INSTRUCT_SEQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RO_NUM() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.RO_NUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'RO_NUM' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.RO_NUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RO_SEQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.RO_SEQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'RO_SEQ' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.RO_SEQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JOB_CD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.JOB_CDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'JOB_CD' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.JOB_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JOB_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.JOB_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'JOB_NAME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.JOB_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SVC_CD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.SVC_CDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'SVC_CD' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.SVC_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODEL_CD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.MODEL_CDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'MODEL_CD' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.MODEL_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GRADE_CD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.GRADE_CDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'GRADE_CD' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.GRADE_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPEC_ITEM_CD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.INSPEC_ITEM_CDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'INSPEC_ITEM_CD' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.INSPEC_ITEM_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPEC_ITEM_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.INSPEC_ITEM_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'INSPEC_ITEM_NAME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.INSPEC_ITEM_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUB_INSPEC_ITEM_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.SUB_INSPEC_ITEM_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'SUB_INSPEC_ITEM_NAME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.SUB_INSPEC_ITEM_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISP_INSPEC_ITEM_NO_PROBLEM() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NO_PROBLEMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'DISP_INSPEC_ITEM_NO_PROBLEM' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NO_PROBLEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISP_INSPEC_ITEM_NEED_INSPEC() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NEED_INSPECColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'DISP_INSPEC_ITEM_NEED_INSPEC' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NEED_INSPECColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISP_INSPEC_ITEM_NEED_REPLACE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NEED_REPLACEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'DISP_INSPEC_ITEM_NEED_REPLACE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NEED_REPLACEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISP_INSPEC_ITEM_NEED_FIX() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NEED_FIXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'DISP_INSPEC_ITEM_NEED_FIX' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NEED_FIXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISP_INSPEC_ITEM_NEED_CLEAN() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NEED_CLEANColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'DISP_INSPEC_ITEM_NEED_CLEAN' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NEED_CLEANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISP_INSPEC_ITEM_NEED_SWAP() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NEED_SWAPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'DISP_INSPEC_ITEM_NEED_SWAP' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NEED_SWAPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISP_TEXT_PERM() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.DISP_TEXT_PERMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'DISP_TEXT_PERM' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.DISP_TEXT_PERMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PART_CD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.PART_CDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'PART_CD' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.PART_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PART_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.PART_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'PART_NAME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.PART_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APPROVAL_STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.APPROVAL_STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'APPROVAL_STATUS' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.APPROVAL_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JOB_INSTRUCT_ID1() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.JOB_INSTRUCT_ID1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'JOB_INSTRUCT_ID1' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.JOB_INSTRUCT_ID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JOB_INSTRUCT_SEQ1() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.JOB_INSTRUCT_SEQ1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'JOB_INSTRUCT_SEQ1' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.JOB_INSTRUCT_SEQ1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPEC_ITEM_CD1() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.INSPEC_ITEM_CD1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'INSPEC_ITEM_CD1' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.INSPEC_ITEM_CD1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPEC_RSLT_CD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.INSPEC_RSLT_CDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'INSPEC_RSLT_CD' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.INSPEC_RSLT_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OPERATION_RSLT_ALREADY_REPLACE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.OPERATION_RSLT_ALREADY_REPLACEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'OPERATION_RSLT_ALREADY_REPLACE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.OPERATION_RSLT_ALREADY_REPLACEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OPERATION_RSLT_ALREADY_FIX() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.OPERATION_RSLT_ALREADY_FIXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'OPERATION_RSLT_ALREADY_FIX' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.OPERATION_RSLT_ALREADY_FIXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OPERATION_RSLT_ALREADY_CLEAN() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.OPERATION_RSLT_ALREADY_CLEANColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'OPERATION_RSLT_ALREADY_CLEAN' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.OPERATION_RSLT_ALREADY_CLEANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OPERATION_RSLT_ALREADY_SWAP() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.OPERATION_RSLT_ALREADY_SWAPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'OPERATION_RSLT_ALREADY_SWAP' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.OPERATION_RSLT_ALREADY_SWAPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RSLT_VAL_BEFORE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.RSLT_VAL_BEFOREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'RSLT_VAL_BEFORE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.RSLT_VAL_BEFOREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RSLT_VAL_AFTER() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.RSLT_VAL_AFTERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'RSLT_VAL_AFTER' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.RSLT_VAL_AFTERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRN_ROW_LOCK_VERSION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.TRN_ROW_LOCK_VERSIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'TRN_ROW_LOCK_VERSION' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.TRN_ROW_LOCK_VERSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPECTION_STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.INSPECTION_STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'INSPECTION_STATUS' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.INSPECTION_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RO_STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.RO_STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'RO_STATUS' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.RO_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISP_OPE_ITEM_ALREADY_REPLACE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.DISP_OPE_ITEM_ALREADY_REPLACEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'DISP_OPE_ITEM_ALREADY_REPLACE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.DISP_OPE_ITEM_ALREADY_REPLACEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISP_OPE_ITEM_ALREADY_FIX() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.DISP_OPE_ITEM_ALREADY_FIXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'DISP_OPE_ITEM_ALREADY_FIX' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.DISP_OPE_ITEM_ALREADY_FIXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISP_OPE_ITEM_ALREADY_CLEAN() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.DISP_OPE_ITEM_ALREADY_CLEANColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'DISP_OPE_ITEM_ALREADY_CLEAN' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.DISP_OPE_ITEM_ALREADY_CLEANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISP_OPE_ITEM_ALREADY_SWAP() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.DISP_OPE_ITEM_ALREADY_SWAPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'DISP_OPE_ITEM_ALREADY_SWAP' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.DISP_OPE_ITEM_ALREADY_SWAPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISP_INSPEC_ITEM_NO_ACTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NO_ACTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'DISP_INSPEC_ITEM_NO_ACTION' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NO_ACTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EDIT_FLAG() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.EDIT_FLAGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'EDIT_FLAG' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.EDIT_FLAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXCLUSION_ROW_LOCK_VERSION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCode.EXCLUSION_ROW_LOCK_VERSIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCode' にある列 'EXCLUSION_ROW_LOCK_VERSION' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCode.EXCLUSION_ROW_LOCK_VERSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDLR_CDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.DLR_CDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDLR_CDNull()
            Me(Me.tableSC3180204InspectCode.DLR_CDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBRN_CDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.BRN_CDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBRN_CDNull()
            Me(Me.tableSC3180204InspectCode.BRN_CDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSVCIN_IDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.SVCIN_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSVCIN_IDNull()
            Me(Me.tableSC3180204InspectCode.SVCIN_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJOB_DTL_IDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.JOB_DTL_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJOB_DTL_IDNull()
            Me(Me.tableSC3180204InspectCode.JOB_DTL_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSPECTION_NEED_FLGNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.INSPECTION_NEED_FLGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSPECTION_NEED_FLGNull()
            Me(Me.tableSC3180204InspectCode.INSPECTION_NEED_FLGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTALL_USE_IDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.STALL_USE_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTALL_USE_IDNull()
            Me(Me.tableSC3180204InspectCode.STALL_USE_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTALL_USE_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.STALL_USE_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTALL_USE_STATUSNull()
            Me(Me.tableSC3180204InspectCode.STALL_USE_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJOB_INSTRUCT_IDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.JOB_INSTRUCT_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJOB_INSTRUCT_IDNull()
            Me(Me.tableSC3180204InspectCode.JOB_INSTRUCT_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJOB_INSTRUCT_SEQNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.JOB_INSTRUCT_SEQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJOB_INSTRUCT_SEQNull()
            Me(Me.tableSC3180204InspectCode.JOB_INSTRUCT_SEQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRO_NUMNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.RO_NUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRO_NUMNull()
            Me(Me.tableSC3180204InspectCode.RO_NUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRO_SEQNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.RO_SEQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRO_SEQNull()
            Me(Me.tableSC3180204InspectCode.RO_SEQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJOB_CDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.JOB_CDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJOB_CDNull()
            Me(Me.tableSC3180204InspectCode.JOB_CDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJOB_NAMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.JOB_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJOB_NAMENull()
            Me(Me.tableSC3180204InspectCode.JOB_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSVC_CDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.SVC_CDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSVC_CDNull()
            Me(Me.tableSC3180204InspectCode.SVC_CDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMODEL_CDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.MODEL_CDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMODEL_CDNull()
            Me(Me.tableSC3180204InspectCode.MODEL_CDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGRADE_CDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.GRADE_CDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGRADE_CDNull()
            Me(Me.tableSC3180204InspectCode.GRADE_CDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSPEC_ITEM_CDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.INSPEC_ITEM_CDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSPEC_ITEM_CDNull()
            Me(Me.tableSC3180204InspectCode.INSPEC_ITEM_CDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSPEC_ITEM_NAMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.INSPEC_ITEM_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSPEC_ITEM_NAMENull()
            Me(Me.tableSC3180204InspectCode.INSPEC_ITEM_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUB_INSPEC_ITEM_NAMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.SUB_INSPEC_ITEM_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUB_INSPEC_ITEM_NAMENull()
            Me(Me.tableSC3180204InspectCode.SUB_INSPEC_ITEM_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISP_INSPEC_ITEM_NO_PROBLEMNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NO_PROBLEMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISP_INSPEC_ITEM_NO_PROBLEMNull()
            Me(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NO_PROBLEMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISP_INSPEC_ITEM_NEED_INSPECNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NEED_INSPECColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISP_INSPEC_ITEM_NEED_INSPECNull()
            Me(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NEED_INSPECColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISP_INSPEC_ITEM_NEED_REPLACENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NEED_REPLACEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISP_INSPEC_ITEM_NEED_REPLACENull()
            Me(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NEED_REPLACEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISP_INSPEC_ITEM_NEED_FIXNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NEED_FIXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISP_INSPEC_ITEM_NEED_FIXNull()
            Me(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NEED_FIXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISP_INSPEC_ITEM_NEED_CLEANNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NEED_CLEANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISP_INSPEC_ITEM_NEED_CLEANNull()
            Me(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NEED_CLEANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISP_INSPEC_ITEM_NEED_SWAPNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NEED_SWAPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISP_INSPEC_ITEM_NEED_SWAPNull()
            Me(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NEED_SWAPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISP_TEXT_PERMNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.DISP_TEXT_PERMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISP_TEXT_PERMNull()
            Me(Me.tableSC3180204InspectCode.DISP_TEXT_PERMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPART_CDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.PART_CDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPART_CDNull()
            Me(Me.tableSC3180204InspectCode.PART_CDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPART_NAMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.PART_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPART_NAMENull()
            Me(Me.tableSC3180204InspectCode.PART_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPPROVAL_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.APPROVAL_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPPROVAL_STATUSNull()
            Me(Me.tableSC3180204InspectCode.APPROVAL_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJOB_INSTRUCT_ID1Null() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.JOB_INSTRUCT_ID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJOB_INSTRUCT_ID1Null()
            Me(Me.tableSC3180204InspectCode.JOB_INSTRUCT_ID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJOB_INSTRUCT_SEQ1Null() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.JOB_INSTRUCT_SEQ1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJOB_INSTRUCT_SEQ1Null()
            Me(Me.tableSC3180204InspectCode.JOB_INSTRUCT_SEQ1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSPEC_ITEM_CD1Null() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.INSPEC_ITEM_CD1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSPEC_ITEM_CD1Null()
            Me(Me.tableSC3180204InspectCode.INSPEC_ITEM_CD1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSPEC_RSLT_CDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.INSPEC_RSLT_CDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSPEC_RSLT_CDNull()
            Me(Me.tableSC3180204InspectCode.INSPEC_RSLT_CDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOPERATION_RSLT_ALREADY_REPLACENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.OPERATION_RSLT_ALREADY_REPLACEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOPERATION_RSLT_ALREADY_REPLACENull()
            Me(Me.tableSC3180204InspectCode.OPERATION_RSLT_ALREADY_REPLACEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOPERATION_RSLT_ALREADY_FIXNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.OPERATION_RSLT_ALREADY_FIXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOPERATION_RSLT_ALREADY_FIXNull()
            Me(Me.tableSC3180204InspectCode.OPERATION_RSLT_ALREADY_FIXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOPERATION_RSLT_ALREADY_CLEANNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.OPERATION_RSLT_ALREADY_CLEANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOPERATION_RSLT_ALREADY_CLEANNull()
            Me(Me.tableSC3180204InspectCode.OPERATION_RSLT_ALREADY_CLEANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOPERATION_RSLT_ALREADY_SWAPNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.OPERATION_RSLT_ALREADY_SWAPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOPERATION_RSLT_ALREADY_SWAPNull()
            Me(Me.tableSC3180204InspectCode.OPERATION_RSLT_ALREADY_SWAPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRSLT_VAL_BEFORENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.RSLT_VAL_BEFOREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRSLT_VAL_BEFORENull()
            Me(Me.tableSC3180204InspectCode.RSLT_VAL_BEFOREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRSLT_VAL_AFTERNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.RSLT_VAL_AFTERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRSLT_VAL_AFTERNull()
            Me(Me.tableSC3180204InspectCode.RSLT_VAL_AFTERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRN_ROW_LOCK_VERSIONNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.TRN_ROW_LOCK_VERSIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRN_ROW_LOCK_VERSIONNull()
            Me(Me.tableSC3180204InspectCode.TRN_ROW_LOCK_VERSIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSPECTION_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.INSPECTION_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSPECTION_STATUSNull()
            Me(Me.tableSC3180204InspectCode.INSPECTION_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRO_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.RO_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRO_STATUSNull()
            Me(Me.tableSC3180204InspectCode.RO_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISP_OPE_ITEM_ALREADY_REPLACENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.DISP_OPE_ITEM_ALREADY_REPLACEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISP_OPE_ITEM_ALREADY_REPLACENull()
            Me(Me.tableSC3180204InspectCode.DISP_OPE_ITEM_ALREADY_REPLACEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISP_OPE_ITEM_ALREADY_FIXNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.DISP_OPE_ITEM_ALREADY_FIXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISP_OPE_ITEM_ALREADY_FIXNull()
            Me(Me.tableSC3180204InspectCode.DISP_OPE_ITEM_ALREADY_FIXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISP_OPE_ITEM_ALREADY_CLEANNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.DISP_OPE_ITEM_ALREADY_CLEANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISP_OPE_ITEM_ALREADY_CLEANNull()
            Me(Me.tableSC3180204InspectCode.DISP_OPE_ITEM_ALREADY_CLEANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISP_OPE_ITEM_ALREADY_SWAPNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.DISP_OPE_ITEM_ALREADY_SWAPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISP_OPE_ITEM_ALREADY_SWAPNull()
            Me(Me.tableSC3180204InspectCode.DISP_OPE_ITEM_ALREADY_SWAPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISP_INSPEC_ITEM_NO_ACTIONNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NO_ACTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISP_INSPEC_ITEM_NO_ACTIONNull()
            Me(Me.tableSC3180204InspectCode.DISP_INSPEC_ITEM_NO_ACTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEDIT_FLAGNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.EDIT_FLAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEDIT_FLAGNull()
            Me(Me.tableSC3180204InspectCode.EDIT_FLAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXCLUSION_ROW_LOCK_VERSIONNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCode.EXCLUSION_ROW_LOCK_VERSIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXCLUSION_ROW_LOCK_VERSIONNull()
            Me(Me.tableSC3180204InspectCode.EXCLUSION_ROW_LOCK_VERSIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3180204ChkLastChipRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3180204ChkLastChip As SC3180204ChkLastChipDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3180204ChkLastChip = CType(Me.Table,SC3180204ChkLastChipDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property count() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204ChkLastChip.countColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204ChkLastChip' にある列 'COUNT' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204ChkLastChip.countColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscountNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204ChkLastChip.countColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcountNull()
            Me(Me.tableSC3180204ChkLastChip.countColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3180204tblcheckRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3180204tblcheck As SC3180204tblcheckDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3180204tblcheck = CType(Me.Table,SC3180204tblcheckDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COUNT() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204tblcheck.COUNTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204tblcheck' にある列 'COUNT' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204tblcheck.COUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204tblcheck.COUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOUNTNull()
            Me(Me.tableSC3180204tblcheck.COUNTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3180204MainteCodeListRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3180204MainteCodeList As SC3180204MainteCodeListDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3180204MainteCodeList = CType(Me.Table,SC3180204MainteCodeListDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DLR_CD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204MainteCodeList.DLR_CDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204MainteCodeList' にある列 'DLR_CD' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204MainteCodeList.DLR_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BRN_CD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204MainteCodeList.BRN_CDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204MainteCodeList' にある列 'BRN_CD' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204MainteCodeList.BRN_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SVCIN_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204MainteCodeList.SVCIN_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204MainteCodeList' にある列 'SVCIN_ID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204MainteCodeList.SVCIN_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JOB_DTL_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204MainteCodeList.JOB_DTL_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204MainteCodeList' にある列 'JOB_DTL_ID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204MainteCodeList.JOB_DTL_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JOB_DTL_SEQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204MainteCodeList.JOB_DTL_SEQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204MainteCodeList' にある列 'JOB_DTL_SEQ' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204MainteCodeList.JOB_DTL_SEQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RO_NUM() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204MainteCodeList.RO_NUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204MainteCodeList' にある列 'RO_NUM' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204MainteCodeList.RO_NUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JOB_CD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204MainteCodeList.JOB_CDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204MainteCodeList' にある列 'JOB_CD' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204MainteCodeList.JOB_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JOB_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204MainteCodeList.JOB_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204MainteCodeList' にある列 'JOB_NAME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204MainteCodeList.JOB_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JOB_STF_GROUP_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204MainteCodeList.JOB_STF_GROUP_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204MainteCodeList' にある列 'JOB_STF_GROUP_NAME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204MainteCodeList.JOB_STF_GROUP_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OPERATION_TYPE_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204MainteCodeList.OPERATION_TYPE_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204MainteCodeList' にある列 'OPERATION_TYPE_NAME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204MainteCodeList.OPERATION_TYPE_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPEC_RSLT_CD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204MainteCodeList.INSPEC_RSLT_CDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204MainteCodeList' にある列 'INSPEC_RSLT_CD' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204MainteCodeList.INSPEC_RSLT_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STALL_USE_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204MainteCodeList.STALL_USE_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204MainteCodeList' にある列 'STALL_USE_ID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204MainteCodeList.STALL_USE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STALL_USE_STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204MainteCodeList.STALL_USE_STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204MainteCodeList' にある列 'STALL_USE_STATUS' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204MainteCodeList.STALL_USE_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPECTION_NEED_FLG() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204MainteCodeList.INSPECTION_NEED_FLGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204MainteCodeList' にある列 'INSPECTION_NEED_FLG' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204MainteCodeList.INSPECTION_NEED_FLGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APPROVAL_STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204MainteCodeList.APPROVAL_STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204MainteCodeList' にある列 'APPROVAL_STATUS' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204MainteCodeList.APPROVAL_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPECTION_STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204MainteCodeList.INSPECTION_STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204MainteCodeList' にある列 'INSPECTION_STATUS' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204MainteCodeList.INSPECTION_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRN_ROW_LOCK_VERSION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204MainteCodeList.TRN_ROW_LOCK_VERSIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204MainteCodeList' にある列 'TRN_ROW_LOCK_VERSION' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204MainteCodeList.TRN_ROW_LOCK_VERSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RO_STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204MainteCodeList.RO_STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204MainteCodeList' にある列 'RO_STATUS' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204MainteCodeList.RO_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JOB_INSTRUCT_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204MainteCodeList.JOB_INSTRUCT_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204MainteCodeList' にある列 'JOB_INSTRUCT_ID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204MainteCodeList.JOB_INSTRUCT_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EDIT_FLAG() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204MainteCodeList.EDIT_FLAGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204MainteCodeList' にある列 'EDIT_FLAG' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204MainteCodeList.EDIT_FLAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXCLUSION_ROW_LOCK_VERSION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204MainteCodeList.EXCLUSION_ROW_LOCK_VERSIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204MainteCodeList' にある列 'EXCLUSION_ROW_LOCK_VERSION' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204MainteCodeList.EXCLUSION_ROW_LOCK_VERSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDLR_CDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204MainteCodeList.DLR_CDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDLR_CDNull()
            Me(Me.tableSC3180204MainteCodeList.DLR_CDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBRN_CDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204MainteCodeList.BRN_CDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBRN_CDNull()
            Me(Me.tableSC3180204MainteCodeList.BRN_CDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSVCIN_IDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204MainteCodeList.SVCIN_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSVCIN_IDNull()
            Me(Me.tableSC3180204MainteCodeList.SVCIN_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJOB_DTL_IDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204MainteCodeList.JOB_DTL_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJOB_DTL_IDNull()
            Me(Me.tableSC3180204MainteCodeList.JOB_DTL_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJOB_DTL_SEQNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204MainteCodeList.JOB_DTL_SEQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJOB_DTL_SEQNull()
            Me(Me.tableSC3180204MainteCodeList.JOB_DTL_SEQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRO_NUMNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204MainteCodeList.RO_NUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRO_NUMNull()
            Me(Me.tableSC3180204MainteCodeList.RO_NUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJOB_CDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204MainteCodeList.JOB_CDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJOB_CDNull()
            Me(Me.tableSC3180204MainteCodeList.JOB_CDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJOB_NAMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204MainteCodeList.JOB_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJOB_NAMENull()
            Me(Me.tableSC3180204MainteCodeList.JOB_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJOB_STF_GROUP_NAMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204MainteCodeList.JOB_STF_GROUP_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJOB_STF_GROUP_NAMENull()
            Me(Me.tableSC3180204MainteCodeList.JOB_STF_GROUP_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOPERATION_TYPE_NAMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204MainteCodeList.OPERATION_TYPE_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOPERATION_TYPE_NAMENull()
            Me(Me.tableSC3180204MainteCodeList.OPERATION_TYPE_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSPEC_RSLT_CDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204MainteCodeList.INSPEC_RSLT_CDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSPEC_RSLT_CDNull()
            Me(Me.tableSC3180204MainteCodeList.INSPEC_RSLT_CDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTALL_USE_IDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204MainteCodeList.STALL_USE_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTALL_USE_IDNull()
            Me(Me.tableSC3180204MainteCodeList.STALL_USE_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTALL_USE_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204MainteCodeList.STALL_USE_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTALL_USE_STATUSNull()
            Me(Me.tableSC3180204MainteCodeList.STALL_USE_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSPECTION_NEED_FLGNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204MainteCodeList.INSPECTION_NEED_FLGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSPECTION_NEED_FLGNull()
            Me(Me.tableSC3180204MainteCodeList.INSPECTION_NEED_FLGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPPROVAL_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204MainteCodeList.APPROVAL_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPPROVAL_STATUSNull()
            Me(Me.tableSC3180204MainteCodeList.APPROVAL_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSPECTION_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204MainteCodeList.INSPECTION_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSPECTION_STATUSNull()
            Me(Me.tableSC3180204MainteCodeList.INSPECTION_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRN_ROW_LOCK_VERSIONNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204MainteCodeList.TRN_ROW_LOCK_VERSIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRN_ROW_LOCK_VERSIONNull()
            Me(Me.tableSC3180204MainteCodeList.TRN_ROW_LOCK_VERSIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRO_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204MainteCodeList.RO_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRO_STATUSNull()
            Me(Me.tableSC3180204MainteCodeList.RO_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJOB_INSTRUCT_IDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204MainteCodeList.JOB_INSTRUCT_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJOB_INSTRUCT_IDNull()
            Me(Me.tableSC3180204MainteCodeList.JOB_INSTRUCT_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEDIT_FLAGNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204MainteCodeList.EDIT_FLAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEDIT_FLAGNull()
            Me(Me.tableSC3180204MainteCodeList.EDIT_FLAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXCLUSION_ROW_LOCK_VERSIONNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204MainteCodeList.EXCLUSION_ROW_LOCK_VERSIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXCLUSION_ROW_LOCK_VERSIONNull()
            Me(Me.tableSC3180204MainteCodeList.EXCLUSION_ROW_LOCK_VERSIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3180204ServiceLockVersionRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3180204ServiceLockVersion As SC3180204ServiceLockVersionDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3180204ServiceLockVersion = CType(Me.Table,SC3180204ServiceLockVersionDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ROW_LOCK_VERSION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204ServiceLockVersion.ROW_LOCK_VERSIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204ServiceLockVersion' にある列 'ROW_LOCK_VERSION' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204ServiceLockVersion.ROW_LOCK_VERSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsROW_LOCK_VERSIONNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204ServiceLockVersion.ROW_LOCK_VERSIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetROW_LOCK_VERSIONNull()
            Me(Me.tableSC3180204ServiceLockVersion.ROW_LOCK_VERSIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3180204AproveStfRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3180204AproveStf As SC3180204AproveStfDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3180204AproveStf = CType(Me.Table,SC3180204AproveStfDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACCOUNT() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204AproveStf.ACCOUNTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204AproveStf' にある列 'ACCOUNT' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204AproveStf.ACCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USERNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204AproveStf.USERNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204AproveStf' にある列 'USERNAME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204AproveStf.USERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204AproveStf.ACCOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACCOUNTNull()
            Me(Me.tableSC3180204AproveStf.ACCOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUSERNAMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204AproveStf.USERNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUSERNAMENull()
            Me(Me.tableSC3180204AproveStf.USERNAMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3180204StallUseIdRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3180204StallUseId As SC3180204StallUseIdDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3180204StallUseId = CType(Me.Table,SC3180204StallUseIdDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STALL_USE_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204StallUseId.STALL_USE_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204StallUseId' にある列 'STALL_USE_ID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204StallUseId.STALL_USE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTALL_USE_IDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204StallUseId.STALL_USE_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTALL_USE_IDNull()
            Me(Me.tableSC3180204StallUseId.STALL_USE_IDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3180204NoticeProcessingInfoRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3180204NoticeProcessingInfo As SC3180204NoticeProcessingInfoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3180204NoticeProcessingInfo = CType(Me.Table,SC3180204NoticeProcessingInfoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RO_NUM() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204NoticeProcessingInfo.RO_NUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204NoticeProcessingInfo' にある列 'RO_NUM' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204NoticeProcessingInfo.RO_NUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REG_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204NoticeProcessingInfo.REG_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204NoticeProcessingInfo' にある列 'REG_NO' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204NoticeProcessingInfo.REG_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CST_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204NoticeProcessingInfo.CST_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204NoticeProcessingInfo' にある列 'CST_NAME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204NoticeProcessingInfo.CST_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMETITLE_NAME() As String
            Get
                If Me.IsNAMETITLE_NAMENull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSC3180204NoticeProcessingInfo.NAMETITLE_NAMEColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSC3180204NoticeProcessingInfo.NAMETITLE_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POSITION_TYPE() As String
            Get
                If Me.IsPOSITION_TYPENull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSC3180204NoticeProcessingInfo.POSITION_TYPEColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSC3180204NoticeProcessingInfo.POSITION_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MERCHANDISENAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204NoticeProcessingInfo.MERCHANDISENAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204NoticeProcessingInfo' にある列 'MERCHANDISENAME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204NoticeProcessingInfo.MERCHANDISENAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRESENTTIME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204NoticeProcessingInfo.PRESENTTIMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204NoticeProcessingInfo' にある列 'PRESENTTIME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204NoticeProcessingInfo.PRESENTTIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DMS_CST_CD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204NoticeProcessingInfo.DMS_CST_CDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204NoticeProcessingInfo' にある列 'DMS_CST_CD' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204NoticeProcessingInfo.DMS_CST_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRO_NUMNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204NoticeProcessingInfo.RO_NUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRO_NUMNull()
            Me(Me.tableSC3180204NoticeProcessingInfo.RO_NUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREG_NONull() As Boolean
            Return Me.IsNull(Me.tableSC3180204NoticeProcessingInfo.REG_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREG_NONull()
            Me(Me.tableSC3180204NoticeProcessingInfo.REG_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCST_NAMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204NoticeProcessingInfo.CST_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCST_NAMENull()
            Me(Me.tableSC3180204NoticeProcessingInfo.CST_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMETITLE_NAMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204NoticeProcessingInfo.NAMETITLE_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMETITLE_NAMENull()
            Me(Me.tableSC3180204NoticeProcessingInfo.NAMETITLE_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOSITION_TYPENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204NoticeProcessingInfo.POSITION_TYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOSITION_TYPENull()
            Me(Me.tableSC3180204NoticeProcessingInfo.POSITION_TYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMERCHANDISENAMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204NoticeProcessingInfo.MERCHANDISENAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMERCHANDISENAMENull()
            Me(Me.tableSC3180204NoticeProcessingInfo.MERCHANDISENAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRESENTTIMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204NoticeProcessingInfo.PRESENTTIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRESENTTIMENull()
            Me(Me.tableSC3180204NoticeProcessingInfo.PRESENTTIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDMS_CST_CDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204NoticeProcessingInfo.DMS_CST_CDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDMS_CST_CDNull()
            Me(Me.tableSC3180204NoticeProcessingInfo.DMS_CST_CDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3180204PicSaStfRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3180204PicSaStf As SC3180204PicSaStfDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3180204PicSaStf = CType(Me.Table,SC3180204PicSaStfDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PIC_SA_STF_CD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204PicSaStf.PIC_SA_STF_CDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204PicSaStf' にある列 'PIC_SA_STF_CD' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204PicSaStf.PIC_SA_STF_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USERNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204PicSaStf.USERNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204PicSaStf' にある列 'USERNAME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204PicSaStf.USERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPIC_SA_STF_CDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204PicSaStf.PIC_SA_STF_CDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPIC_SA_STF_CDNull()
            Me(Me.tableSC3180204PicSaStf.PIC_SA_STF_CDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUSERNAMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204PicSaStf.USERNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUSERNAMENull()
            Me(Me.tableSC3180204PicSaStf.USERNAMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3180204RoStateRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3180204RoState As SC3180204RoStateDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3180204RoState = CType(Me.Table,SC3180204RoStateDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RO_STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204RoState.RO_STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204RoState' にある列 'RO_STATUS' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204RoState.RO_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRO_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204RoState.RO_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRO_STATUSNull()
            Me(Me.tableSC3180204RoState.RO_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3180204RegistInfoRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3180204RegistInfo As SC3180204RegistInfoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3180204RegistInfo = CType(Me.Table,SC3180204RegistInfoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JobDtlID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204RegistInfo.JobDtlIDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204RegistInfo' にある列 'JobDtlID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204RegistInfo.JobDtlIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AprovalStatus() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204RegistInfo.AprovalStatusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204RegistInfo' にある列 'AprovalStatus' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204RegistInfo.AprovalStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RowLockVer() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204RegistInfo.RowLockVerColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204RegistInfo' にある列 'RowLockVer' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204RegistInfo.RowLockVerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JobInstructID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204RegistInfo.JobInstructIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204RegistInfo' にある列 'JobInstructID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204RegistInfo.JobInstructIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JobInstructSeq() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204RegistInfo.JobInstructSeqColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204RegistInfo' にある列 'JobInstructSeq' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204RegistInfo.JobInstructSeqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemCD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204RegistInfo.ItemCDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204RegistInfo' にある列 'ItemCD' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204RegistInfo.ItemCDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemsCheck() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204RegistInfo.ItemsCheckColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204RegistInfo' にある列 'ItemsCheck' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204RegistInfo.ItemsCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemsSelect_Replaced() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204RegistInfo.ItemsSelect_ReplacedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204RegistInfo' にある列 'ItemsSelect_Replaced' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204RegistInfo.ItemsSelect_ReplacedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemsSelect_Fixed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204RegistInfo.ItemsSelect_FixedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204RegistInfo' にある列 'ItemsSelect_Fixed' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204RegistInfo.ItemsSelect_FixedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemsSelect_Cleaned() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204RegistInfo.ItemsSelect_CleanedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204RegistInfo' にある列 'ItemsSelect_Cleaned' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204RegistInfo.ItemsSelect_CleanedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemsSelect_Swapped() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204RegistInfo.ItemsSelect_SwappedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204RegistInfo' にある列 'ItemsSelect_Swapped' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204RegistInfo.ItemsSelect_SwappedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemsTextBefore() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204RegistInfo.ItemsTextBeforeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204RegistInfo' にある列 'ItemsTextBefore' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204RegistInfo.ItemsTextBeforeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemsTextAfter() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204RegistInfo.ItemsTextAfterColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204RegistInfo' にある列 'ItemsTextAfter' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204RegistInfo.ItemsTextAfterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SVC_CD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204RegistInfo.SVC_CDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204RegistInfo' にある列 'SVC_CD' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204RegistInfo.SVC_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EDIT_FLAG() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204RegistInfo.EDIT_FLAGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204RegistInfo' にある列 'EDIT_FLAG' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204RegistInfo.EDIT_FLAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXCLUSION_ROW_LOCK_VERSION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204RegistInfo.EXCLUSION_ROW_LOCK_VERSIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204RegistInfo' にある列 'EXCLUSION_ROW_LOCK_VERSION' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204RegistInfo.EXCLUSION_ROW_LOCK_VERSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJobDtlIDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204RegistInfo.JobDtlIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJobDtlIDNull()
            Me(Me.tableSC3180204RegistInfo.JobDtlIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAprovalStatusNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204RegistInfo.AprovalStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAprovalStatusNull()
            Me(Me.tableSC3180204RegistInfo.AprovalStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRowLockVerNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204RegistInfo.RowLockVerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRowLockVerNull()
            Me(Me.tableSC3180204RegistInfo.RowLockVerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJobInstructIDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204RegistInfo.JobInstructIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJobInstructIDNull()
            Me(Me.tableSC3180204RegistInfo.JobInstructIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJobInstructSeqNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204RegistInfo.JobInstructSeqColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJobInstructSeqNull()
            Me(Me.tableSC3180204RegistInfo.JobInstructSeqColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItemCDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204RegistInfo.ItemCDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItemCDNull()
            Me(Me.tableSC3180204RegistInfo.ItemCDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItemsCheckNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204RegistInfo.ItemsCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItemsCheckNull()
            Me(Me.tableSC3180204RegistInfo.ItemsCheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItemsSelect_ReplacedNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204RegistInfo.ItemsSelect_ReplacedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItemsSelect_ReplacedNull()
            Me(Me.tableSC3180204RegistInfo.ItemsSelect_ReplacedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItemsSelect_FixedNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204RegistInfo.ItemsSelect_FixedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItemsSelect_FixedNull()
            Me(Me.tableSC3180204RegistInfo.ItemsSelect_FixedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItemsSelect_CleanedNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204RegistInfo.ItemsSelect_CleanedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItemsSelect_CleanedNull()
            Me(Me.tableSC3180204RegistInfo.ItemsSelect_CleanedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItemsSelect_SwappedNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204RegistInfo.ItemsSelect_SwappedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItemsSelect_SwappedNull()
            Me(Me.tableSC3180204RegistInfo.ItemsSelect_SwappedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItemsTextBeforeNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204RegistInfo.ItemsTextBeforeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItemsTextBeforeNull()
            Me(Me.tableSC3180204RegistInfo.ItemsTextBeforeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItemsTextAfterNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204RegistInfo.ItemsTextAfterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItemsTextAfterNull()
            Me(Me.tableSC3180204RegistInfo.ItemsTextAfterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSVC_CDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204RegistInfo.SVC_CDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSVC_CDNull()
            Me(Me.tableSC3180204RegistInfo.SVC_CDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEDIT_FLAGNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204RegistInfo.EDIT_FLAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEDIT_FLAGNull()
            Me(Me.tableSC3180204RegistInfo.EDIT_FLAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXCLUSION_ROW_LOCK_VERSIONNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204RegistInfo.EXCLUSION_ROW_LOCK_VERSIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXCLUSION_ROW_LOCK_VERSIONNull()
            Me(Me.tableSC3180204RegistInfo.EXCLUSION_ROW_LOCK_VERSIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3180204PicClientRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3180204PicClient As SC3180204PicClientDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3180204PicClient = CType(Me.Table,SC3180204PicClientDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACCOUNT() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204PicClient.ACCOUNTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204PicClient' にある列 'ACCOUNT' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204PicClient.ACCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USERNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204PicClient.USERNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204PicClient' にある列 'USERNAME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204PicClient.USERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OPERATIONCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204PicClient.OPERATIONCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204PicClient' にある列 'OPERATIONCODE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204PicClient.OPERATIONCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204PicClient.ACCOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACCOUNTNull()
            Me(Me.tableSC3180204PicClient.ACCOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUSERNAMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204PicClient.USERNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUSERNAMENull()
            Me(Me.tableSC3180204PicClient.USERNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOPERATIONCODENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204PicClient.OPERATIONCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOPERATIONCODENull()
            Me(Me.tableSC3180204PicClient.OPERATIONCODEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3180204AdviceRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3180204Advice As SC3180204AdviceDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3180204Advice = CType(Me.Table,SC3180204AdviceDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADVICE_CONTENT() As String
            Get
                If Me.IsADVICE_CONTENTNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSC3180204Advice.ADVICE_CONTENTColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSC3180204Advice.ADVICE_CONTENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADVICE_CONTENTNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204Advice.ADVICE_CONTENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADVICE_CONTENTNull()
            Me(Me.tableSC3180204Advice.ADVICE_CONTENTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3180204IsAllJobStartByChipRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3180204IsAllJobStartByChip As SC3180204IsAllJobStartByChipDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3180204IsAllJobStartByChip = CType(Me.Table,SC3180204IsAllJobStartByChipDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CNT() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204IsAllJobStartByChip.CNTColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204IsAllJobStartByChip' にある列 'CNT' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204IsAllJobStartByChip.CNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCNTNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204IsAllJobStartByChip.CNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCNTNull()
            Me(Me.tableSC3180204IsAllJobStartByChip.CNTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3180204InspectCodeMergeRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3180204InspectCodeMerge As SC3180204InspectCodeMergeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3180204InspectCodeMerge = CType(Me.Table,SC3180204InspectCodeMergeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JOB_DTL_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCodeMerge.JOB_DTL_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCodeMerge' にある列 'JOB_DTL_ID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCodeMerge.JOB_DTL_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RO_STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCodeMerge.RO_STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCodeMerge' にある列 'RO_STATUS' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCodeMerge.RO_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPECTION_STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectCodeMerge.INSPECTION_STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectCodeMerge' にある列 'INSPECTION_STATUS' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectCodeMerge.INSPECTION_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJOB_DTL_IDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCodeMerge.JOB_DTL_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJOB_DTL_IDNull()
            Me(Me.tableSC3180204InspectCodeMerge.JOB_DTL_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRO_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCodeMerge.RO_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRO_STATUSNull()
            Me(Me.tableSC3180204InspectCodeMerge.RO_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSPECTION_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectCodeMerge.INSPECTION_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSPECTION_STATUSNull()
            Me(Me.tableSC3180204InspectCodeMerge.INSPECTION_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3180204AdviceJobRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3180204AdviceJob As SC3180204AdviceJobDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3180204AdviceJob = CType(Me.Table,SC3180204AdviceJobDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JOB_DTL_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204AdviceJob.JOB_DTL_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204AdviceJob' にある列 'JOB_DTL_ID' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204AdviceJob.JOB_DTL_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJOB_DTL_IDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204AdviceJob.JOB_DTL_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJOB_DTL_IDNull()
            Me(Me.tableSC3180204AdviceJob.JOB_DTL_IDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PreviosReplacementMileageRow
        Inherits Global.System.Data.DataRow
        
        Private tablePreviosReplacementMileage As PreviosReplacementMileageDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePreviosReplacementMileage = CType(Me.Table,PreviosReplacementMileageDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REG_MILE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePreviosReplacementMileage.REG_MILEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'PreviosReplacementMileage' にある列 'REG_MILE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tablePreviosReplacementMileage.REG_MILEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREG_MILENull() As Boolean
            Return Me.IsNull(Me.tablePreviosReplacementMileage.REG_MILEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREG_MILENull()
            Me(Me.tablePreviosReplacementMileage.REG_MILEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SystemSettingRow
        Inherits Global.System.Data.DataRow
        
        Private tableSystemSetting As SystemSettingDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSystemSetting = CType(Me.Table,SystemSettingDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SETTING_VAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableSystemSetting.SETTING_VALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SystemSetting' にある列 'SETTING_VAL' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSystemSetting.SETTING_VALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSETTING_VALNull() As Boolean
            Return Me.IsNull(Me.tableSystemSetting.SETTING_VALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSETTING_VALNull()
            Me(Me.tableSystemSetting.SETTING_VALColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3180204PreviousPartsReplaceRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3180204PreviousPartsReplace As SC3180204PreviousPartsReplaceDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3180204PreviousPartsReplace = CType(Me.Table,SC3180204PreviousPartsReplaceDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPEC_ITEM_CD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204PreviousPartsReplace.INSPEC_ITEM_CDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204PreviousPartsReplace' にある列 'INSPEC_ITEM_CD' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204PreviousPartsReplace.INSPEC_ITEM_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RO_NUM() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204PreviousPartsReplace.RO_NUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204PreviousPartsReplace' にある列 'RO_NUM' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204PreviousPartsReplace.RO_NUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REPLACE_MILE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204PreviousPartsReplace.REPLACE_MILEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204PreviousPartsReplace' にある列 'REPLACE_MILE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204PreviousPartsReplace.REPLACE_MILEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REPLACE_DATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204PreviousPartsReplace.REPLACE_DATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204PreviousPartsReplace' にある列 'REPLACE_DATE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204PreviousPartsReplace.REPLACE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PREVIOUS_REPLACE_MILE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204PreviousPartsReplace.PREVIOUS_REPLACE_MILEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204PreviousPartsReplace' にある列 'PREVIOUS_REPLACE_MILE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204PreviousPartsReplace.PREVIOUS_REPLACE_MILEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PREVIOUS_REPLACE_DATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204PreviousPartsReplace.PREVIOUS_REPLACE_DATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204PreviousPartsReplace' にある列 'PREVIOUS_REPLACE_DATE' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204PreviousPartsReplace.PREVIOUS_REPLACE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ROW_LOCK_VERSION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204PreviousPartsReplace.ROW_LOCK_VERSIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204PreviousPartsReplace' にある列 'ROW_LOCK_VERSION' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204PreviousPartsReplace.ROW_LOCK_VERSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSPEC_ITEM_CDNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204PreviousPartsReplace.INSPEC_ITEM_CDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSPEC_ITEM_CDNull()
            Me(Me.tableSC3180204PreviousPartsReplace.INSPEC_ITEM_CDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRO_NUMNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204PreviousPartsReplace.RO_NUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRO_NUMNull()
            Me(Me.tableSC3180204PreviousPartsReplace.RO_NUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREPLACE_MILENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204PreviousPartsReplace.REPLACE_MILEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREPLACE_MILENull()
            Me(Me.tableSC3180204PreviousPartsReplace.REPLACE_MILEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREPLACE_DATENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204PreviousPartsReplace.REPLACE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREPLACE_DATENull()
            Me(Me.tableSC3180204PreviousPartsReplace.REPLACE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPREVIOUS_REPLACE_MILENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204PreviousPartsReplace.PREVIOUS_REPLACE_MILEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPREVIOUS_REPLACE_MILENull()
            Me(Me.tableSC3180204PreviousPartsReplace.PREVIOUS_REPLACE_MILEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPREVIOUS_REPLACE_DATENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204PreviousPartsReplace.PREVIOUS_REPLACE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPREVIOUS_REPLACE_DATENull()
            Me(Me.tableSC3180204PreviousPartsReplace.PREVIOUS_REPLACE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsROW_LOCK_VERSIONNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204PreviousPartsReplace.ROW_LOCK_VERSIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetROW_LOCK_VERSIONNull()
            Me(Me.tableSC3180204PreviousPartsReplace.ROW_LOCK_VERSIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3180204InspectionNeedFlgRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3180204InspectionNeedFlg As SC3180204InspectionNeedFlgDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3180204InspectionNeedFlg = CType(Me.Table,SC3180204InspectionNeedFlgDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPECTION_NEED_FLG() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectionNeedFlg.INSPECTION_NEED_FLGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectionNeedFlg' にある列 'INSPECTION_NEED_FLG' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectionNeedFlg.INSPECTION_NEED_FLGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSPECTION_NEED_FLGNull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectionNeedFlg.INSPECTION_NEED_FLGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSPECTION_NEED_FLGNull()
            Me(Me.tableSC3180204InspectionNeedFlg.INSPECTION_NEED_FLGColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SC3180204InspectionApprovalDatetimeRow
        Inherits Global.System.Data.DataRow
        
        Private tableSC3180204InspectionApprovalDatetime As SC3180204InspectionApprovalDatetimeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSC3180204InspectionApprovalDatetime = CType(Me.Table,SC3180204InspectionApprovalDatetimeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPECTION_APPROVAL_DATETIME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSC3180204InspectionApprovalDatetime.INSPECTION_APPROVAL_DATETIMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SC3180204InspectionApprovalDatetime' にある列 'INSPECTION_APPROVAL_DATETIME' の値"& _ 
                            "は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSC3180204InspectionApprovalDatetime.INSPECTION_APPROVAL_DATETIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSPECTION_APPROVAL_DATETIMENull() As Boolean
            Return Me.IsNull(Me.tableSC3180204InspectionApprovalDatetime.INSPECTION_APPROVAL_DATETIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSPECTION_APPROVAL_DATETIMENull()
            Me(Me.tableSC3180204InspectionApprovalDatetime.INSPECTION_APPROVAL_DATETIMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3180204HederInfoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3180204HederInfoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3180204HederInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3180204HederInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3180204InspectCodeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3180204InspectCodeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3180204InspectCodeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3180204InspectCodeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3180204ChkLastChipRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3180204ChkLastChipRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3180204ChkLastChipRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3180204ChkLastChipRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3180204tblcheckRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3180204tblcheckRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3180204tblcheckRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3180204tblcheckRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3180204MainteCodeListRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3180204MainteCodeListRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3180204MainteCodeListRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3180204MainteCodeListRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3180204ServiceLockVersionRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3180204ServiceLockVersionRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3180204ServiceLockVersionRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3180204ServiceLockVersionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3180204AproveStfRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3180204AproveStfRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3180204AproveStfRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3180204AproveStfRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3180204StallUseIdRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3180204StallUseIdRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3180204StallUseIdRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3180204StallUseIdRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3180204NoticeProcessingInfoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3180204NoticeProcessingInfoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3180204NoticeProcessingInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3180204NoticeProcessingInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3180204PicSaStfRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3180204PicSaStfRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3180204PicSaStfRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3180204PicSaStfRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3180204RoStateRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3180204RoStateRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3180204RoStateRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3180204RoStateRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3180204RegistInfoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3180204RegistInfoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3180204RegistInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3180204RegistInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3180204PicClientRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3180204PicClientRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3180204PicClientRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3180204PicClientRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3180204AdviceRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3180204AdviceRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3180204AdviceRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3180204AdviceRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3180204IsAllJobStartByChipRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3180204IsAllJobStartByChipRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3180204IsAllJobStartByChipRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3180204IsAllJobStartByChipRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3180204InspectCodeMergeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3180204InspectCodeMergeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3180204InspectCodeMergeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3180204InspectCodeMergeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3180204AdviceJobRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3180204AdviceJobRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3180204AdviceJobRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3180204AdviceJobRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PreviosReplacementMileageRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PreviosReplacementMileageRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PreviosReplacementMileageRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PreviosReplacementMileageRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SystemSettingRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SystemSettingRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SystemSettingRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SystemSettingRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3180204PreviousPartsReplaceRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3180204PreviousPartsReplaceRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3180204PreviousPartsReplaceRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3180204PreviousPartsReplaceRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3180204InspectionNeedFlgRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3180204InspectionNeedFlgRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3180204InspectionNeedFlgRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3180204InspectionNeedFlgRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SC3180204InspectionApprovalDatetimeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SC3180204InspectionApprovalDatetimeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SC3180204InspectionApprovalDatetimeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SC3180204InspectionApprovalDatetimeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

